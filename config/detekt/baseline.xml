<?xml version="1.0" ?>
<SmellBaseline>
  <ManuallySuppressedIssues/>
  <CurrentIssues>
    <ID>ArgumentListWrapping:AboutScreen.kt$(id = R.string.text_version_format, BuildConfig.VERSION_NAME, BuildConfig.VERSION_CODE)</ID>
    <ID>ArgumentListWrapping:AddEditBeanScreen.kt$(R.string.bean_form_roast_date_label)</ID>
    <ID>ArgumentListWrapping:AddEditBeanScreen.kt$(R.string.cd_edit_bean)</ID>
    <ID>ArgumentListWrapping:AddEditBeanScreen.kt$(R.string.label_roast_date_required)</ID>
    <ID>ArgumentListWrapping:AddEditBeanScreen.kt$(R.string.text_active_long)</ID>
    <ID>ArgumentListWrapping:AddEditBeanScreen.kt$(R.string.text_add_bean)</ID>
    <ID>ArgumentListWrapping:AddEditBeanScreen.kt$(R.string.text_inactive)</ID>
    <ID>ArgumentListWrapping:AppDatabase.kt$AppDatabase.Companion.&lt;no name provided&gt;$("CREATE INDEX IF NOT EXISTS index_basket_configuration_createdAt ON basket_configuration (createdAt)")</ID>
    <ID>ArgumentListWrapping:AppDatabase.kt$AppDatabase.Companion.&lt;no name provided&gt;$("CREATE INDEX IF NOT EXISTS index_basket_configuration_isActive ON basket_configuration (isActive)")</ID>
    <ID>ArgumentListWrapping:AppDatabase.kt$AppDatabase.Companion.&lt;no name provided&gt;$("CREATE INDEX IF NOT EXISTS index_grinder_configuration_createdAt ON grinder_configuration (createdAt)")</ID>
    <ID>ArgumentListWrapping:AppDatabase.kt$AppDatabase.Companion.&lt;no name provided&gt;$("Migration 3-&gt;4 failed: ${e.message}. This migration adds basket_configuration table and ensures all existing indices are properly aligned.", e)</ID>
    <ID>ArgumentListWrapping:AppDatabase.kt$AppDatabase.Companion.&lt;no name provided&gt;$("Migration 4-&gt;5 failed: ${e.message}. This migration fixes date format consistency in basket_configuration table.", e)</ID>
    <ID>ArgumentListWrapping:AppDatabase.kt$AppDatabase.Companion.&lt;no name provided&gt;$("Migration 5-&gt;6 failed: ${e.message}. This migration adds stepSize column to grinder_configuration table and ensures all indices are properly aligned.", e)</ID>
    <ID>ArgumentListWrapping:AppDatabase.kt$AppDatabase.Companion.&lt;no name provided&gt;$("Migration 6-&gt;7 failed: ${e.message}. This migration adds taste feedback fields to shots table.", e)</ID>
    <ID>ArgumentListWrapping:BasketConfigRepository.kt$BasketConfigRepository$("Failed to get or create default configuration", exception)</ID>
    <ID>ArgumentListWrapping:BasketConfigRepository.kt$BasketConfigRepository$(RepositoryException.DatabaseError("Failed to get or create default configuration", exception))</ID>
    <ID>ArgumentListWrapping:BasketConfigRepository.kt$BasketConfigRepository$(TAG, "saveConfig: Validation result - isValid=${validationResult.isValid}, errors=${validationResult.errors}")</ID>
    <ID>ArgumentListWrapping:BasketSettingsScreen.kt$("BasketSettingsScreen", "UI State changed: isLoading=${uiState.isLoading}, isBasketValid=${uiState.isBasketValid}, error=${uiState.error}")</ID>
    <ID>ArgumentListWrapping:BasketSettingsScreen.kt$(R.string.cd_back)</ID>
    <ID>ArgumentListWrapping:BasketSettingsScreen.kt$(R.string.text_saving_configuration)</ID>
    <ID>ArgumentListWrapping:BasketSettingsScreen.kt$(imageVector = Icons.AutoMirrored.Filled.ArrowBack, contentDescription = stringResource(R.string.cd_back))</ID>
    <ID>ArgumentListWrapping:BasketSettingsScreen.kt$(message = stringResource(R.string.text_saving_configuration), modifier = Modifier.fillMaxWidth())</ID>
    <ID>ArgumentListWrapping:BeanManagementScreen.kt$(R.string.button_delete_bean)</ID>
    <ID>ArgumentListWrapping:BeanManagementScreen.kt$(R.string.button_permanently_delete_bean)</ID>
    <ID>ArgumentListWrapping:BeanManagementScreen.kt$(R.string.text_active)</ID>
    <ID>ArgumentListWrapping:BeanManagementScreen.kt$(R.string.text_all)</ID>
    <ID>ArgumentListWrapping:BeanRepository.kt$BeanRepository$("Grinder setting cannot exceed 50 characters")</ID>
    <ID>ArgumentListWrapping:BeanRepository.kt$BeanRepository$(RepositoryException.ValidationError("Grinder setting cannot exceed 50 characters"))</ID>
    <ID>ArgumentListWrapping:CalculateGrindAdjustmentUseCase.kt$CalculateGrindAdjustmentUseCase$( grinderConfig, currentValue, timeDeviation, extractionTimeSeconds, tasteFeedback )</ID>
    <ID>ArgumentListWrapping:DatabasePopulator.kt$DatabasePopulator$(1.0, 5.0)</ID>
    <ID>ArgumentListWrapping:DatabasePopulator.kt$DatabasePopulator$(java.util.Locale.ROOT, "%.1f", (baseGrinderSetting + grinderVariation).coerceIn(1.0, 5.0))</ID>
    <ID>ArgumentListWrapping:DomainErrorTranslator.kt$DomainErrorTranslator$(R.string.error_failed_to_check_for_active_beans)</ID>
    <ID>ArgumentListWrapping:DomainErrorTranslator.kt$DomainErrorTranslator$(R.string.error_failed_to_get_active_bean_count)</ID>
    <ID>ArgumentListWrapping:DomainErrorTranslator.kt$DomainErrorTranslator$(R.string.error_failed_to_update_active_status)</ID>
    <ID>ArgumentListWrapping:DomainErrorTranslator.kt$DomainErrorTranslator$(R.string.error_failed_to_update_grinder_setting)</ID>
    <ID>ArgumentListWrapping:EquipmentSetupFlowScreen.kt$(R.string.onboarding_progress_step_title, currentStepNumber, totalSteps, getStepTitle(currentStep))</ID>
    <ID>ArgumentListWrapping:EquipmentSetupFlowScreen.kt$(currentStep)</ID>
    <ID>ArgumentListWrapping:EquipmentSetupFlowViewModel.kt$EquipmentSetupFlowViewModel$(scaleMin = grinderMin, scaleMax = grinderMax, stepSize = grinderStepSize)</ID>
    <ID>ArgumentListWrapping:EquipmentSetupSummaryScreen.kt$(R.string.summary_grinder_steps_format, calculateGrinderSteps(grinderMin, grinderMax, grinderStepSize))</ID>
    <ID>ArgumentListWrapping:EquipmentSetupSummaryScreen.kt$(grinderMin, grinderMax, grinderStepSize)</ID>
    <ID>ArgumentListWrapping:GetShotDetailsUseCase.kt$GetShotDetailsUseCase$(DomainErrorCode.UNKNOWN_ERROR, "Unexpected error getting last shot for bean", exception)</ID>
    <ID>ArgumentListWrapping:GetShotStatisticsUseCase.kt$GetShotStatisticsUseCase$(DomainErrorCode.UNKNOWN_ERROR, "Unexpected error getting brew ratio analysis", exception)</ID>
    <ID>ArgumentListWrapping:GetShotStatisticsUseCase.kt$GetShotStatisticsUseCase$(DomainErrorCode.UNKNOWN_ERROR, "Unexpected error getting extraction time analysis", exception)</ID>
    <ID>ArgumentListWrapping:GetShotStatisticsUseCase.kt$GetShotStatisticsUseCase$(DomainErrorCode.UNKNOWN_ERROR, "Unexpected error getting grinder setting analysis", exception)</ID>
    <ID>ArgumentListWrapping:GetShotStatisticsUseCase.kt$GetShotStatisticsUseCase$(DomainErrorCode.UNKNOWN_ERROR, "Unexpected error getting overall statistics", exception)</ID>
    <ID>ArgumentListWrapping:GrindAdjustmentFormatter.kt$GrindAdjustmentFormatter$(R.string.grind_adjustment_summary_coarser_multiple, recommendation.adjustmentSteps, recommendation.suggestedGrindSetting)</ID>
    <ID>ArgumentListWrapping:GrindAdjustmentFormatter.kt$GrindAdjustmentFormatter$(R.string.grind_adjustment_summary_coarser_single, recommendation.suggestedGrindSetting)</ID>
    <ID>ArgumentListWrapping:GrindAdjustmentFormatter.kt$GrindAdjustmentFormatter$(R.string.grind_adjustment_summary_finer_multiple, recommendation.adjustmentSteps, recommendation.suggestedGrindSetting)</ID>
    <ID>ArgumentListWrapping:GrindAdjustmentFormatter.kt$GrindAdjustmentFormatter$(R.string.grind_adjustment_summary_finer_single, recommendation.suggestedGrindSetting)</ID>
    <ID>ArgumentListWrapping:GrinderConfigRepository.kt$GrinderConfigRepository$("A configuration with range ${config.scaleMin}-${config.scaleMax} already exists")</ID>
    <ID>ArgumentListWrapping:GrinderConfigRepository.kt$GrinderConfigRepository$("Failed to get or create default configuration", exception)</ID>
    <ID>ArgumentListWrapping:GrinderConfigRepository.kt$GrinderConfigRepository$("Minimum scale must be less than maximum scale")</ID>
    <ID>ArgumentListWrapping:GrinderConfigRepository.kt$GrinderConfigRepository$(RepositoryException.DatabaseError("Failed to get or create default configuration", exception))</ID>
    <ID>ArgumentListWrapping:GrinderConfigRepository.kt$GrinderConfigRepository$(RepositoryException.ValidationError("Minimum scale must be less than maximum scale"))</ID>
    <ID>ArgumentListWrapping:GrinderConfigRepository.kt$GrinderConfigRepository$(TAG, "saveConfig: Duplicate config found (same range and step size), inserting new one with current timestamp")</ID>
    <ID>ArgumentListWrapping:GrinderConfigRepository.kt$GrinderConfigRepository$(TAG, "saveConfig: Validation result - isValid=${validationResult.isValid}, errors=${validationResult.errors}")</ID>
    <ID>ArgumentListWrapping:GrinderSettingsScreen.kt$("GrinderSettingsScreen", "UI State changed: isLoading=${uiState.isLoading}, isFormValid=${uiState.isFormValid}, generalError=${uiState.generalError}")</ID>
    <ID>ArgumentListWrapping:GrinderSettingsScreen.kt$(R.string.cd_back)</ID>
    <ID>ArgumentListWrapping:GrinderSettingsScreen.kt$(R.string.text_saving_configuration)</ID>
    <ID>ArgumentListWrapping:GrinderSettingsScreen.kt$(imageVector = Icons.AutoMirrored.Filled.ArrowBack, contentDescription = stringResource(R.string.cd_back))</ID>
    <ID>ArgumentListWrapping:GrinderSettingsScreen.kt$(message = stringResource(R.string.text_saving_configuration), modifier = Modifier.fillMaxWidth())</ID>
    <ID>ArgumentListWrapping:MoreScreen.kt$(Intent.createChooser(intent, context.getString(R.string.button_send_feedback)))</ID>
    <ID>ArgumentListWrapping:MoreScreen.kt$(R.string.button_send_feedback)</ID>
    <ID>ArgumentListWrapping:MoreScreen.kt$(intent, context.getString(R.string.button_send_feedback))</ID>
    <ID>ArgumentListWrapping:RecordShotUseCase.kt$RecordShotUseCase$(result.exceptionOrNull() ?: DomainException(DomainErrorCode.SHOT_RECORDING_FAILED, error))</ID>
    <ID>ArgumentListWrapping:ShotDetailsScreen.kt$( "MMM dd, HH:mm")</ID>
    <ID>ArgumentListWrapping:ShotDetailsScreen.kt$( DateTimeFormatter.ofPattern( "MMM dd, HH:mm"))</ID>
    <ID>ArgumentListWrapping:ShotDetailsScreen.kt$("MMM dd, HH:mm")</ID>
    <ID>ArgumentListWrapping:ShotDetailsScreen.kt$(DateTimeFormatter.ofPattern("MMM dd, HH:mm"))</ID>
    <ID>ArgumentListWrapping:ShotDetailsScreen.kt$(R.string.cd_save)</ID>
    <ID>ArgumentListWrapping:ShotDetailsScreen.kt$(R.string.cd_saving)</ID>
    <ID>ArgumentListWrapping:ShotDetailsScreen.kt$(R.string.format_deviation_display, if (deviation &gt;= 0) "+" else "", format.format(deviation) + suffix)</ID>
    <ID>ArgumentListWrapping:ShotDetailsScreen.kt$(R.string.format_next_shot, nextShot.timestamp.format(DateTimeFormatter.ofPattern("MMM dd, HH:mm")), nextShot.getFormattedBrewRatio())</ID>
    <ID>ArgumentListWrapping:ShotDetailsScreen.kt$(R.string.format_previous_shot, previousShot.timestamp.format( DateTimeFormatter.ofPattern( "MMM dd, HH:mm")), previousShot.getFormattedBrewRatio())</ID>
    <ID>ArgumentListWrapping:ShotDetailsScreen.kt$(R.string.format_shot_context, shotDetails.relatedShotsCount, shotDetails.relatedShotsCount, shotDetails.bean.name)</ID>
    <ID>ArgumentListWrapping:ShotDetailsScreen.kt$(modifier = Modifier .weight(1f) .padding(end = spacing.medium))</ID>
    <ID>ArgumentListWrapping:ShotHistoryFilterDialog.kt$(R.string.format_days_since_roast_filter, bean.daysSinceRoast())</ID>
    <ID>ArgumentListWrapping:ShotHistoryScreen.kt$(R.string.cd_analysis)</ID>
    <ID>ArgumentListWrapping:ShotHistoryScreen.kt$(R.string.cd_no_shots)</ID>
    <ID>ArgumentListWrapping:ShotHistoryScreen.kt$(R.string.cd_no_shots_recorded)</ID>
    <ID>ArgumentListWrapping:ShotHistoryScreen.kt$(R.string.cd_shot_list)</ID>
    <ID>ArgumentListWrapping:ShotHistoryScreen.kt$(R.string.format_avg_extraction_time_display, statistics.avgExtractionTime.toInt())</ID>
    <ID>ArgumentListWrapping:ShotHistoryScreen.kt$(R.string.format_optimal_extraction_percentage, analysis.optimalTimePercentage)</ID>
    <ID>ArgumentListWrapping:ShotHistoryScreen.kt$(R.string.format_optimal_extraction_percentage, statistics.optimalExtractionPercentage)</ID>
    <ID>ArgumentListWrapping:ShotHistoryScreen.kt$(R.string.format_optimal_extraction_percentage_long, setting.optimalExtractionPercentage)</ID>
    <ID>ArgumentListWrapping:ShotHistoryScreen.kt$(R.string.format_under_extracted_percentage, analysis.underExtractedPercentage)</ID>
    <ID>ArgumentListWrapping:ShotHistoryScreen.kt$(R.string.format_weight_in_out, shot.coffeeWeightIn.toInt(), shot.coffeeWeightOut.toInt())</ID>
    <ID>ArgumentListWrapping:ShotHistoryScreen.kt$(R.string.text_improving_consistency)</ID>
    <ID>ArgumentListWrapping:ShotHistoryScreen.kt$(R.string.text_room_for_improvement)</ID>
    <ID>ArgumentListWrapping:ShotRecordingViewModel.kt$ShotRecordingViewModel$(extractionTimeSeconds)</ID>
    <ID>ArgumentListWrapping:ShotRecordingViewModel.kt$ShotRecordingViewModel$(shot.id, shot.getFormattedBrewRatio(), shot.getFormattedExtractionTime(), extractionTimeSeconds, grinder)</ID>
    <ID>ArgumentListWrapping:ShotRepository.kt$ShotRepository$( beanId, startDate, endDate, paginationConfig.pageSize, paginationConfig.offset )</ID>
    <ID>ArgumentListWrapping:ShotRepository.kt$ShotRepository$("Minimum ratio cannot be greater than maximum ratio")</ID>
    <ID>ArgumentListWrapping:ShotRepository.kt$ShotRepository$("Minimum time cannot be greater than maximum time")</ID>
    <ID>ArgumentListWrapping:ShotRepository.kt$ShotRepository$(RepositoryException.ValidationError("Minimum ratio cannot be greater than maximum ratio"))</ID>
    <ID>ArgumentListWrapping:ShotRepository.kt$ShotRepository$(RepositoryException.ValidationError("Minimum time cannot be greater than maximum time"))</ID>
    <ID>ArgumentListWrapping:ShotRepository.kt$ShotRepository$(Result.failure(RepositoryException.ValidationError("Minimum ratio cannot be greater than maximum ratio")))</ID>
    <ID>ArgumentListWrapping:ShotRepository.kt$ShotRepository$(Result.failure(RepositoryException.ValidationError("Minimum time cannot be greater than maximum time")))</ID>
    <ID>ArgumentListWrapping:TasteFeedbackEditor.kt$(R.string.text_extraction_time_bitter_hint, extractionTimeSeconds)</ID>
    <ID>ArgumentListWrapping:TasteFeedbackEditor.kt$(R.string.text_extraction_time_perfect_hint, extractionTimeSeconds)</ID>
    <ID>ArgumentListWrapping:TasteFeedbackEditor.kt$(R.string.text_extraction_time_sour_hint, extractionTimeSeconds)</ID>
    <ID>ArgumentListWrapping:TimerComponents.kt$(R.string.format_extraction_time_with_target, formatExtractionTime(targetTime, stringResource(R.string.timer_seconds_suffix)))</ID>
    <ID>ArgumentListWrapping:TimerComponents.kt$(R.string.text_tap_to_start)</ID>
    <ID>ArgumentListWrapping:TimerComponents.kt$(R.string.text_tap_to_stop)</ID>
    <ID>ArgumentListWrapping:TimerComponents.kt$(R.string.timer_seconds_suffix)</ID>
    <ID>ArgumentListWrapping:TimerComponents.kt$(if (useLandscapeTimer) spacing.iconSmall / 2 else spacing.iconSmall)</ID>
    <ID>ArgumentListWrapping:TimerComponents.kt$(targetTime, stringResource(R.string.timer_seconds_suffix))</ID>
    <ID>ArgumentListWrapping:ValidationComponents.kt$(0.dp)</ID>
    <ID>ChainWrapping:ShotRecordingViewModel.kt$ShotRecordingViewModel$+</ID>
    <ID>ComplexCondition:BasketSettingsViewModel.kt$BasketSettingsViewModel$coffeeInMin == null || coffeeInMax == null || coffeeOutMin == null || coffeeOutMax == null</ID>
    <ID>ComplexCondition:BasketSettingsViewModel.kt$BasketSettingsViewModel$inMin != null &amp;&amp; inMax != null &amp;&amp; outMin != null &amp;&amp; outMax != null</ID>
    <ID>ComplexCondition:BasketSetup.kt$coffeeInMin.isNotBlank() &amp;&amp; coffeeInMax.isNotBlank() &amp;&amp; coffeeOutMin.isNotBlank() &amp;&amp; coffeeOutMax.isNotBlank()</ID>
    <ID>ComplexCondition:BasketSetup.kt$inMinVal != null &amp;&amp; inMaxVal != null &amp;&amp; outMinVal != null &amp;&amp; outMaxVal != null &amp;&amp; inMinVal &lt; inMaxVal &amp;&amp; outMinVal &lt; outMaxVal &amp;&amp; coffeeInMinError == null &amp;&amp; coffeeInMaxError == null &amp;&amp; coffeeOutMinError == null &amp;&amp; coffeeOutMaxError == null</ID>
    <ID>ComplexCondition:EquipmentSettingsViewModel.kt$EquipmentSettingsViewModel$!current.isFormValid || minVal == null || maxVal == null || stepSizeVal == null</ID>
    <ID>ComplexCondition:EquipmentSetupFlowViewModel.kt$EquipmentSetupFlowViewModel$grinderMin == null || grinderMax == null || grinderStepSize == null || coffeeInMin == null || coffeeInMax == null || coffeeOutMin == null || coffeeOutMax == null</ID>
    <ID>ComplexCondition:EquipmentSetupFlowViewModel.kt$EquipmentSetupFlowViewModel$inMin != null &amp;&amp; inMax != null &amp;&amp; outMin != null &amp;&amp; outMax != null</ID>
    <ID>ComplexCondition:ShotRecordingViewModel.kt$ShotRecordingViewModel$bean == null || weightIn == null || weightOut == null || grinder.isBlank()</ID>
    <ID>ComplexInterface:ShotDao.kt$ShotDao</ID>
    <ID>CyclomaticComplexMethod:AddEditBeanScreen.kt$@OptIn(ExperimentalMaterial3Api::class) @Composable fun AddEditBeanScreen( beanId: String? = null, onNavigateBack: () -&gt; Unit = {}, viewModel: AddEditBeanViewModel = hiltViewModel(), isOnboardingMode: Boolean = false, onboardingTitle: String? = null, onSubmit: ((com.jodli.coffeeshottimer.data.model.Bean) -&gt; Unit)? = null )</ID>
    <ID>CyclomaticComplexMethod:BasketSetup.kt$@Composable fun BasketSetup( coffeeInMin: String, coffeeInMax: String, coffeeOutMin: String, coffeeOutMax: String, onCoffeeInMinChange: (String) -&gt; Unit, onCoffeeInMaxChange: (String) -&gt; Unit, onCoffeeOutMinChange: (String) -&gt; Unit, onCoffeeOutMaxChange: (String) -&gt; Unit, onPresetSelected: (BasketPreset) -&gt; Unit, coffeeInMinError: String? = null, coffeeInMaxError: String? = null, coffeeOutMinError: String? = null, coffeeOutMaxError: String? = null, generalError: String? = null, validationSuggestion: String? = null, modifier: Modifier = Modifier, showDescription: Boolean = true, showPresets: Boolean = true )</ID>
    <ID>CyclomaticComplexMethod:DomainErrorTranslator.kt$DomainErrorTranslator$fun translate(errorCode: DomainErrorCode, details: String? = null): String</ID>
    <ID>CyclomaticComplexMethod:PhotoStorageManagerImpl.kt$PhotoStorageManagerImpl$override suspend fun compressImage(imageUri: Uri): Result&lt;Uri&gt;</ID>
    <ID>CyclomaticComplexMethod:ShotHistoryScreen.kt$private fun getActiveFilterTexts( filter: ShotHistoryFilter, availableBeans: List&lt;com.jodli.coffeeshottimer.data.model.Bean&gt; ): List&lt;String&gt;</ID>
    <ID>CyclomaticComplexMethod:TimerComponents.kt$@Composable private fun CircularTimerInternal( currentTime: Long, targetTime: Long?, isRunning: Boolean, showColorCoding: Boolean = true, onStartStop: (() -&gt; Unit)? = null, timerSize: Dp, modifier: Modifier = Modifier, useLandscapeTimer: Boolean = false )</ID>
    <ID>EmptyClassBlock:MemoryOptimizer.kt$MemoryUsage${ }</ID>
    <ID>EmptyClassBlock:PaginatedResult.kt$PaginatedResult${ }</ID>
    <ID>ExplicitGarbageCollectionCall:MemoryOptimizer.kt$MemoryOptimizer$gc()</ID>
    <ID>FinalNewline:AddPhotoToBeanUseCase.kt$com.jodli.coffeeshottimer.domain.usecase.AddPhotoToBeanUseCase.kt</ID>
    <ID>FinalNewline:BasketSettingsScreen.kt$com.jodli.coffeeshottimer.ui.screens.BasketSettingsScreen.kt</ID>
    <ID>FinalNewline:BasketSettingsViewModel.kt$com.jodli.coffeeshottimer.ui.viewmodel.BasketSettingsViewModel.kt</ID>
    <ID>FinalNewline:BasketValidationHelpers.kt$com.jodli.coffeeshottimer.ui.validation.BasketValidationHelpers.kt</ID>
    <ID>FinalNewline:BeanDao.kt$com.jodli.coffeeshottimer.data.dao.BeanDao.kt</ID>
    <ID>FinalNewline:BeanRepository.kt$com.jodli.coffeeshottimer.data.repository.BeanRepository.kt</ID>
    <ID>FinalNewline:BottomNavigationBar.kt$com.jodli.coffeeshottimer.ui.components.BottomNavigationBar.kt</ID>
    <ID>FinalNewline:CheckPhotoCapabilityUseCase.kt$com.jodli.coffeeshottimer.domain.usecase.CheckPhotoCapabilityUseCase.kt</ID>
    <ID>FinalNewline:CoffeeShotTimerApplication.kt$com.jodli.coffeeshottimer.CoffeeShotTimerApplication.kt</ID>
    <ID>FinalNewline:CommonComponents.kt$com.jodli.coffeeshottimer.ui.components.CommonComponents.kt</ID>
    <ID>FinalNewline:DatabaseModule.kt$com.jodli.coffeeshottimer.di.DatabaseModule.kt</ID>
    <ID>FinalNewline:DatabasePopulator.kt$com.jodli.coffeeshottimer.data.util.DatabasePopulator.kt</ID>
    <ID>FinalNewline:DebugDialog.kt$com.jodli.coffeeshottimer.ui.components.DebugDialog.kt</ID>
    <ID>FinalNewline:DebugTapDetector.kt$com.jodli.coffeeshottimer.ui.components.DebugTapDetector.kt</ID>
    <ID>FinalNewline:DebugViewModel.kt$com.jodli.coffeeshottimer.ui.viewmodel.DebugViewModel.kt</ID>
    <ID>FinalNewline:GetActiveBeansUseCase.kt$com.jodli.coffeeshottimer.domain.usecase.GetActiveBeansUseCase.kt</ID>
    <ID>FinalNewline:GetBeanHistoryUseCase.kt$com.jodli.coffeeshottimer.domain.usecase.GetBeanHistoryUseCase.kt</ID>
    <ID>FinalNewline:GetBeanPhotoUseCase.kt$com.jodli.coffeeshottimer.domain.usecase.GetBeanPhotoUseCase.kt</ID>
    <ID>FinalNewline:GetShotHistoryUseCase.kt$com.jodli.coffeeshottimer.domain.usecase.GetShotHistoryUseCase.kt</ID>
    <ID>FinalNewline:GetShotStatisticsUseCase.kt$com.jodli.coffeeshottimer.domain.usecase.GetShotStatisticsUseCase.kt</ID>
    <ID>FinalNewline:GrinderConfigDao.kt$com.jodli.coffeeshottimer.data.dao.GrinderConfigDao.kt</ID>
    <ID>FinalNewline:GrinderConfigRepository.kt$com.jodli.coffeeshottimer.data.repository.GrinderConfigRepository.kt</ID>
    <ID>FinalNewline:GrinderConfiguration.kt$com.jodli.coffeeshottimer.data.model.GrinderConfiguration.kt</ID>
    <ID>FinalNewline:GrinderValidationHelpers.kt$com.jodli.coffeeshottimer.ui.validation.GrinderValidationHelpers.kt</ID>
    <ID>FinalNewline:GuidedBeanCreationData.kt$com.jodli.coffeeshottimer.data.onboarding.GuidedBeanCreationData.kt</ID>
    <ID>FinalNewline:GuidedBeanCreationScreen.kt$com.jodli.coffeeshottimer.ui.screens.GuidedBeanCreationScreen.kt</ID>
    <ID>FinalNewline:GuidedBeanCreationViewModel.kt$com.jodli.coffeeshottimer.ui.viewmodel.GuidedBeanCreationViewModel.kt</ID>
    <ID>FinalNewline:MainActivityViewModel.kt$com.jodli.coffeeshottimer.ui.viewmodel.MainActivityViewModel.kt</ID>
    <ID>FinalNewline:MemoryOptimizer.kt$com.jodli.coffeeshottimer.data.util.MemoryOptimizer.kt</ID>
    <ID>FinalNewline:OnboardingManager.kt$com.jodli.coffeeshottimer.data.onboarding.OnboardingManager.kt</ID>
    <ID>FinalNewline:OnboardingPreferences.kt$com.jodli.coffeeshottimer.data.onboarding.OnboardingPreferences.kt</ID>
    <ID>FinalNewline:PaginatedResult.kt$com.jodli.coffeeshottimer.data.model.PaginatedResult.kt</ID>
    <ID>FinalNewline:PhotoCaptureManagerImpl.kt$com.jodli.coffeeshottimer.data.storage.PhotoCaptureManagerImpl.kt</ID>
    <ID>FinalNewline:PhotoComponents.kt$com.jodli.coffeeshottimer.ui.components.PhotoComponents.kt</ID>
    <ID>FinalNewline:PhotoStorageManager.kt$com.jodli.coffeeshottimer.data.storage.PhotoStorageManager.kt</ID>
    <ID>FinalNewline:PhotoStorageManagerImpl.kt$com.jodli.coffeeshottimer.data.storage.PhotoStorageManagerImpl.kt</ID>
    <ID>FinalNewline:RecommendationCard.kt$com.jodli.coffeeshottimer.ui.components.RecommendationCard.kt</ID>
    <ID>FinalNewline:RecommendationExtensions.kt$com.jodli.coffeeshottimer.ui.util.RecommendationExtensions.kt</ID>
    <ID>FinalNewline:RecommendationFormatter.kt$com.jodli.coffeeshottimer.ui.util.RecommendationFormatter.kt</ID>
    <ID>FinalNewline:RecordShotScreen.kt$com.jodli.coffeeshottimer.ui.screens.RecordShotScreen.kt</ID>
    <ID>FinalNewline:RecordShotUseCase.kt$com.jodli.coffeeshottimer.domain.usecase.RecordShotUseCase.kt</ID>
    <ID>FinalNewline:RemovePhotoFromBeanUseCase.kt$com.jodli.coffeeshottimer.domain.usecase.RemovePhotoFromBeanUseCase.kt</ID>
    <ID>FinalNewline:RepositoryModule.kt$com.jodli.coffeeshottimer.di.RepositoryModule.kt</ID>
    <ID>FinalNewline:Shot.kt$com.jodli.coffeeshottimer.data.model.Shot.kt</ID>
    <ID>FinalNewline:ShotDetailsViewModel.kt$com.jodli.coffeeshottimer.ui.viewmodel.ShotDetailsViewModel.kt</ID>
    <ID>FinalNewline:ShotHistoryFilterDialog.kt$com.jodli.coffeeshottimer.ui.components.ShotHistoryFilterDialog.kt</ID>
    <ID>FinalNewline:ShotHistoryViewModel.kt$com.jodli.coffeeshottimer.ui.viewmodel.ShotHistoryViewModel.kt</ID>
    <ID>FinalNewline:ShotRepository.kt$com.jodli.coffeeshottimer.data.repository.ShotRepository.kt</ID>
    <ID>FinalNewline:Theme.kt$com.jodli.coffeeshottimer.ui.theme.Theme.kt</ID>
    <ID>FinalNewline:TimerComponents.kt$com.jodli.coffeeshottimer.ui.components.TimerComponents.kt</ID>
    <ID>FinalNewline:Type.kt$com.jodli.coffeeshottimer.ui.theme.Type.kt</ID>
    <ID>FinalNewline:UpdateBeanUseCase.kt$com.jodli.coffeeshottimer.domain.usecase.UpdateBeanUseCase.kt</ID>
    <ID>FinalNewline:ValidationResult.kt$com.jodli.coffeeshottimer.data.model.ValidationResult.kt</ID>
    <ID>FinalNewline:WeightSliderComponents.kt$com.jodli.coffeeshottimer.ui.components.WeightSliderComponents.kt</ID>
    <ID>FunctionParameterNaming:TimerComponents.kt$timer_seconds_suffix: String = "s"</ID>
    <ID>ImportOrdering:AboutScreen.kt$import android.content.Intent import android.net.Uri import androidx.compose.foundation.layout.Arrangement import androidx.compose.foundation.layout.Column import androidx.compose.foundation.layout.Row import androidx.compose.foundation.layout.fillMaxSize import androidx.compose.foundation.layout.fillMaxWidth import androidx.compose.foundation.layout.padding import androidx.compose.foundation.layout.Spacer import androidx.compose.foundation.layout.statusBarsPadding import androidx.compose.foundation.layout.height import androidx.compose.foundation.rememberScrollState import androidx.compose.foundation.verticalScroll import androidx.compose.material.icons.Icons import androidx.compose.material.icons.automirrored.filled.ArrowBack import androidx.compose.material.icons.automirrored.filled.ArrowForward import androidx.compose.material.icons.filled.Info import androidx.compose.material.icons.filled.Public import androidx.compose.material3.Card import androidx.compose.material3.CardDefaults import androidx.compose.material3.ExperimentalMaterial3Api import androidx.compose.material3.Icon import androidx.compose.material3.IconButton import androidx.compose.material3.MaterialTheme import androidx.compose.material3.Scaffold import androidx.compose.material3.Text import androidx.compose.material3.TopAppBar import androidx.compose.material3.HorizontalDivider import androidx.compose.runtime.Composable import androidx.compose.runtime.collectAsState import androidx.compose.runtime.getValue import androidx.compose.ui.Alignment import androidx.compose.ui.Modifier import androidx.compose.ui.platform.LocalContext import androidx.compose.ui.res.stringResource import androidx.compose.ui.text.font.FontWeight import androidx.compose.ui.text.style.TextAlign import androidx.compose.ui.unit.dp import androidx.hilt.navigation.compose.hiltViewModel import com.jodli.coffeeshottimer.BuildConfig import com.jodli.coffeeshottimer.R import com.jodli.coffeeshottimer.ui.components.CoffeeCard import com.jodli.coffeeshottimer.ui.components.DebugDialog import com.jodli.coffeeshottimer.ui.components.DebugTapDetector import com.jodli.coffeeshottimer.ui.theme.LocalSpacing import com.jodli.coffeeshottimer.ui.viewmodel.DebugViewModel</ID>
    <ID>ImportOrdering:AddEditBeanScreen.kt$import androidx.activity.compose.rememberLauncherForActivityResult import androidx.activity.result.contract.ActivityResultContracts import androidx.compose.foundation.layout.Arrangement import androidx.compose.foundation.layout.Box import androidx.compose.foundation.layout.Column import androidx.compose.foundation.layout.Row import androidx.compose.foundation.layout.Spacer import androidx.compose.foundation.layout.fillMaxSize import androidx.compose.foundation.layout.fillMaxWidth import androidx.compose.foundation.layout.height import androidx.compose.foundation.layout.padding import androidx.compose.foundation.layout.statusBarsPadding import androidx.compose.foundation.rememberScrollState import androidx.compose.foundation.verticalScroll import androidx.compose.material.icons.Icons import androidx.compose.material.icons.automirrored.filled.ArrowBack import androidx.compose.material.icons.filled.DateRange import androidx.compose.material.icons.filled.Edit import androidx.compose.material.icons.filled.Error import androidx.compose.material.icons.filled.Engineering import androidx.compose.material.icons.filled.Info import androidx.compose.material.icons.filled.Settings import androidx.compose.ui.graphics.vector.ImageVector import androidx.compose.ui.res.vectorResource import com.jodli.coffeeshottimer.R import androidx.compose.material3.Card import androidx.compose.material3.CardDefaults import androidx.compose.material3.DatePicker import androidx.compose.material3.DatePickerDialog import androidx.compose.material3.ExperimentalMaterial3Api import androidx.compose.material3.Icon import androidx.compose.material3.IconButton import androidx.compose.material3.MaterialTheme import androidx.compose.material3.Switch import androidx.compose.material3.Text import androidx.compose.material3.TextButton import androidx.compose.material3.TopAppBar import androidx.compose.material3.rememberDatePickerState import androidx.compose.runtime.Composable import androidx.compose.runtime.LaunchedEffect import androidx.compose.runtime.getValue import androidx.compose.runtime.mutableStateOf import androidx.compose.runtime.remember import androidx.compose.runtime.setValue import androidx.compose.foundation.layout.size import androidx.compose.ui.Alignment import androidx.compose.ui.Modifier import androidx.compose.ui.platform.LocalContext import androidx.compose.ui.text.font.FontWeight import androidx.compose.ui.unit.dp import androidx.hilt.navigation.compose.hiltViewModel import androidx.lifecycle.compose.collectAsStateWithLifecycle import androidx.compose.ui.res.stringResource import android.net.Uri import com.jodli.coffeeshottimer.ui.components.CardHeader import com.jodli.coffeeshottimer.ui.components.CoffeeCard import com.jodli.coffeeshottimer.ui.components.CoffeePrimaryButton import com.jodli.coffeeshottimer.ui.components.CoffeeTextField import com.jodli.coffeeshottimer.ui.components.ErrorCard import com.jodli.coffeeshottimer.ui.components.LoadingIndicator import com.jodli.coffeeshottimer.ui.components.BeanPhotoSection import com.jodli.coffeeshottimer.ui.components.PhotoViewer import com.jodli.coffeeshottimer.ui.components.PhotoActionSheet import com.jodli.coffeeshottimer.ui.components.LandscapeContainer import com.jodli.coffeeshottimer.ui.theme.LocalSpacing import com.jodli.coffeeshottimer.ui.viewmodel.AddEditBeanViewModel import com.jodli.coffeeshottimer.data.model.Bean import java.time.LocalDate import java.time.format.DateTimeFormatter</ID>
    <ID>ImportOrdering:AddEditBeanViewModel.kt$import androidx.lifecycle.ViewModel import androidx.lifecycle.viewModelScope import com.jodli.coffeeshottimer.domain.usecase.AddBeanUseCase import com.jodli.coffeeshottimer.domain.usecase.UpdateBeanUseCase import com.jodli.coffeeshottimer.domain.usecase.AddPhotoToBeanUseCase import com.jodli.coffeeshottimer.domain.usecase.RemovePhotoFromBeanUseCase import com.jodli.coffeeshottimer.domain.usecase.GetBeanPhotoUseCase import com.jodli.coffeeshottimer.domain.usecase.CheckPhotoCapabilityUseCase import com.jodli.coffeeshottimer.data.storage.PhotoCaptureManager import android.content.Context import android.content.Intent import android.net.Uri import com.jodli.coffeeshottimer.R import com.jodli.coffeeshottimer.ui.validation.validateBeanNameEnhanced import com.jodli.coffeeshottimer.ui.validation.validateNotesEnhanced import com.jodli.coffeeshottimer.ui.validation.validateRoastDateEnhanced import com.jodli.coffeeshottimer.ui.components.ValidationUtils import com.jodli.coffeeshottimer.ui.validation.ValidationStringProvider import com.jodli.coffeeshottimer.ui.util.StringResourceProvider import com.jodli.coffeeshottimer.ui.util.DomainErrorTranslator import com.jodli.coffeeshottimer.data.model.Bean import dagger.hilt.android.lifecycle.HiltViewModel import kotlinx.coroutines.flow.MutableStateFlow import kotlinx.coroutines.flow.StateFlow import kotlinx.coroutines.flow.asStateFlow import kotlinx.coroutines.launch import java.time.LocalDate import javax.inject.Inject</ID>
    <ID>ImportOrdering:AppNavigation.kt$import androidx.compose.foundation.layout.Box import androidx.compose.foundation.layout.fillMaxSize import androidx.compose.material3.MaterialTheme import androidx.compose.material3.Text import androidx.compose.runtime.Composable import androidx.compose.ui.Alignment import androidx.compose.ui.Modifier import androidx.navigation.NavHostController import androidx.navigation.compose.NavHost import androidx.navigation.compose.composable import androidx.hilt.navigation.compose.hiltViewModel import com.jodli.coffeeshottimer.ui.screens.AddEditBeanScreen import com.jodli.coffeeshottimer.ui.screens.BeanManagementScreen import com.jodli.coffeeshottimer.ui.screens.IntroductionScreen import com.jodli.coffeeshottimer.ui.screens.RecordShotScreen import com.jodli.coffeeshottimer.ui.screens.ShotDetailsScreen import com.jodli.coffeeshottimer.ui.screens.ShotHistoryScreen import com.jodli.coffeeshottimer.ui.screens.EquipmentSetupFlowScreen</ID>
    <ID>ImportOrdering:BasketConfigRepository.kt$import android.util.Log import com.jodli.coffeeshottimer.data.dao.BasketConfigDao import com.jodli.coffeeshottimer.data.model.BasketConfiguration import com.jodli.coffeeshottimer.data.model.BasketPreset import com.jodli.coffeeshottimer.data.model.ValidationResult import kotlinx.coroutines.flow.Flow import kotlinx.coroutines.flow.catch import kotlinx.coroutines.flow.flow import kotlinx.coroutines.delay import javax.inject.Inject import javax.inject.Singleton</ID>
    <ID>ImportOrdering:BeanComponents.kt$import androidx.compose.foundation.layout.Arrangement import androidx.compose.foundation.layout.Column import androidx.compose.foundation.layout.Row import androidx.compose.foundation.layout.Spacer import androidx.compose.foundation.layout.fillMaxWidth import androidx.compose.foundation.layout.height import androidx.compose.foundation.layout.padding import androidx.compose.foundation.layout.size import androidx.compose.foundation.shape.RoundedCornerShape import androidx.compose.material.icons.Icons import androidx.compose.material.icons.filled.Edit import androidx.compose.material.icons.filled.Home import androidx.compose.material3.Icon import androidx.compose.material3.IconButton import androidx.compose.material3.MaterialTheme import androidx.compose.material3.Surface import androidx.compose.material3.Text import androidx.compose.runtime.Composable import androidx.compose.ui.Alignment import androidx.compose.ui.Modifier import androidx.compose.ui.graphics.vector.ImageVector import androidx.compose.ui.res.vectorResource import androidx.compose.ui.text.font.FontWeight import androidx.compose.ui.text.style.TextOverflow import androidx.compose.ui.unit.dp import androidx.compose.ui.res.stringResource import com.jodli.coffeeshottimer.R import com.jodli.coffeeshottimer.data.model.Bean import com.jodli.coffeeshottimer.ui.theme.LocalSpacing</ID>
    <ID>ImportOrdering:BeanManagementScreen.kt$import androidx.compose.foundation.layout.Arrangement import androidx.compose.foundation.layout.Box import androidx.compose.foundation.layout.Column import androidx.compose.foundation.layout.PaddingValues import androidx.compose.foundation.layout.Row import androidx.compose.foundation.layout.Spacer import androidx.compose.foundation.layout.fillMaxSize import androidx.compose.foundation.layout.fillMaxWidth import androidx.compose.foundation.layout.height import androidx.compose.foundation.layout.padding import androidx.compose.foundation.layout.size import androidx.compose.foundation.layout.statusBarsPadding import androidx.compose.foundation.layout.widthIn import androidx.compose.foundation.lazy.LazyColumn import androidx.compose.foundation.lazy.items import androidx.compose.foundation.lazy.grid.LazyVerticalGrid import androidx.compose.foundation.lazy.grid.GridCells import androidx.compose.foundation.lazy.grid.items import androidx.compose.material.icons.Icons import androidx.compose.material.icons.filled.Add import androidx.compose.material.icons.filled.Clear import androidx.compose.material.icons.filled.Delete import androidx.compose.material.icons.filled.MoreVert import androidx.compose.material.icons.filled.Search import androidx.compose.ui.graphics.vector.ImageVector import androidx.compose.ui.res.vectorResource import com.jodli.coffeeshottimer.R import androidx.compose.material3.AlertDialog import androidx.compose.material3.ExperimentalMaterial3Api import androidx.compose.material3.FilterChip import androidx.compose.material3.Icon import androidx.compose.material3.IconButton import androidx.compose.material3.MaterialTheme import androidx.compose.material3.Surface import androidx.compose.material3.Text import androidx.compose.material3.TextButton import androidx.compose.runtime.Composable import androidx.compose.runtime.getValue import androidx.compose.runtime.mutableStateOf import androidx.compose.runtime.remember import androidx.compose.runtime.setValue import androidx.compose.ui.Alignment import androidx.compose.ui.Modifier import androidx.compose.ui.text.font.FontWeight import androidx.compose.ui.unit.dp import androidx.hilt.navigation.compose.hiltViewModel import androidx.lifecycle.compose.collectAsStateWithLifecycle import androidx.compose.ui.res.stringResource import com.jodli.coffeeshottimer.data.model.Bean import com.jodli.coffeeshottimer.ui.components.BeanPhotoThumbnail import com.jodli.coffeeshottimer.ui.components.CardHeader import com.jodli.coffeeshottimer.ui.components.CoffeeCard import com.jodli.coffeeshottimer.ui.components.CoffeePrimaryButton import com.jodli.coffeeshottimer.ui.components.CoffeeSecondaryButton import com.jodli.coffeeshottimer.ui.components.CoffeeTextField import com.jodli.coffeeshottimer.ui.components.EmptyState import com.jodli.coffeeshottimer.ui.components.ErrorState import com.jodli.coffeeshottimer.ui.components.LandscapeContainer import com.jodli.coffeeshottimer.ui.components.LoadingIndicator import com.jodli.coffeeshottimer.ui.components.PhotoViewer import com.jodli.coffeeshottimer.ui.theme.LocalSpacing import com.jodli.coffeeshottimer.ui.viewmodel.BeanManagementViewModel</ID>
    <ID>ImportOrdering:BeanManagementViewModel.kt$import androidx.lifecycle.ViewModel import androidx.lifecycle.viewModelScope import com.jodli.coffeeshottimer.R import com.jodli.coffeeshottimer.data.model.Bean import com.jodli.coffeeshottimer.data.repository.BeanRepository import com.jodli.coffeeshottimer.domain.usecase.GetActiveBeansUseCase import com.jodli.coffeeshottimer.domain.usecase.GetBeanHistoryUseCase import com.jodli.coffeeshottimer.domain.usecase.UpdateBeanUseCase import com.jodli.coffeeshottimer.ui.util.StringResourceProvider import com.jodli.coffeeshottimer.ui.util.DomainErrorTranslator import com.jodli.coffeeshottimer.domain.exception.DomainException import dagger.hilt.android.lifecycle.HiltViewModel import kotlinx.coroutines.flow.MutableStateFlow import kotlinx.coroutines.flow.StateFlow import kotlinx.coroutines.flow.asStateFlow import kotlinx.coroutines.flow.catch import kotlinx.coroutines.flow.combine import kotlinx.coroutines.flow.launchIn import kotlinx.coroutines.flow.onEach import kotlinx.coroutines.launch import javax.inject.Inject</ID>
    <ID>ImportOrdering:BottomNavigationItem.kt$import androidx.compose.material.icons.Icons import androidx.compose.material.icons.automirrored.filled.List import androidx.compose.material.icons.filled.Coffee import androidx.compose.material.icons.filled.Settings import androidx.compose.runtime.Composable import androidx.compose.ui.graphics.vector.ImageVector import androidx.compose.ui.res.vectorResource import com.jodli.coffeeshottimer.R import androidx.compose.ui.res.stringResource</ID>
    <ID>ImportOrdering:CommonComponents.kt$import androidx.compose.foundation.layout.Arrangement import androidx.compose.foundation.layout.Column import androidx.compose.foundation.layout.ColumnScope import androidx.compose.foundation.layout.Row import androidx.compose.foundation.layout.Spacer import androidx.compose.foundation.layout.fillMaxWidth import androidx.compose.foundation.layout.height import androidx.compose.foundation.layout.heightIn import androidx.compose.foundation.layout.padding import androidx.compose.foundation.layout.size import androidx.compose.foundation.layout.width import androidx.compose.foundation.layout.widthIn import androidx.compose.foundation.shape.RoundedCornerShape import androidx.compose.foundation.text.KeyboardOptions import androidx.compose.material.icons.Icons import androidx.compose.material.icons.filled.Error import androidx.compose.material3.Button import androidx.compose.material3.Card import androidx.compose.material3.CardColors import androidx.compose.material3.CardDefaults import androidx.compose.material3.CircularProgressIndicator import androidx.compose.material3.Icon import androidx.compose.material3.IconButton import androidx.compose.material3.MaterialTheme import androidx.compose.material3.OutlinedButton import androidx.compose.material3.OutlinedTextField import androidx.compose.material3.Text import androidx.compose.material3.TextButton import androidx.compose.runtime.Composable import androidx.compose.ui.Alignment import androidx.compose.ui.Modifier import androidx.compose.ui.graphics.vector.ImageVector import androidx.compose.ui.text.font.FontWeight import androidx.compose.ui.text.style.TextAlign import androidx.compose.ui.unit.dp import com.jodli.coffeeshottimer.ui.theme.LocalSpacing import androidx.compose.ui.res.stringResource import com.jodli.coffeeshottimer.R</ID>
    <ID>ImportOrdering:DebugDialog.kt$import androidx.compose.foundation.layout.Arrangement import androidx.compose.foundation.layout.Column import androidx.compose.foundation.layout.Row import androidx.compose.foundation.layout.Spacer import androidx.compose.foundation.layout.fillMaxHeight import androidx.compose.foundation.layout.fillMaxWidth import androidx.compose.foundation.layout.height import androidx.compose.foundation.layout.padding import androidx.compose.foundation.layout.size import androidx.compose.foundation.layout.width import androidx.compose.foundation.rememberScrollState import androidx.compose.foundation.shape.RoundedCornerShape import androidx.compose.foundation.verticalScroll import androidx.compose.material.icons.Icons import androidx.compose.material.icons.filled.Add import androidx.compose.material.icons.filled.BugReport import androidx.compose.material.icons.filled.Clear import androidx.compose.material.icons.filled.Delete import androidx.compose.material.icons.filled.Person import androidx.compose.material.icons.filled.PersonAdd import androidx.compose.material.icons.filled.PersonOutline import androidx.compose.material.icons.filled.Settings import androidx.compose.material.icons.filled.Storage import androidx.compose.material3.AlertDialog import androidx.compose.material3.Card import androidx.compose.material3.CardDefaults import androidx.compose.material3.Icon import androidx.compose.material3.IconButton import androidx.compose.material3.MaterialTheme import androidx.compose.material3.Text import androidx.compose.material3.TextButton import androidx.compose.runtime.Composable import androidx.compose.runtime.LaunchedEffect import androidx.compose.ui.Alignment import androidx.compose.ui.Modifier import androidx.compose.ui.graphics.Color import androidx.compose.ui.text.font.FontWeight import androidx.compose.ui.text.style.TextAlign import androidx.compose.ui.unit.dp import androidx.compose.ui.window.Dialog import androidx.compose.ui.res.stringResource import com.jodli.coffeeshottimer.BuildConfig import com.jodli.coffeeshottimer.R import com.jodli.coffeeshottimer.ui.theme.LocalSpacing import kotlinx.coroutines.delay</ID>
    <ID>ImportOrdering:DebugTapDetector.kt$import androidx.compose.foundation.clickable import androidx.compose.foundation.layout.Box import androidx.compose.runtime.Composable import androidx.compose.runtime.LaunchedEffect import androidx.compose.runtime.getValue import androidx.compose.runtime.mutableLongStateOf import androidx.compose.runtime.mutableIntStateOf import androidx.compose.runtime.remember import androidx.compose.runtime.setValue import androidx.compose.ui.Modifier import com.jodli.coffeeshottimer.BuildConfig import kotlinx.coroutines.delay</ID>
    <ID>ImportOrdering:DebugViewModel.kt$import androidx.lifecycle.ViewModel import androidx.lifecycle.viewModelScope import com.jodli.coffeeshottimer.BuildConfig import com.jodli.coffeeshottimer.data.util.DatabasePopulator import com.jodli.coffeeshottimer.data.onboarding.OnboardingManager import dagger.hilt.android.lifecycle.HiltViewModel import kotlinx.coroutines.flow.MutableStateFlow import kotlinx.coroutines.flow.StateFlow import kotlinx.coroutines.flow.asStateFlow import kotlinx.coroutines.launch import javax.inject.Inject import com.jodli.coffeeshottimer.ui.util.StringResourceProvider import com.jodli.coffeeshottimer.ui.util.DomainErrorTranslator import com.jodli.coffeeshottimer.R</ID>
    <ID>ImportOrdering:EquipmentSetupFlowScreen.kt$import androidx.compose.foundation.layout.Box import androidx.compose.foundation.layout.Column import androidx.compose.foundation.layout.Row import androidx.compose.foundation.layout.Spacer import androidx.compose.foundation.layout.fillMaxSize import androidx.compose.foundation.layout.fillMaxWidth import androidx.compose.foundation.layout.height import androidx.compose.foundation.layout.padding import androidx.compose.foundation.layout.size import androidx.compose.foundation.layout.width import androidx.compose.material3.LinearProgressIndicator import androidx.compose.material3.MaterialTheme import androidx.compose.material3.Surface import androidx.compose.material3.Text import androidx.compose.runtime.Composable import androidx.compose.runtime.collectAsState import androidx.compose.runtime.getValue import androidx.compose.ui.Alignment import androidx.compose.ui.Modifier import androidx.compose.ui.res.stringResource import androidx.compose.ui.text.font.FontWeight import androidx.compose.ui.text.style.TextAlign import androidx.compose.ui.unit.dp import androidx.hilt.navigation.compose.hiltViewModel import com.jodli.coffeeshottimer.R import com.jodli.coffeeshottimer.ui.components.LandscapeContainer import com.jodli.coffeeshottimer.ui.theme.LocalSpacing import com.jodli.coffeeshottimer.ui.viewmodel.EquipmentSetupFlowViewModel import com.jodli.coffeeshottimer.ui.equipment.EquipmentSetupStep</ID>
    <ID>ImportOrdering:GetShotDetailsUseCase.kt$import com.jodli.coffeeshottimer.data.model.Bean import com.jodli.coffeeshottimer.data.model.Shot import com.jodli.coffeeshottimer.data.repository.BeanRepository import com.jodli.coffeeshottimer.data.repository.ShotRepository import com.jodli.coffeeshottimer.domain.exception.DomainException import com.jodli.coffeeshottimer.domain.model.DomainErrorCode import kotlinx.coroutines.flow.first import java.time.LocalDate import java.util.Locale import java.time.temporal.ChronoUnit import javax.inject.Inject import javax.inject.Singleton</ID>
    <ID>ImportOrdering:GrindAdjustmentCard.kt$import androidx.compose.animation.core.* import androidx.compose.foundation.layout.* import androidx.compose.foundation.shape.RoundedCornerShape import androidx.compose.material.icons.Icons import androidx.compose.material.icons.filled.* import androidx.compose.material3.* import androidx.compose.runtime.* import androidx.compose.ui.Alignment import androidx.compose.ui.Modifier import androidx.compose.ui.graphics.vector.ImageVector import androidx.compose.ui.platform.LocalContext import androidx.compose.ui.res.stringResource import androidx.compose.ui.text.font.FontWeight import androidx.compose.ui.text.style.TextAlign import androidx.compose.ui.tooling.preview.Preview import androidx.compose.ui.unit.dp import com.jodli.coffeeshottimer.R import com.jodli.coffeeshottimer.domain.model.* import com.jodli.coffeeshottimer.ui.theme.LocalSpacing import com.jodli.coffeeshottimer.ui.theme.CoffeeShotTimerTheme import com.jodli.coffeeshottimer.ui.util.GrindAdjustmentFormatter</ID>
    <ID>ImportOrdering:GrinderConfigRepository.kt$import android.util.Log import com.jodli.coffeeshottimer.data.dao.GrinderConfigDao import com.jodli.coffeeshottimer.data.model.GrinderConfiguration import com.jodli.coffeeshottimer.data.model.ValidationResult import kotlinx.coroutines.flow.Flow import kotlinx.coroutines.flow.catch import kotlinx.coroutines.flow.flow import kotlinx.coroutines.delay import javax.inject.Inject import javax.inject.Singleton</ID>
    <ID>ImportOrdering:GrinderSettingsScreen.kt$import androidx.compose.foundation.layout.Arrangement import androidx.compose.foundation.layout.Column import androidx.compose.foundation.layout.Row import androidx.compose.foundation.layout.Spacer import androidx.compose.foundation.layout.fillMaxSize import androidx.compose.foundation.layout.fillMaxWidth import androidx.compose.foundation.layout.height import androidx.compose.foundation.layout.padding import androidx.compose.foundation.layout.statusBarsPadding import androidx.compose.foundation.rememberScrollState import androidx.compose.foundation.text.KeyboardOptions import androidx.compose.foundation.verticalScroll import androidx.compose.material.icons.Icons import androidx.compose.material.icons.automirrored.filled.ArrowBack import androidx.compose.material3.Icon import androidx.compose.material3.IconButton import androidx.compose.material3.MaterialTheme import androidx.compose.material3.Scaffold import androidx.compose.material3.Text import androidx.compose.material3.TopAppBar import androidx.compose.material3.ExperimentalMaterial3Api import androidx.compose.runtime.Composable import androidx.compose.runtime.LaunchedEffect import androidx.compose.runtime.collectAsState import androidx.compose.runtime.getValue import androidx.compose.ui.Modifier import androidx.compose.ui.res.stringResource import androidx.compose.ui.text.font.FontWeight import androidx.compose.ui.text.input.KeyboardType import androidx.compose.ui.text.style.TextAlign import androidx.compose.ui.unit.dp import androidx.hilt.navigation.compose.hiltViewModel import com.jodli.coffeeshottimer.R import com.jodli.coffeeshottimer.ui.components.CoffeeCard import com.jodli.coffeeshottimer.ui.components.CoffeePrimaryButton import com.jodli.coffeeshottimer.ui.components.CoffeeTextField import com.jodli.coffeeshottimer.ui.components.GentleValidationMessage import com.jodli.coffeeshottimer.ui.components.LoadingIndicator import com.jodli.coffeeshottimer.ui.theme.LocalSpacing import com.jodli.coffeeshottimer.ui.validation.GrinderValidationHelpers import com.jodli.coffeeshottimer.ui.viewmodel.EquipmentSettingsViewModel</ID>
    <ID>ImportOrdering:IntroductionScreen.kt$import androidx.compose.foundation.layout.Arrangement import androidx.compose.foundation.layout.Box import androidx.compose.foundation.layout.BoxWithConstraints import androidx.compose.foundation.layout.Column import androidx.compose.foundation.layout.Row import androidx.compose.foundation.layout.Spacer import androidx.compose.foundation.layout.fillMaxSize import androidx.compose.foundation.layout.fillMaxWidth import androidx.compose.foundation.layout.height import androidx.compose.foundation.layout.padding import androidx.compose.foundation.layout.size import androidx.compose.foundation.layout.statusBarsPadding import androidx.compose.foundation.layout.width import androidx.compose.foundation.layout.wrapContentWidth import androidx.compose.foundation.rememberScrollState import androidx.compose.foundation.shape.CircleShape import androidx.compose.foundation.verticalScroll import androidx.compose.material.icons.Icons import androidx.compose.material.icons.filled.Coffee import androidx.compose.material.icons.filled.History import androidx.compose.material.icons.filled.Schedule import androidx.compose.material.icons.filled.Settings import androidx.compose.material.icons.automirrored.filled.AltRoute import androidx.compose.material.icons.filled.Timeline import androidx.compose.material3.Icon import androidx.compose.material3.MaterialTheme import androidx.compose.material3.Surface import androidx.compose.material3.Text import androidx.compose.runtime.Composable import androidx.compose.runtime.getValue import androidx.compose.runtime.mutableIntStateOf import androidx.compose.runtime.remember import androidx.compose.runtime.setValue import androidx.compose.ui.Alignment import androidx.compose.ui.Modifier import androidx.compose.ui.graphics.vector.ImageVector import androidx.compose.ui.res.vectorResource import androidx.compose.ui.res.stringResource import androidx.compose.ui.text.font.FontWeight import androidx.compose.ui.text.style.TextAlign import androidx.compose.ui.tooling.preview.Preview import androidx.compose.ui.unit.dp import com.jodli.coffeeshottimer.R import com.jodli.coffeeshottimer.ui.components.CoffeePrimaryButton import com.jodli.coffeeshottimer.ui.components.CoffeeSecondaryButton import com.jodli.coffeeshottimer.ui.components.CoffeeCard import com.jodli.coffeeshottimer.ui.components.LandscapeContainer import com.jodli.coffeeshottimer.ui.theme.CoffeeShotTimerTheme import com.jodli.coffeeshottimer.ui.theme.LocalSpacing import com.jodli.coffeeshottimer.ui.theme.landscapeSpacing</ID>
    <ID>ImportOrdering:MoreScreen.kt$import android.content.ActivityNotFoundException import android.content.Intent import android.net.Uri import android.os.Build import androidx.compose.foundation.layout.Arrangement import androidx.compose.foundation.layout.Column import androidx.compose.foundation.layout.fillMaxSize import androidx.compose.foundation.layout.fillMaxWidth import androidx.compose.foundation.layout.height import androidx.compose.foundation.layout.padding import androidx.compose.foundation.layout.Spacer import androidx.compose.foundation.layout.statusBarsPadding import androidx.compose.material.icons.Icons import androidx.compose.material.icons.automirrored.filled.ArrowForward import androidx.compose.material.icons.filled.Engineering import androidx.compose.material.icons.filled.Info import androidx.compose.material.icons.filled.Email import androidx.compose.material.icons.filled.Public import androidx.compose.material.icons.filled.Scale import androidx.compose.material3.Icon import androidx.compose.material3.MaterialTheme import androidx.compose.material3.Text import androidx.compose.material3.ExperimentalMaterial3Api import androidx.compose.runtime.Composable import androidx.compose.ui.Modifier import androidx.compose.ui.platform.LocalContext import androidx.compose.ui.res.stringResource import androidx.compose.ui.Alignment import androidx.compose.ui.text.font.FontWeight import com.jodli.coffeeshottimer.BuildConfig import com.jodli.coffeeshottimer.R import com.jodli.coffeeshottimer.ui.components.CoffeeCard import com.jodli.coffeeshottimer.ui.components.LandscapeContainer import com.jodli.coffeeshottimer.ui.theme.LocalSpacing</ID>
    <ID>ImportOrdering:PhotoComponents.kt$import android.net.Uri import androidx.compose.foundation.Image import androidx.compose.foundation.background import androidx.compose.foundation.clickable import androidx.compose.foundation.layout.Arrangement import androidx.compose.foundation.layout.Box import androidx.compose.foundation.layout.Column import androidx.compose.foundation.layout.Row import androidx.compose.foundation.layout.Spacer import androidx.compose.foundation.layout.aspectRatio import androidx.compose.foundation.layout.fillMaxSize import androidx.compose.foundation.layout.fillMaxWidth import androidx.compose.foundation.layout.height import androidx.compose.foundation.layout.padding import androidx.compose.foundation.layout.size import androidx.compose.foundation.layout.width import androidx.compose.foundation.shape.RoundedCornerShape import androidx.compose.material.icons.Icons import androidx.compose.material.icons.filled.Add import androidx.compose.material.icons.filled.CameraAlt import androidx.compose.material.icons.filled.Close import androidx.compose.material.icons.filled.Delete import androidx.compose.material.icons.filled.Edit import androidx.compose.material.icons.filled.Image import androidx.compose.material.icons.filled.PhotoCamera import androidx.compose.material.icons.filled.PhotoLibrary import androidx.compose.material3.AlertDialog import androidx.compose.material3.Card import androidx.compose.material3.CardDefaults import androidx.compose.material3.ExperimentalMaterial3Api import androidx.compose.material3.Icon import androidx.compose.material3.IconButton import androidx.compose.material3.MaterialTheme import androidx.compose.material3.ModalBottomSheet import androidx.compose.material3.SheetState import androidx.compose.material3.Text import androidx.compose.material3.TextButton import androidx.compose.material3.rememberModalBottomSheetState import androidx.compose.runtime.Composable import androidx.compose.runtime.getValue import androidx.compose.runtime.mutableStateOf import androidx.compose.runtime.remember import androidx.compose.runtime.setValue import androidx.compose.ui.Alignment import androidx.compose.ui.Modifier import androidx.compose.ui.draw.clip import androidx.compose.ui.graphics.Color import androidx.compose.ui.layout.ContentScale import androidx.compose.ui.platform.LocalContext import androidx.compose.ui.res.stringResource import androidx.compose.ui.text.font.FontWeight import androidx.compose.ui.text.style.TextAlign import androidx.compose.ui.unit.dp import androidx.compose.runtime.mutableStateOf import coil.compose.AsyncImage import coil.request.ImageRequest import com.jodli.coffeeshottimer.R import com.jodli.coffeeshottimer.ui.theme.LocalSpacing import java.io.File</ID>
    <ID>ImportOrdering:PhotoStorageManagerImpl.kt$import android.content.Context import android.graphics.Bitmap import android.graphics.BitmapFactory import android.graphics.Matrix import androidx.exifinterface.media.ExifInterface import android.net.Uri import dagger.hilt.android.qualifiers.ApplicationContext import kotlinx.coroutines.Dispatchers import kotlinx.coroutines.withContext import java.io.File import java.io.FileOutputStream import java.io.IOException import javax.inject.Inject import javax.inject.Singleton</ID>
    <ID>ImportOrdering:RecommendationCard.kt$import androidx.compose.foundation.background import androidx.compose.foundation.layout.* import androidx.compose.material.icons.Icons import androidx.compose.material.icons.filled.Lightbulb import androidx.compose.material3.* import androidx.compose.runtime.Composable import androidx.compose.ui.Alignment import androidx.compose.ui.Modifier import androidx.compose.ui.graphics.Color import androidx.compose.ui.res.stringResource import androidx.compose.ui.text.font.FontWeight import androidx.compose.ui.unit.Dp import androidx.compose.ui.unit.dp import com.jodli.coffeeshottimer.R import com.jodli.coffeeshottimer.domain.usecase.RecommendationPriority import com.jodli.coffeeshottimer.domain.usecase.ShotRecommendation import com.jodli.coffeeshottimer.ui.theme.LocalSpacing import com.jodli.coffeeshottimer.ui.util.formatForDisplay import com.jodli.coffeeshottimer.ui.util.FormattedRecommendation</ID>
    <ID>ImportOrdering:RecordShotScreen.kt$import androidx.compose.foundation.layout.Arrangement import androidx.compose.foundation.layout.Box import androidx.compose.foundation.layout.Column import androidx.compose.foundation.layout.PaddingValues import androidx.compose.foundation.layout.Row import androidx.compose.foundation.layout.Spacer import androidx.compose.foundation.layout.fillMaxSize import androidx.compose.foundation.layout.fillMaxWidth import androidx.compose.foundation.layout.fillMaxHeight import androidx.compose.foundation.layout.height import androidx.compose.foundation.layout.imePadding import androidx.compose.foundation.layout.navigationBarsPadding import androidx.compose.foundation.layout.padding import androidx.compose.foundation.layout.size import androidx.compose.foundation.layout.statusBarsPadding import androidx.compose.foundation.ExperimentalFoundationApi import androidx.compose.foundation.relocation.BringIntoViewRequester import androidx.compose.foundation.relocation.bringIntoViewRequester import androidx.compose.foundation.rememberScrollState import androidx.compose.foundation.verticalScroll import androidx.compose.material.icons.Icons import androidx.compose.material.icons.filled.Edit import androidx.compose.material.icons.filled.Home import androidx.compose.material.icons.filled.Info import androidx.compose.material.icons.filled.KeyboardArrowDown import androidx.compose.material.icons.filled.Settings import androidx.compose.ui.graphics.vector.ImageVector import androidx.compose.ui.res.vectorResource import androidx.compose.material3.Card import androidx.compose.material3.CardDefaults import androidx.compose.material3.ExperimentalMaterial3Api import androidx.compose.material3.Icon import androidx.compose.material3.MaterialTheme import androidx.compose.material3.ModalBottomSheet import androidx.compose.material3.OutlinedTextField import androidx.compose.material3.Text import androidx.compose.material3.TextButton import androidx.compose.material3.rememberModalBottomSheetState import androidx.compose.runtime.Composable import androidx.compose.runtime.getValue import androidx.compose.runtime.mutableStateOf import androidx.compose.runtime.remember import androidx.compose.runtime.rememberCoroutineScope import androidx.compose.runtime.setValue import androidx.compose.ui.Alignment import androidx.compose.ui.Modifier import androidx.compose.ui.focus.onFocusEvent import androidx.compose.ui.text.font.FontWeight import androidx.compose.ui.text.style.TextAlign import androidx.compose.ui.unit.dp import kotlinx.coroutines.launch import androidx.hilt.navigation.compose.hiltViewModel import androidx.lifecycle.compose.collectAsStateWithLifecycle import androidx.compose.ui.res.stringResource import com.jodli.coffeeshottimer.BuildConfig import com.jodli.coffeeshottimer.R import com.jodli.coffeeshottimer.data.model.Bean import com.jodli.coffeeshottimer.ui.components.BeanCard import com.jodli.coffeeshottimer.ui.components.CardHeader import com.jodli.coffeeshottimer.ui.components.CoffeeCard import com.jodli.coffeeshottimer.ui.components.CoffeePrimaryButton import com.jodli.coffeeshottimer.ui.components.EmptyState import com.jodli.coffeeshottimer.ui.components.ErrorCard import com.jodli.coffeeshottimer.ui.components.GrinderSettingSlider import com.jodli.coffeeshottimer.ui.components.SectionHeader import com.jodli.coffeeshottimer.ui.components.ShotRecordedDialog import com.jodli.coffeeshottimer.ui.components.TimerControls import com.jodli.coffeeshottimer.ui.components.WeightSlidersSection import com.jodli.coffeeshottimer.ui.components.LandscapeContainer import com.jodli.coffeeshottimer.ui.components.NextShotGuidanceCard import com.jodli.coffeeshottimer.ui.components.AnimatedNextShotGuidanceCard import com.jodli.coffeeshottimer.ui.components.RecordShotLandscapeLayout import com.jodli.coffeeshottimer.ui.theme.LocalSpacing import com.jodli.coffeeshottimer.ui.theme.landscapeSpacing import com.jodli.coffeeshottimer.ui.theme.landscapeTimerSize import com.jodli.coffeeshottimer.ui.viewmodel.ShotRecordingViewModel</ID>
    <ID>ImportOrdering:RepositoryModule.kt$import android.content.SharedPreferences import com.jodli.coffeeshottimer.data.dao.BasketConfigDao import com.jodli.coffeeshottimer.data.dao.BeanDao import com.jodli.coffeeshottimer.data.dao.GrinderConfigDao import com.jodli.coffeeshottimer.data.dao.ShotDao import com.jodli.coffeeshottimer.data.repository.BasketConfigRepository import com.jodli.coffeeshottimer.data.repository.BeanRepository import com.jodli.coffeeshottimer.data.repository.GrinderConfigRepository import com.jodli.coffeeshottimer.data.repository.ShotRepository import com.jodli.coffeeshottimer.data.storage.PhotoCaptureManager import com.jodli.coffeeshottimer.data.storage.PhotoCaptureManagerImpl import com.jodli.coffeeshottimer.data.storage.PhotoStorageManager import com.jodli.coffeeshottimer.data.storage.PhotoStorageManagerImpl import com.jodli.coffeeshottimer.data.util.MemoryOptimizer import com.jodli.coffeeshottimer.data.util.PerformanceMonitor import com.jodli.coffeeshottimer.data.preferences.GrindRecommendationPreferences import com.jodli.coffeeshottimer.domain.usecase.ManageGrindRecommendationUseCase import dagger.Binds import dagger.Module import dagger.Provides import dagger.hilt.InstallIn import dagger.hilt.components.SingletonComponent import javax.inject.Singleton</ID>
    <ID>ImportOrdering:ShotDetailsScreen.kt$import androidx.compose.foundation.background import androidx.compose.foundation.layout.Arrangement import androidx.compose.foundation.layout.Box import androidx.compose.foundation.layout.Column import androidx.compose.foundation.layout.PaddingValues import androidx.compose.foundation.layout.Row import androidx.compose.foundation.layout.Spacer import androidx.compose.foundation.layout.fillMaxSize import androidx.compose.foundation.layout.fillMaxWidth import androidx.compose.foundation.layout.height import androidx.compose.foundation.layout.padding import androidx.compose.foundation.layout.size import androidx.compose.foundation.layout.statusBarsPadding import androidx.compose.foundation.layout.width import androidx.compose.foundation.layout.widthIn import androidx.compose.foundation.lazy.LazyColumn import androidx.compose.foundation.shape.CircleShape import androidx.compose.foundation.shape.RoundedCornerShape import androidx.compose.material.icons.Icons import androidx.compose.ui.graphics.vector.ImageVector import androidx.compose.ui.res.vectorResource import androidx.compose.material.icons.automirrored.filled.ArrowBack import androidx.compose.material.icons.automirrored.filled.KeyboardArrowLeft import androidx.compose.material.icons.automirrored.filled.KeyboardArrowRight import androidx.compose.material.icons.filled.Check import androidx.compose.material.icons.filled.Close import androidx.compose.material.icons.filled.Delete import androidx.compose.material.icons.filled.Edit import androidx.compose.material.icons.filled.Info import androidx.compose.material.icons.filled.Lightbulb import androidx.compose.material.icons.filled.Settings import androidx.compose.material3.AlertDialog import androidx.compose.material3.ExperimentalMaterial3Api import androidx.compose.material3.HorizontalDivider import androidx.compose.material3.Icon import androidx.compose.material3.IconButton import androidx.compose.material3.MaterialTheme import androidx.compose.material3.Surface import androidx.compose.material3.Text import androidx.compose.material3.TextButton import androidx.compose.material3.TopAppBar import androidx.compose.runtime.Composable import androidx.compose.runtime.LaunchedEffect import androidx.compose.runtime.collectAsState import androidx.compose.runtime.getValue import androidx.compose.runtime.mutableStateOf import androidx.compose.runtime.remember import androidx.compose.runtime.setValue import androidx.compose.ui.Alignment import androidx.compose.ui.Modifier import androidx.compose.ui.draw.clip import androidx.compose.ui.text.font.FontWeight import androidx.compose.ui.text.style.TextAlign import androidx.compose.ui.text.style.TextOverflow import androidx.compose.ui.unit.dp import androidx.hilt.navigation.compose.hiltViewModel import com.jodli.coffeeshottimer.R import androidx.compose.ui.res.stringResource import com.jodli.coffeeshottimer.domain.model.AdjustmentDirection import com.jodli.coffeeshottimer.domain.model.ConfidenceLevel import com.jodli.coffeeshottimer.domain.model.GrindAdjustmentRecommendation import com.jodli.coffeeshottimer.domain.model.TastePrimary import com.jodli.coffeeshottimer.domain.usecase.ShotDetails import com.jodli.coffeeshottimer.domain.usecase.ShotRecommendation import com.jodli.coffeeshottimer.domain.usecase.RecommendationPriority import com.jodli.coffeeshottimer.ui.components.CardHeader import com.jodli.coffeeshottimer.ui.components.CoffeeCard import com.jodli.coffeeshottimer.ui.components.CoffeePrimaryButton import com.jodli.coffeeshottimer.ui.components.CoffeeSecondaryButton import com.jodli.coffeeshottimer.ui.components.CoffeeTextField import com.jodli.coffeeshottimer.ui.components.ErrorState import com.jodli.coffeeshottimer.ui.components.GrindAdjustmentCard import com.jodli.coffeeshottimer.ui.components.LandscapeContainer import com.jodli.coffeeshottimer.ui.components.LoadingIndicator import com.jodli.coffeeshottimer.ui.components.TasteFeedbackDisplay import com.jodli.coffeeshottimer.ui.components.TasteFeedbackEditSheet import com.jodli.coffeeshottimer.ui.util.formatForDisplay import com.jodli.coffeeshottimer.ui.theme.LocalSpacing import com.jodli.coffeeshottimer.ui.viewmodel.ShotDetailsViewModel import java.time.format.DateTimeFormatter</ID>
    <ID>ImportOrdering:ShotDetailsViewModel.kt$import androidx.lifecycle.ViewModel import androidx.lifecycle.viewModelScope import com.jodli.coffeeshottimer.data.repository.ShotRepository import com.jodli.coffeeshottimer.domain.usecase.GetShotDetailsUseCase import com.jodli.coffeeshottimer.domain.usecase.RecordTasteFeedbackUseCase import com.jodli.coffeeshottimer.domain.usecase.ShotDetails import com.jodli.coffeeshottimer.domain.usecase.CalculateGrindAdjustmentUseCase import com.jodli.coffeeshottimer.domain.model.TastePrimary import com.jodli.coffeeshottimer.domain.model.TasteSecondary import com.jodli.coffeeshottimer.domain.model.GrindAdjustmentRecommendation import com.jodli.coffeeshottimer.ui.util.DomainErrorTranslator import dagger.hilt.android.lifecycle.HiltViewModel import kotlinx.coroutines.flow.MutableStateFlow import kotlinx.coroutines.flow.StateFlow import kotlinx.coroutines.flow.asStateFlow import kotlinx.coroutines.launch import javax.inject.Inject import com.jodli.coffeeshottimer.ui.util.StringResourceProvider import com.jodli.coffeeshottimer.R</ID>
    <ID>ImportOrdering:ShotHistoryFilterDialog.kt$import androidx.compose.foundation.layout.Arrangement import androidx.compose.foundation.layout.Column import androidx.compose.foundation.layout.Row import androidx.compose.foundation.layout.Spacer import androidx.compose.foundation.layout.fillMaxWidth import androidx.compose.foundation.layout.height import androidx.compose.foundation.layout.heightIn import androidx.compose.foundation.layout.padding import androidx.compose.foundation.layout.size import androidx.compose.foundation.layout.width import androidx.compose.foundation.rememberScrollState import androidx.compose.foundation.selection.selectable import androidx.compose.foundation.verticalScroll import androidx.compose.material.icons.Icons import androidx.compose.material.icons.filled.Clear import androidx.compose.material.icons.filled.DateRange import androidx.compose.material.icons.filled.FilterList import androidx.compose.material3.Card import androidx.compose.material3.CardDefaults import androidx.compose.material3.Checkbox import androidx.compose.material3.DatePicker import androidx.compose.material3.DatePickerDialog import androidx.compose.material3.ExperimentalMaterial3Api import androidx.compose.material3.Icon import androidx.compose.material3.IconButton import androidx.compose.material3.MaterialTheme import androidx.compose.material3.OutlinedButton import androidx.compose.material3.RadioButton import androidx.compose.material3.Text import androidx.compose.material3.TextButton import androidx.compose.material3.rememberDatePickerState import androidx.compose.runtime.Composable import androidx.compose.runtime.getValue import androidx.compose.runtime.mutableStateOf import androidx.compose.runtime.remember import androidx.compose.runtime.setValue import androidx.compose.ui.Alignment import androidx.compose.ui.Modifier import androidx.compose.ui.semantics.Role import androidx.compose.ui.text.font.FontWeight import androidx.compose.ui.unit.dp import androidx.compose.ui.window.Dialog import androidx.compose.ui.res.stringResource import com.jodli.coffeeshottimer.R import com.jodli.coffeeshottimer.data.model.Bean import com.jodli.coffeeshottimer.domain.usecase.ShotHistoryFilter import com.jodli.coffeeshottimer.ui.theme.LocalSpacing import java.time.LocalDate import java.time.format.DateTimeFormatter</ID>
    <ID>ImportOrdering:ShotHistoryScreen.kt$import androidx.compose.foundation.background import androidx.compose.foundation.layout.Arrangement import androidx.compose.foundation.layout.Box import androidx.compose.foundation.layout.Column import androidx.compose.foundation.layout.FlowRow import androidx.compose.foundation.layout.PaddingValues import androidx.compose.foundation.layout.Row import androidx.compose.foundation.layout.Spacer import androidx.compose.foundation.layout.fillMaxSize import androidx.compose.foundation.layout.fillMaxWidth import androidx.compose.foundation.layout.height import androidx.compose.foundation.layout.padding import androidx.compose.foundation.layout.size import androidx.compose.foundation.layout.statusBarsPadding import androidx.compose.foundation.layout.width import androidx.compose.foundation.layout.widthIn import androidx.compose.foundation.lazy.LazyColumn import androidx.compose.foundation.lazy.items import androidx.compose.foundation.shape.CircleShape import androidx.compose.foundation.shape.RoundedCornerShape import androidx.compose.material.icons.Icons import androidx.compose.material.icons.automirrored.filled.List import androidx.compose.material.icons.filled.Home import androidx.compose.material.icons.filled.Info import androidx.compose.material.icons.filled.FilterList import androidx.compose.material3.Card import androidx.compose.material3.CardDefaults import androidx.compose.material3.ExperimentalMaterial3Api import androidx.compose.material3.Icon import androidx.compose.material3.IconButton import androidx.compose.material3.MaterialTheme import androidx.compose.material3.Surface import androidx.compose.material3.Text import androidx.compose.material3.TextButton import androidx.compose.runtime.Composable import androidx.compose.runtime.LaunchedEffect import androidx.compose.runtime.collectAsState import androidx.compose.runtime.getValue import androidx.compose.runtime.mutableStateOf import androidx.compose.runtime.remember import androidx.compose.runtime.setValue import androidx.compose.ui.Alignment import androidx.compose.ui.Modifier import androidx.compose.ui.draw.clip import androidx.compose.ui.text.font.FontWeight import androidx.compose.ui.text.style.TextOverflow import androidx.compose.ui.unit.dp import androidx.compose.ui.platform.LocalDensity import androidx.hilt.navigation.compose.hiltViewModel import com.jodli.coffeeshottimer.R import androidx.compose.ui.res.stringResource import com.jodli.coffeeshottimer.data.model.Shot import com.jodli.coffeeshottimer.domain.usecase.ShotHistoryFilter import com.jodli.coffeeshottimer.ui.components.CardHeader import com.jodli.coffeeshottimer.ui.components.CoffeeCard import com.jodli.coffeeshottimer.ui.components.CoffeePrimaryButton import com.jodli.coffeeshottimer.ui.components.EmptyState import com.jodli.coffeeshottimer.ui.components.ErrorState import com.jodli.coffeeshottimer.ui.components.LandscapeContainer import com.jodli.coffeeshottimer.ui.components.LoadingIndicator import com.jodli.coffeeshottimer.ui.components.SectionHeader import com.jodli.coffeeshottimer.ui.components.ShotHistoryFilterDialog import com.jodli.coffeeshottimer.ui.components.CompactTasteDisplay import com.jodli.coffeeshottimer.ui.theme.LocalIsLandscape import com.jodli.coffeeshottimer.ui.theme.Spacing import com.jodli.coffeeshottimer.ui.theme.LocalSpacing import com.jodli.coffeeshottimer.ui.theme.landscapeSpacing import com.jodli.coffeeshottimer.ui.viewmodel.ShotHistoryUiState import com.jodli.coffeeshottimer.ui.viewmodel.ShotHistoryViewModel import java.time.format.DateTimeFormatter</ID>
    <ID>ImportOrdering:ShotHistoryViewModel.kt$import androidx.lifecycle.ViewModel import androidx.lifecycle.viewModelScope import com.jodli.coffeeshottimer.R import com.jodli.coffeeshottimer.data.model.Bean import com.jodli.coffeeshottimer.data.model.PaginationConfig import com.jodli.coffeeshottimer.data.model.Shot import com.jodli.coffeeshottimer.data.util.MemoryOptimizer import com.jodli.coffeeshottimer.domain.usecase.BrewRatioAnalysis import com.jodli.coffeeshottimer.domain.usecase.ExtractionTimeAnalysis import com.jodli.coffeeshottimer.domain.usecase.GetActiveBeansUseCase import com.jodli.coffeeshottimer.domain.usecase.GetShotHistoryUseCase import com.jodli.coffeeshottimer.domain.usecase.GetShotStatisticsUseCase import com.jodli.coffeeshottimer.domain.usecase.GrinderSettingAnalysis import com.jodli.coffeeshottimer.domain.usecase.OverallStatistics import com.jodli.coffeeshottimer.domain.usecase.ShotHistoryFilter import com.jodli.coffeeshottimer.domain.usecase.ShotTrends import com.jodli.coffeeshottimer.ui.util.StringResourceProvider import com.jodli.coffeeshottimer.ui.util.DomainErrorTranslator import dagger.hilt.android.lifecycle.HiltViewModel import kotlinx.coroutines.flow.MutableStateFlow import kotlinx.coroutines.flow.StateFlow import kotlinx.coroutines.flow.asStateFlow import kotlinx.coroutines.flow.catch import kotlinx.coroutines.launch import java.time.LocalDate import java.time.LocalTime import javax.inject.Inject</ID>
    <ID>ImportOrdering:ShotRecordingViewModel.kt$import android.content.Context import android.os.SystemClock import androidx.lifecycle.SavedStateHandle import androidx.lifecycle.ViewModel import androidx.lifecycle.viewModelScope import com.jodli.coffeeshottimer.BuildConfig import com.jodli.coffeeshottimer.R import com.jodli.coffeeshottimer.data.model.Bean import com.jodli.coffeeshottimer.data.repository.BeanRepository import com.jodli.coffeeshottimer.data.repository.ShotRepository import com.jodli.coffeeshottimer.domain.model.GrindAdjustmentRecommendation import com.jodli.coffeeshottimer.domain.model.PersistentGrindRecommendation import com.jodli.coffeeshottimer.domain.model.TastePrimary import com.jodli.coffeeshottimer.domain.model.TasteSecondary import com.jodli.coffeeshottimer.domain.usecase.CalculateGrindAdjustmentUseCase import com.jodli.coffeeshottimer.domain.usecase.GetShotDetailsUseCase import com.jodli.coffeeshottimer.domain.usecase.GetTastePreselectionUseCase import com.jodli.coffeeshottimer.domain.usecase.ManageGrindRecommendationUseCase import com.jodli.coffeeshottimer.domain.usecase.RecordShotUseCase import com.jodli.coffeeshottimer.domain.usecase.RecordTasteFeedbackUseCase import com.jodli.coffeeshottimer.domain.usecase.ShotRecommendation import com.jodli.coffeeshottimer.ui.components.ValidationUtils import com.jodli.coffeeshottimer.ui.validation.ValidationStringProvider import com.jodli.coffeeshottimer.ui.validation.getBrewRatioWarnings import com.jodli.coffeeshottimer.ui.util.DomainErrorTranslator import com.jodli.coffeeshottimer.ui.util.StringResourceProvider import dagger.hilt.android.lifecycle.HiltViewModel import dagger.hilt.android.qualifiers.ApplicationContext import kotlinx.coroutines.Job import kotlinx.coroutines.delay import kotlinx.coroutines.flow.MutableStateFlow import kotlinx.coroutines.flow.StateFlow import kotlinx.coroutines.flow.asStateFlow import kotlinx.coroutines.flow.first import kotlinx.coroutines.isActive import kotlinx.coroutines.launch import kotlinx.serialization.Serializable import kotlinx.serialization.encodeToString import kotlinx.serialization.json.Json import javax.inject.Inject</ID>
    <ID>ImportOrdering:TimerComponents.kt$import android.content.Context import android.os.Build import android.os.VibrationEffect import android.os.Vibrator import android.os.VibratorManager import androidx.compose.animation.animateColorAsState import androidx.compose.animation.core.RepeatMode import androidx.compose.animation.core.Spring import androidx.compose.animation.core.animateFloatAsState import androidx.compose.animation.core.infiniteRepeatable import androidx.compose.animation.core.spring import androidx.compose.animation.core.tween import androidx.compose.foundation.Canvas import androidx.compose.foundation.background import androidx.compose.foundation.clickable import androidx.compose.foundation.interaction.MutableInteractionSource import androidx.compose.foundation.layout.Arrangement import androidx.compose.foundation.layout.Box import androidx.compose.foundation.layout.BoxWithConstraints import androidx.compose.foundation.layout.Column import androidx.compose.foundation.layout.Row import androidx.compose.foundation.layout.Spacer import androidx.compose.foundation.layout.fillMaxSize import androidx.compose.foundation.layout.fillMaxWidth import androidx.compose.foundation.layout.height import androidx.compose.foundation.layout.offset import androidx.compose.foundation.layout.padding import androidx.compose.foundation.layout.size import androidx.compose.foundation.layout.width import androidx.compose.foundation.layout.widthIn import androidx.compose.foundation.shape.CircleShape import androidx.compose.material.icons.Icons import androidx.compose.material.icons.filled.PlayArrow import androidx.compose.material.icons.filled.Refresh import androidx.compose.material.icons.filled.Stop import androidx.compose.material3.FloatingActionButton import androidx.compose.material3.FloatingActionButtonDefaults import androidx.compose.material3.Icon import androidx.compose.material3.MaterialTheme import androidx.compose.material3.Text import androidx.compose.material3.ripple import androidx.compose.runtime.Composable import androidx.compose.ui.res.stringResource import androidx.compose.runtime.getValue import androidx.compose.runtime.mutableLongStateOf import androidx.compose.runtime.mutableStateOf import androidx.compose.runtime.remember import androidx.compose.runtime.setValue import androidx.compose.ui.Alignment import androidx.compose.ui.Modifier import androidx.compose.ui.graphics.Color import androidx.compose.ui.graphics.StrokeCap import androidx.compose.ui.graphics.drawscope.Stroke import androidx.compose.ui.graphics.graphicsLayer import androidx.compose.ui.graphics.vector.ImageVector import androidx.compose.ui.platform.LocalContext import androidx.compose.ui.res.painterResource import androidx.compose.ui.text.font.FontWeight import androidx.compose.ui.text.style.TextAlign import androidx.compose.ui.unit.Dp import androidx.compose.ui.unit.dp import androidx.compose.ui.unit.sp import com.jodli.coffeeshottimer.R import com.jodli.coffeeshottimer.ui.theme.LocalSpacing import com.jodli.coffeeshottimer.ui.theme.Spacing import com.jodli.coffeeshottimer.ui.theme.adaptiveTimerSize import kotlinx.coroutines.CoroutineScope import kotlinx.coroutines.Dispatchers import kotlinx.coroutines.delay import kotlinx.coroutines.launch</ID>
    <ID>ImportOrdering:ValidationComponents.kt$import androidx.compose.foundation.layout.Arrangement import androidx.compose.foundation.layout.Column import androidx.compose.foundation.layout.Row import androidx.compose.foundation.layout.padding import androidx.compose.foundation.layout.PaddingValues import androidx.compose.foundation.layout.fillMaxWidth import androidx.compose.foundation.layout.size import androidx.compose.foundation.text.KeyboardActions import androidx.compose.foundation.text.KeyboardOptions import androidx.compose.material.icons.Icons import androidx.compose.material.icons.filled.Error import androidx.compose.material.icons.filled.Warning import androidx.compose.material3.CardDefaults import androidx.compose.material3.Icon import androidx.compose.material3.MaterialTheme import androidx.compose.material3.OutlinedTextField import androidx.compose.material3.Text import androidx.compose.runtime.Composable import androidx.compose.runtime.LaunchedEffect import androidx.compose.ui.Alignment import androidx.compose.ui.Modifier import androidx.compose.ui.focus.FocusDirection import androidx.compose.ui.platform.LocalFocusManager import androidx.compose.ui.text.input.ImeAction import androidx.compose.ui.text.input.KeyboardType import androidx.compose.ui.unit.dp import androidx.compose.ui.unit.sp import androidx.compose.ui.res.stringResource import com.jodli.coffeeshottimer.R import com.jodli.coffeeshottimer.data.model.ValidationResult import com.jodli.coffeeshottimer.ui.theme.LocalSpacing import com.jodli.coffeeshottimer.ui.validation.ValidationStringProvider import java.text.DecimalFormat import java.time.LocalDate</ID>
    <ID>ImportOrdering:WeightSliderComponents.kt$import androidx.compose.foundation.background import androidx.compose.foundation.layout.Arrangement import androidx.compose.foundation.layout.Box import androidx.compose.foundation.layout.BoxWithConstraints import androidx.compose.foundation.layout.Column import androidx.compose.foundation.layout.Row import androidx.compose.foundation.layout.Spacer import androidx.compose.foundation.layout.fillMaxHeight import androidx.compose.foundation.layout.fillMaxSize import androidx.compose.foundation.layout.fillMaxWidth import androidx.compose.foundation.layout.height import androidx.compose.foundation.layout.offset import androidx.compose.foundation.layout.padding import androidx.compose.foundation.layout.size import androidx.compose.foundation.layout.width import androidx.compose.foundation.shape.RoundedCornerShape import androidx.compose.material.icons.Icons import androidx.compose.material.icons.automirrored.filled.Input import androidx.compose.material.icons.filled.Output import androidx.compose.material.icons.filled.Engineering import androidx.compose.material.icons.filled.Scale import androidx.compose.material3.Card import androidx.compose.material3.CardDefaults import androidx.compose.material3.Icon import androidx.compose.material3.MaterialTheme import androidx.compose.material3.Slider import androidx.compose.material3.SliderDefaults import androidx.compose.material3.Text import androidx.compose.runtime.Composable import androidx.compose.runtime.getValue import androidx.compose.runtime.mutableStateOf import androidx.compose.runtime.remember import androidx.compose.runtime.setValue import androidx.compose.ui.Alignment import androidx.compose.ui.Modifier import androidx.compose.ui.draw.clip import androidx.compose.ui.graphics.vector.ImageVector import androidx.compose.ui.hapticfeedback.HapticFeedbackType import androidx.compose.ui.platform.LocalHapticFeedback import androidx.compose.ui.text.font.FontWeight import androidx.compose.ui.text.style.TextAlign import androidx.compose.ui.unit.dp import androidx.compose.ui.unit.sp import androidx.compose.ui.res.stringResource import com.jodli.coffeeshottimer.R import com.jodli.coffeeshottimer.ui.theme.LocalSpacing import kotlin.math.roundToInt import java.util.Locale</ID>
    <ID>Indentation:AddEditBeanViewModel.kt$AddEditBeanViewModel$ </ID>
    <ID>Indentation:AppDatabase.kt$AppDatabase.Companion.&lt;no name provided&gt;$ </ID>
    <ID>Indentation:BasketSetup.kt$ </ID>
    <ID>Indentation:BasketSetupStepScreen.kt$ </ID>
    <ID>Indentation:Bean.kt$Bean$ </ID>
    <ID>Indentation:BeanManagementScreen.kt$ </ID>
    <ID>Indentation:EquipmentSettingsViewModel.kt$EquipmentSettingsViewModel$ </ID>
    <ID>Indentation:GetBeanHistoryUseCase.kt$GetBeanHistoryUseCase$ </ID>
    <ID>Indentation:GetShotDetailsUseCase.kt$GetShotDetailsUseCase$ </ID>
    <ID>Indentation:GetShotHistoryUseCase.kt$ShotHistoryFilter$ </ID>
    <ID>Indentation:GrindAdjustmentCard.kt$ </ID>
    <ID>Indentation:GrinderScaleSetup.kt$ </ID>
    <ID>Indentation:GuidedBeanCreationData.kt$BeanFormState$ </ID>
    <ID>Indentation:MoreScreen.kt$ </ID>
    <ID>Indentation:OnboardingManager.kt$OnboardingProgress$ </ID>
    <ID>Indentation:ShotHistoryScreen.kt$ </ID>
    <ID>Indentation:ShotRecordedDialog.kt$ </ID>
    <ID>Indentation:ShotRecordingViewModel.kt$ShotRecordingViewModel$ </ID>
    <ID>Indentation:ValidationExtensions.kt$ </ID>
    <ID>LargeClass:ShotRecordingViewModel.kt$ShotRecordingViewModel : ViewModel</ID>
    <ID>LongMethod:AboutScreen.kt$@OptIn(ExperimentalMaterial3Api::class) @Composable fun AboutScreen( onNavigateBack: () -&gt; Unit, modifier: Modifier = Modifier, debugViewModel: DebugViewModel = hiltViewModel() )</ID>
    <ID>LongMethod:AddEditBeanScreen.kt$@OptIn(ExperimentalMaterial3Api::class) @Composable fun AddEditBeanScreen( beanId: String? = null, onNavigateBack: () -&gt; Unit = {}, viewModel: AddEditBeanViewModel = hiltViewModel(), isOnboardingMode: Boolean = false, onboardingTitle: String? = null, onSubmit: ((com.jodli.coffeeshottimer.data.model.Bean) -&gt; Unit)? = null )</ID>
    <ID>LongMethod:AppNavigation.kt$@Composable fun AppNavigation( navController: NavHostController, modifier: Modifier = Modifier, startDestination: String = NavigationDestinations.RecordShot.route )</ID>
    <ID>LongMethod:BasketSetup.kt$@Composable fun BasketSetup( coffeeInMin: String, coffeeInMax: String, coffeeOutMin: String, coffeeOutMax: String, onCoffeeInMinChange: (String) -&gt; Unit, onCoffeeInMaxChange: (String) -&gt; Unit, onCoffeeOutMinChange: (String) -&gt; Unit, onCoffeeOutMaxChange: (String) -&gt; Unit, onPresetSelected: (BasketPreset) -&gt; Unit, coffeeInMinError: String? = null, coffeeInMaxError: String? = null, coffeeOutMinError: String? = null, coffeeOutMaxError: String? = null, generalError: String? = null, validationSuggestion: String? = null, modifier: Modifier = Modifier, showDescription: Boolean = true, showPresets: Boolean = true )</ID>
    <ID>LongMethod:BeanManagementScreen.kt$@Composable private fun BeanListItem( bean: Bean, onEdit: () -&gt; Unit, onDelete: () -&gt; Unit, onUseForShot: () -&gt; Unit, onReactivate: (() -&gt; Unit)? = null, onPhotoClick: ((String) -&gt; Unit)? = null, modifier: Modifier = Modifier )</ID>
    <ID>LongMethod:BeanManagementScreen.kt$@Composable private fun BeanManagementContent( uiState: com.jodli.coffeeshottimer.ui.viewmodel.BeanManagementUiState, searchQuery: String, showInactive: Boolean, onAddBeanClick: () -&gt; Unit, onSearchQueryChange: (String) -&gt; Unit, onToggleShowInactive: () -&gt; Unit, onEditBeanClick: (String) -&gt; Unit, onDeleteBean: (Bean) -&gt; Unit, onUseForShot: (Bean) -&gt; Unit, onReactivateBean: (String) -&gt; Unit, onPhotoClick: (String) -&gt; Unit, onRetry: () -&gt; Unit, spacing: com.jodli.coffeeshottimer.ui.theme.Spacing )</ID>
    <ID>LongMethod:DebugDialog.kt$@Composable fun DebugDialog( isVisible: Boolean, onDismiss: () -&gt; Unit, onFillDatabase: () -&gt; Unit, onClearDatabase: () -&gt; Unit, onResetToNewUser: () -&gt; Unit, onResetToExistingUserNoBeans: () -&gt; Unit, onForceEquipmentSetup: () -&gt; Unit, isLoading: Boolean, operationResult: String?, showConfirmation: Boolean, onShowConfirmation: () -&gt; Unit, onHideConfirmation: () -&gt; Unit )</ID>
    <ID>LongMethod:GrindAdjustmentCard.kt$@Composable fun GrindAdjustmentCard( recommendation: GrindAdjustmentRecommendation, onApply: (() -&gt; Unit)? = null, onDismiss: (() -&gt; Unit)? = null, modifier: Modifier = Modifier, isCompact: Boolean = false )</ID>
    <ID>LongMethod:MoreScreen.kt$@Composable private fun MoreScreenContent( onNavigateToGrinderSettings: () -&gt; Unit, onNavigateToBasketSettings: () -&gt; Unit, onNavigateToAbout: () -&gt; Unit, spacing: com.jodli.coffeeshottimer.ui.theme.Spacing, context: android.content.Context )</ID>
    <ID>LongMethod:RecordShotScreen.kt$@OptIn(ExperimentalFoundationApi::class) @Composable fun RecordShotScreen( onNavigateToBeanManagement: () -&gt; Unit = {}, onNavigateToShotDetails: (String) -&gt; Unit = {}, viewModel: ShotRecordingViewModel = hiltViewModel() )</ID>
    <ID>LongMethod:ShotDetailsScreen.kt$@OptIn(ExperimentalMaterial3Api::class) @Composable fun ShotDetailsScreen( shotId: String, onNavigateBack: () -&gt; Unit = {}, onNavigateToShot: (String) -&gt; Unit = {}, viewModel: ShotDetailsViewModel = hiltViewModel() )</ID>
    <ID>LongMethod:ShotHistoryFilterDialog.kt$@Composable fun ShotHistoryFilterDialog( currentFilter: ShotHistoryFilter, availableBeans: List&lt;Bean&gt;, onApplyFilter: (ShotHistoryFilter) -&gt; Unit, onDismiss: () -&gt; Unit )</ID>
    <ID>LongMethod:ShotRecordedDialog.kt$@Composable fun ShotRecordedDialog( brewRatio: String, extractionTime: String, recommendations: List&lt;ShotRecommendation&gt; = emptyList(), suggestedTaste: TastePrimary? = null, grindAdjustment: GrindAdjustmentRecommendation? = null, onTasteSelected: ((TastePrimary?, TasteSecondary?) -&gt; Unit)? = null, // Reactive UI updates onSubmit: ((TastePrimary?, TasteSecondary?) -&gt; Unit)? = null, // Save to database onGrindAdjustmentApply: (() -&gt; Unit)? = null, onGrindAdjustmentDismiss: (() -&gt; Unit)? = null, onDismiss: () -&gt; Unit, onViewDetails: (() -&gt; Unit)? = null, modifier: Modifier = Modifier )</ID>
    <ID>LongMethod:TimerComponents.kt$@Composable private fun CircularTimerInternal( currentTime: Long, targetTime: Long?, isRunning: Boolean, showColorCoding: Boolean = true, onStartStop: (() -&gt; Unit)? = null, timerSize: Dp, modifier: Modifier = Modifier, useLandscapeTimer: Boolean = false )</ID>
    <ID>LongMethod:WeightSliderComponents.kt$@Composable fun GrinderSettingSlider( value: String, onValueChange: (String) -&gt; Unit, modifier: Modifier = Modifier, errorMessage: String? = null, enabled: Boolean = true, suggestedSetting: String? = null, previousSuccessfulSettings: List&lt;String&gt; = emptyList(), minSetting: Float, maxSetting: Float, stepSize: Float = 0.5f )</ID>
    <ID>LongParameterList:AddEditBeanViewModel.kt$AddEditBeanViewModel$( private val addBeanUseCase: AddBeanUseCase, private val updateBeanUseCase: UpdateBeanUseCase, private val addPhotoToBeanUseCase: AddPhotoToBeanUseCase, private val removePhotoFromBeanUseCase: RemovePhotoFromBeanUseCase, private val getBeanPhotoUseCase: GetBeanPhotoUseCase, private val checkPhotoCapabilityUseCase: CheckPhotoCapabilityUseCase, private val photoCaptureManager: PhotoCaptureManager, private val stringResourceProvider: StringResourceProvider, private val validationStringProvider: ValidationStringProvider, private val domainErrorTranslator: DomainErrorTranslator )</ID>
    <ID>LongParameterList:PersistentGrindRecommendationTest.kt$PersistentGrindRecommendationTest$( beanId: String = "test_bean", suggestedGrindSetting: String = "5.5", adjustmentDirection: AdjustmentDirection = AdjustmentDirection.FINER, reason: String = "Test reason", recommendedDose: Double = 18.0, targetExtractionTime: IntRange = 25..30, timestamp: LocalDateTime = LocalDateTime.now(), wasFollowed: Boolean = false, basedOnTaste: Boolean = true, confidence: ConfidenceLevel = ConfidenceLevel.HIGH )</ID>
    <ID>LongParameterList:ShotRecordingViewModel.kt$ShotRecordingViewModel$( private val recordShotUseCase: RecordShotUseCase, private val getShotDetailsUseCase: GetShotDetailsUseCase, private val getTastePreselectionUseCase: GetTastePreselectionUseCase, private val recordTasteFeedbackUseCase: RecordTasteFeedbackUseCase, private val calculateGrindAdjustmentUseCase: CalculateGrindAdjustmentUseCase, private val manageGrindRecommendationUseCase: ManageGrindRecommendationUseCase, private val beanRepository: BeanRepository, private val shotRepository: ShotRepository, private val domainErrorTranslator: DomainErrorTranslator, private val stringResourceProvider: StringResourceProvider, private val validationStringProvider: ValidationStringProvider, private val grinderConfigRepository: com.jodli.coffeeshottimer.data.repository.GrinderConfigRepository, private val basketConfigRepository: com.jodli.coffeeshottimer.data.repository.BasketConfigRepository, @param:ApplicationContext private val context: Context, private val savedStateHandle: SavedStateHandle )</ID>
    <ID>MagicNumber:AddEditBeanScreen.kt$1000</ID>
    <ID>MagicNumber:AddEditBeanScreen.kt$24</ID>
    <ID>MagicNumber:AddEditBeanScreen.kt$60</ID>
    <ID>MagicNumber:AppDatabase.kt$AppDatabase.Companion.&lt;no name provided&gt;$3</ID>
    <ID>MagicNumber:AppDatabase.kt$AppDatabase.Companion.&lt;no name provided&gt;$4</ID>
    <ID>MagicNumber:AppDatabase.kt$AppDatabase.Companion.&lt;no name provided&gt;$5</ID>
    <ID>MagicNumber:AppDatabase.kt$AppDatabase.Companion.&lt;no name provided&gt;$6</ID>
    <ID>MagicNumber:AppDatabase.kt$AppDatabase.Companion.&lt;no name provided&gt;$7</ID>
    <ID>MagicNumber:AppDatabase.kt$AppDatabase.Companion.&lt;no name provided&gt;$8</ID>
    <ID>MagicNumber:BasketConfiguration.kt$BasketConfiguration$0.8f</ID>
    <ID>MagicNumber:BasketConfiguration.kt$BasketConfiguration$10f</ID>
    <ID>MagicNumber:BasketConfiguration.kt$BasketConfiguration$30f</ID>
    <ID>MagicNumber:BasketConfiguration.kt$BasketConfiguration$3f</ID>
    <ID>MagicNumber:BasketConfiguration.kt$BasketConfiguration$5f</ID>
    <ID>MagicNumber:BasketConfiguration.kt$BasketConfiguration$80f</ID>
    <ID>MagicNumber:BasketSetup.kt$13f</ID>
    <ID>MagicNumber:Bean.kt$Bean$100</ID>
    <ID>MagicNumber:Bean.kt$Bean$21</ID>
    <ID>MagicNumber:Bean.kt$Bean$365</ID>
    <ID>MagicNumber:Bean.kt$Bean$4</ID>
    <ID>MagicNumber:Bean.kt$Bean$500</ID>
    <ID>MagicNumber:BeanRepository.kt$BeanRepository$50</ID>
    <ID>MagicNumber:CoffeeShotTimerApplication.kt$CoffeeShotTimerApplication$0.25</ID>
    <ID>MagicNumber:CoffeeShotTimerApplication.kt$CoffeeShotTimerApplication$1024</ID>
    <ID>MagicNumber:CoffeeShotTimerApplication.kt$CoffeeShotTimerApplication$50</ID>
    <ID>MagicNumber:Color.kt$0xFF1A0F08</ID>
    <ID>MagicNumber:Color.kt$0xFF2D1B0F</ID>
    <ID>MagicNumber:Color.kt$0xFF5D3A1A</ID>
    <ID>MagicNumber:Color.kt$0xFF6B9B99</ID>
    <ID>MagicNumber:Color.kt$0xFF7BA5A3</ID>
    <ID>MagicNumber:Color.kt$0xFF9BC5C3</ID>
    <ID>MagicNumber:Color.kt$0xFFB8763D</ID>
    <ID>MagicNumber:Color.kt$0xFFD32F2F</ID>
    <ID>MagicNumber:Color.kt$0xFFD4935A</ID>
    <ID>MagicNumber:Color.kt$0xFFD4C4B0</ID>
    <ID>MagicNumber:Color.kt$0xFFE6B577</ID>
    <ID>MagicNumber:Color.kt$0xFFE8DDD0</ID>
    <ID>MagicNumber:Color.kt$0xFFF2E6D3</ID>
    <ID>MagicNumber:Color.kt$0xFFFAF5F0</ID>
    <ID>MagicNumber:DatabasePopulator.kt$DatabasePopulator$0.7f</ID>
    <ID>MagicNumber:DatabasePopulator.kt$DatabasePopulator$10</ID>
    <ID>MagicNumber:DatabasePopulator.kt$DatabasePopulator$12</ID>
    <ID>MagicNumber:DatabasePopulator.kt$DatabasePopulator$14.0</ID>
    <ID>MagicNumber:DatabasePopulator.kt$DatabasePopulator$15</ID>
    <ID>MagicNumber:DatabasePopulator.kt$DatabasePopulator$20</ID>
    <ID>MagicNumber:DatabasePopulator.kt$DatabasePopulator$20.0</ID>
    <ID>MagicNumber:DatabasePopulator.kt$DatabasePopulator$24</ID>
    <ID>MagicNumber:DatabasePopulator.kt$DatabasePopulator$25.0</ID>
    <ID>MagicNumber:DatabasePopulator.kt$DatabasePopulator$3</ID>
    <ID>MagicNumber:DatabasePopulator.kt$DatabasePopulator$3.0</ID>
    <ID>MagicNumber:DatabasePopulator.kt$DatabasePopulator$30</ID>
    <ID>MagicNumber:DatabasePopulator.kt$DatabasePopulator$4</ID>
    <ID>MagicNumber:DatabasePopulator.kt$DatabasePopulator$5</ID>
    <ID>MagicNumber:DatabasePopulator.kt$DatabasePopulator$5.0</ID>
    <ID>MagicNumber:DatabasePopulator.kt$DatabasePopulator$50</ID>
    <ID>MagicNumber:DatabasePopulator.kt$DatabasePopulator$7</ID>
    <ID>MagicNumber:DatabasePopulator.kt$DatabasePopulator$70.0</ID>
    <ID>MagicNumber:DebugDialog.kt$0.8f</ID>
    <ID>MagicNumber:DebugDialog.kt$3000</ID>
    <ID>MagicNumber:DebugTapDetector.kt$3000</ID>
    <ID>MagicNumber:DebugTapDetector.kt$5</ID>
    <ID>MagicNumber:DomainErrorTranslator.kt$DomainErrorTranslator$5</ID>
    <ID>MagicNumber:EquipmentSetupFlow.kt$EquipmentSetupFlowNavigator$3</ID>
    <ID>MagicNumber:EquipmentSetupFlow.kt$EquipmentSetupFlowNavigator$4</ID>
    <ID>MagicNumber:EquipmentSetupFlowScreen.kt$3</ID>
    <ID>MagicNumber:EquipmentSetupFlowScreen.kt$4</ID>
    <ID>MagicNumber:EquipmentSetupSummaryScreen.kt$10</ID>
    <ID>MagicNumber:EquipmentSetupSummaryScreen.kt$14</ID>
    <ID>MagicNumber:EquipmentSetupSummaryScreen.kt$20</ID>
    <ID>MagicNumber:FormStateManager.kt$FormStateManager$1000L</ID>
    <ID>MagicNumber:FormStateManager.kt$FormStateManager$24</ID>
    <ID>MagicNumber:FormStateManager.kt$FormStateManager$60</ID>
    <ID>MagicNumber:GetActiveBeansUseCase.kt$GetActiveBeansUseCase$14</ID>
    <ID>MagicNumber:GetActiveBeansUseCase.kt$GetActiveBeansUseCase$15</ID>
    <ID>MagicNumber:GetActiveBeansUseCase.kt$GetActiveBeansUseCase$30</ID>
    <ID>MagicNumber:GetActiveBeansUseCase.kt$GetActiveBeansUseCase$31</ID>
    <ID>MagicNumber:GetActiveBeansUseCase.kt$GetActiveBeansUseCase$4</ID>
    <ID>MagicNumber:GetActiveBeansUseCase.kt$GetActiveBeansUseCase$60</ID>
    <ID>MagicNumber:GetBeanHistoryUseCase.kt$GetBeanHistoryUseCase$30</ID>
    <ID>MagicNumber:GetShotDetailsUseCase.kt$GetShotDetailsUseCase$0.1</ID>
    <ID>MagicNumber:GetShotDetailsUseCase.kt$GetShotDetailsUseCase$0.3</ID>
    <ID>MagicNumber:GetShotDetailsUseCase.kt$GetShotDetailsUseCase$0.5</ID>
    <ID>MagicNumber:GetShotDetailsUseCase.kt$GetShotDetailsUseCase$1.5</ID>
    <ID>MagicNumber:GetShotDetailsUseCase.kt$GetShotDetailsUseCase$10</ID>
    <ID>MagicNumber:GetShotDetailsUseCase.kt$GetShotDetailsUseCase$100</ID>
    <ID>MagicNumber:GetShotDetailsUseCase.kt$GetShotDetailsUseCase$15</ID>
    <ID>MagicNumber:GetShotDetailsUseCase.kt$GetShotDetailsUseCase$20</ID>
    <ID>MagicNumber:GetShotDetailsUseCase.kt$GetShotDetailsUseCase$25</ID>
    <ID>MagicNumber:GetShotDetailsUseCase.kt$GetShotDetailsUseCase$3.0</ID>
    <ID>MagicNumber:GetShotDetailsUseCase.kt$GetShotDetailsUseCase$5</ID>
    <ID>MagicNumber:GetShotDetailsUseCase.kt$GetShotDetailsUseCase$50</ID>
    <ID>MagicNumber:GetShotHistoryUseCase.kt$GetShotHistoryUseCase$1.5</ID>
    <ID>MagicNumber:GetShotHistoryUseCase.kt$GetShotHistoryUseCase$25</ID>
    <ID>MagicNumber:GetShotHistoryUseCase.kt$GetShotHistoryUseCase$3.0</ID>
    <ID>MagicNumber:GetShotHistoryUseCase.kt$GetShotHistoryUseCase$30</ID>
    <ID>MagicNumber:GetShotStatisticsUseCase.kt$GetShotStatisticsUseCase$1.5</ID>
    <ID>MagicNumber:GetShotStatisticsUseCase.kt$GetShotStatisticsUseCase$10.0</ID>
    <ID>MagicNumber:GetShotStatisticsUseCase.kt$GetShotStatisticsUseCase$100</ID>
    <ID>MagicNumber:GetShotStatisticsUseCase.kt$GetShotStatisticsUseCase$100.0</ID>
    <ID>MagicNumber:GetShotStatisticsUseCase.kt$GetShotStatisticsUseCase$2.5</ID>
    <ID>MagicNumber:GetShotStatisticsUseCase.kt$GetShotStatisticsUseCase$20</ID>
    <ID>MagicNumber:GetShotStatisticsUseCase.kt$GetShotStatisticsUseCase$24</ID>
    <ID>MagicNumber:GetShotStatisticsUseCase.kt$GetShotStatisticsUseCase$25</ID>
    <ID>MagicNumber:GetShotStatisticsUseCase.kt$GetShotStatisticsUseCase$3.0</ID>
    <ID>MagicNumber:GetShotStatisticsUseCase.kt$GetShotStatisticsUseCase$30</ID>
    <ID>MagicNumber:GetShotStatisticsUseCase.kt$GetShotStatisticsUseCase$35</ID>
    <ID>MagicNumber:GetShotStatisticsUseCase.kt$GetShotStatisticsUseCase$4</ID>
    <ID>MagicNumber:GetShotStatisticsUseCase.kt$GetShotStatisticsUseCase$50</ID>
    <ID>MagicNumber:GetShotStatisticsUseCase.kt$GetShotStatisticsUseCase$7</ID>
    <ID>MagicNumber:GetTastePreselectionUseCase.kt$GetTastePreselectionUseCase$25.0</ID>
    <ID>MagicNumber:GetTastePreselectionUseCase.kt$GetTastePreselectionUseCase$30.0</ID>
    <ID>MagicNumber:GrindAdjustmentCard.kt$1200</ID>
    <ID>MagicNumber:GrinderConfiguration.kt$GrinderConfiguration$0.01</ID>
    <ID>MagicNumber:GrinderConfiguration.kt$GrinderConfiguration$10</ID>
    <ID>MagicNumber:GrinderConfiguration.kt$GrinderConfiguration$10.0</ID>
    <ID>MagicNumber:GrinderConfiguration.kt$GrinderConfiguration$100</ID>
    <ID>MagicNumber:GrinderConfiguration.kt$GrinderConfiguration$1000</ID>
    <ID>MagicNumber:GrinderConfiguration.kt$GrinderConfiguration$1e-6</ID>
    <ID>MagicNumber:GrinderConfiguration.kt$GrinderConfiguration$3</ID>
    <ID>MagicNumber:GrinderScaleSetup.kt$10</ID>
    <ID>MagicNumber:GrinderScaleSetup.kt$100</ID>
    <ID>MagicNumber:GrinderScaleSetup.kt$30</ID>
    <ID>MagicNumber:GrinderScaleSetup.kt$50</ID>
    <ID>MagicNumber:GrinderScaleSetup.kt$60</ID>
    <ID>MagicNumber:GrinderScaleSetup.kt$80</ID>
    <ID>MagicNumber:GuidedBeanCreationScreen.kt$0.3f</ID>
    <ID>MagicNumber:GuidedBeanCreationScreen.kt$0.4f</ID>
    <ID>MagicNumber:GuidedBeanCreationScreen.kt$0.6f</ID>
    <ID>MagicNumber:GuidedBeanCreationScreen.kt$0.7f</ID>
    <ID>MagicNumber:GuidedBeanCreationScreen.kt$GuidedBeanCreationPreviewData$7</ID>
    <ID>MagicNumber:GuidedBeanCreationViewModel.kt$GuidedBeanCreationViewModel$100</ID>
    <ID>MagicNumber:GuidedBeanCreationViewModel.kt$GuidedBeanCreationViewModel$21</ID>
    <ID>MagicNumber:GuidedBeanCreationViewModel.kt$GuidedBeanCreationViewModel$365</ID>
    <ID>MagicNumber:GuidedBeanCreationViewModel.kt$GuidedBeanCreationViewModel$4</ID>
    <ID>MagicNumber:IntroductionScreen.kt$0.3f</ID>
    <ID>MagicNumber:IntroductionScreen.kt$0.7f</ID>
    <ID>MagicNumber:LandscapeComponents.kt$0.5f</ID>
    <ID>MagicNumber:ManageGrindRecommendationUseCase.kt$ManageGrindRecommendationUseCase$18.0</ID>
    <ID>MagicNumber:MemoryOptimizer.kt$MemoryOptimizer$80.0</ID>
    <ID>MagicNumber:PersistentGrindRecommendation.kt$PersistentGrindRecommendation$7</ID>
    <ID>MagicNumber:PersistentGrindRecommendation.kt$PersistentGrindRecommendation.Companion$25</ID>
    <ID>MagicNumber:PersistentGrindRecommendation.kt$PersistentGrindRecommendation.Companion$30</ID>
    <ID>MagicNumber:PhotoCaptureManagerImpl.kt$PhotoCaptureManagerImpl$1000</ID>
    <ID>MagicNumber:PhotoCaptureManagerImpl.kt$PhotoCaptureManagerImpl$24</ID>
    <ID>MagicNumber:PhotoCaptureManagerImpl.kt$PhotoCaptureManagerImpl$60</ID>
    <ID>MagicNumber:PhotoComponents.kt$16f</ID>
    <ID>MagicNumber:PhotoComponents.kt$9f</ID>
    <ID>MagicNumber:PhotoStorageManagerImpl.kt$PhotoStorageManagerImpl$1024</ID>
    <ID>MagicNumber:PhotoStorageManagerImpl.kt$PhotoStorageManagerImpl$180f</ID>
    <ID>MagicNumber:PhotoStorageManagerImpl.kt$PhotoStorageManagerImpl$270f</ID>
    <ID>MagicNumber:PhotoStorageManagerImpl.kt$PhotoStorageManagerImpl$90f</ID>
    <ID>MagicNumber:RecordShotScreen.kt$1.5</ID>
    <ID>MagicNumber:RecordShotScreen.kt$1000</ID>
    <ID>MagicNumber:RecordShotScreen.kt$3.0</ID>
    <ID>MagicNumber:RecordShotUseCase.kt$RecordShotUseCase$1.5</ID>
    <ID>MagicNumber:RecordShotUseCase.kt$RecordShotUseCase$100</ID>
    <ID>MagicNumber:RecordShotUseCase.kt$RecordShotUseCase$1000</ID>
    <ID>MagicNumber:RecordShotUseCase.kt$RecordShotUseCase$25</ID>
    <ID>MagicNumber:RecordShotUseCase.kt$RecordShotUseCase$3.0</ID>
    <ID>MagicNumber:RecordShotUseCase.kt$RecordShotUseCase$30</ID>
    <ID>MagicNumber:RecordShotUseCase.kt$RecordShotUseCase$60</ID>
    <ID>MagicNumber:Shot.kt$Shot$0.1</ID>
    <ID>MagicNumber:Shot.kt$Shot$1.5</ID>
    <ID>MagicNumber:Shot.kt$Shot$100</ID>
    <ID>MagicNumber:Shot.kt$Shot$100.0</ID>
    <ID>MagicNumber:Shot.kt$Shot$1000L</ID>
    <ID>MagicNumber:Shot.kt$Shot$120</ID>
    <ID>MagicNumber:Shot.kt$Shot$25</ID>
    <ID>MagicNumber:Shot.kt$Shot$3.0</ID>
    <ID>MagicNumber:Shot.kt$Shot$30</ID>
    <ID>MagicNumber:Shot.kt$Shot$5</ID>
    <ID>MagicNumber:Shot.kt$Shot$50</ID>
    <ID>MagicNumber:Shot.kt$Shot$50.0</ID>
    <ID>MagicNumber:Shot.kt$Shot$500</ID>
    <ID>MagicNumber:Shot.kt$Shot$60</ID>
    <ID>MagicNumber:ShotDetailsScreen.kt$3000</ID>
    <ID>MagicNumber:ShotHistoryFilterDialog.kt$1000</ID>
    <ID>MagicNumber:ShotHistoryFilterDialog.kt$23</ID>
    <ID>MagicNumber:ShotHistoryFilterDialog.kt$24</ID>
    <ID>MagicNumber:ShotHistoryFilterDialog.kt$59</ID>
    <ID>MagicNumber:ShotHistoryFilterDialog.kt$60</ID>
    <ID>MagicNumber:ShotHistoryScreen.kt$0.25f</ID>
    <ID>MagicNumber:ShotHistoryScreen.kt$0.5f</ID>
    <ID>MagicNumber:ShotHistoryScreen.kt$1.5</ID>
    <ID>MagicNumber:ShotHistoryScreen.kt$100</ID>
    <ID>MagicNumber:ShotHistoryScreen.kt$15.0</ID>
    <ID>MagicNumber:ShotHistoryScreen.kt$20</ID>
    <ID>MagicNumber:ShotHistoryScreen.kt$20.0</ID>
    <ID>MagicNumber:ShotHistoryScreen.kt$25</ID>
    <ID>MagicNumber:ShotHistoryScreen.kt$25.0</ID>
    <ID>MagicNumber:ShotHistoryScreen.kt$3</ID>
    <ID>MagicNumber:ShotHistoryScreen.kt$3.0</ID>
    <ID>MagicNumber:ShotHistoryScreen.kt$30</ID>
    <ID>MagicNumber:ShotHistoryScreen.kt$4</ID>
    <ID>MagicNumber:ShotHistoryScreen.kt$40</ID>
    <ID>MagicNumber:ShotHistoryScreen.kt$60</ID>
    <ID>MagicNumber:ShotHistoryScreen.kt$60.0</ID>
    <ID>MagicNumber:ShotHistoryScreen.kt$80</ID>
    <ID>MagicNumber:ShotHistoryScreen.kt$999</ID>
    <ID>MagicNumber:ShotHistoryViewModel.kt$ShotHistoryViewModel$100</ID>
    <ID>MagicNumber:ShotHistoryViewModel.kt$ShotHistoryViewModel$200</ID>
    <ID>MagicNumber:ShotRecordingViewModel.kt$ShotRecordingViewModel$0.5f</ID>
    <ID>MagicNumber:ShotRecordingViewModel.kt$ShotRecordingViewModel$1.5</ID>
    <ID>MagicNumber:ShotRecordingViewModel.kt$ShotRecordingViewModel$10</ID>
    <ID>MagicNumber:ShotRecordingViewModel.kt$ShotRecordingViewModel$1000L</ID>
    <ID>MagicNumber:ShotRecordingViewModel.kt$ShotRecordingViewModel$100L</ID>
    <ID>MagicNumber:ShotRecordingViewModel.kt$ShotRecordingViewModel$10f</ID>
    <ID>MagicNumber:ShotRecordingViewModel.kt$ShotRecordingViewModel$20.0f</ID>
    <ID>MagicNumber:ShotRecordingViewModel.kt$ShotRecordingViewModel$22f</ID>
    <ID>MagicNumber:ShotRecordingViewModel.kt$ShotRecordingViewModel$24</ID>
    <ID>MagicNumber:ShotRecordingViewModel.kt$ShotRecordingViewModel$3</ID>
    <ID>MagicNumber:ShotRecordingViewModel.kt$ShotRecordingViewModel$3.0</ID>
    <ID>MagicNumber:ShotRecordingViewModel.kt$ShotRecordingViewModel$30000L</ID>
    <ID>MagicNumber:ShotRecordingViewModel.kt$ShotRecordingViewModel$3000L</ID>
    <ID>MagicNumber:ShotRecordingViewModel.kt$ShotRecordingViewModel$55f</ID>
    <ID>MagicNumber:ShotRecordingViewModel.kt$ShotRecordingViewModel$5f</ID>
    <ID>MagicNumber:ShotRecordingViewModel.kt$ShotRecordingViewModel$60</ID>
    <ID>MagicNumber:TasteUtils.kt$TasteUtils$25</ID>
    <ID>MagicNumber:TasteUtils.kt$TasteUtils$30</ID>
    <ID>MagicNumber:TimerComponents.kt$0.98f</ID>
    <ID>MagicNumber:TimerComponents.kt$0xFF4CAF50</ID>
    <ID>MagicNumber:TimerComponents.kt$0xFFF44336</ID>
    <ID>MagicNumber:TimerComponents.kt$0xFFFF9800</ID>
    <ID>MagicNumber:TimerComponents.kt$0xFFFFC107</ID>
    <ID>MagicNumber:TimerComponents.kt$1.02f</ID>
    <ID>MagicNumber:TimerComponents.kt$10</ID>
    <ID>MagicNumber:TimerComponents.kt$100</ID>
    <ID>MagicNumber:TimerComponents.kt$1000</ID>
    <ID>MagicNumber:TimerComponents.kt$1000L</ID>
    <ID>MagicNumber:TimerComponents.kt$10L</ID>
    <ID>MagicNumber:TimerComponents.kt$1500</ID>
    <ID>MagicNumber:TimerComponents.kt$20</ID>
    <ID>MagicNumber:TimerComponents.kt$200</ID>
    <ID>MagicNumber:TimerComponents.kt$25</ID>
    <ID>MagicNumber:TimerComponents.kt$25L</ID>
    <ID>MagicNumber:TimerComponents.kt$300L</ID>
    <ID>MagicNumber:TimerComponents.kt$35</ID>
    <ID>MagicNumber:TimerComponents.kt$60</ID>
    <ID>MagicNumber:ValidationComponents.kt$ValidationUtils$100</ID>
    <ID>MagicNumber:ValidationComponents.kt$ValidationUtils$365</ID>
    <ID>MagicNumber:ValidationExtensions.kt$0.8</ID>
    <ID>MagicNumber:ValidationExtensions.kt$30</ID>
    <ID>MagicNumber:ValidationExtensions.kt$90</ID>
    <ID>MagicNumber:WeightSliderComponents.kt$0.01f</ID>
    <ID>MagicNumber:WeightSliderComponents.kt$0.1f</ID>
    <ID>MagicNumber:WeightSliderComponents.kt$0.5f</ID>
    <ID>MagicNumber:WeightSliderComponents.kt$10f</ID>
    <ID>MagicNumber:WeightSliderComponents.kt$3</ID>
    <ID>MatchingDeclarationName:ValidationComponents.kt$ValidationUtils</ID>
    <ID>MaximumLineLength:AboutScreen.kt$ </ID>
    <ID>MaximumLineLength:AddEditBeanScreen.kt$ </ID>
    <ID>MaximumLineLength:AddEditBeanViewModel.kt$AddEditBeanViewModel$ </ID>
    <ID>MaximumLineLength:AppDatabase.kt$AppDatabase.Companion.&lt;no name provided&gt;$ </ID>
    <ID>MaximumLineLength:BasketConfigRepository.kt$BasketConfigRepository$ </ID>
    <ID>MaximumLineLength:BasketSettingsScreen.kt$ </ID>
    <ID>MaximumLineLength:BasketSettingsViewModel.kt$BasketSettingsViewModel$ </ID>
    <ID>MaximumLineLength:BeanManagementScreen.kt$ </ID>
    <ID>MaximumLineLength:BeanRepository.kt$BeanRepository$ </ID>
    <ID>MaximumLineLength:CommonComponents.kt$ </ID>
    <ID>MaximumLineLength:DatabasePopulator.kt$DatabasePopulator$ </ID>
    <ID>MaximumLineLength:DebugViewModel.kt$DebugViewModel$ </ID>
    <ID>MaximumLineLength:DomainErrorTranslator.kt$DomainErrorTranslator$ </ID>
    <ID>MaximumLineLength:EquipmentSettingsViewModel.kt$EquipmentSettingsViewModel$ </ID>
    <ID>MaximumLineLength:EquipmentSetupFlowScreen.kt$ </ID>
    <ID>MaximumLineLength:EquipmentSetupFlowViewModel.kt$EquipmentSetupFlowViewModel$ </ID>
    <ID>MaximumLineLength:EquipmentSetupSummaryScreen.kt$ </ID>
    <ID>MaximumLineLength:GetActiveBeansUseCase.kt$GetActiveBeansUseCase$ </ID>
    <ID>MaximumLineLength:GetShotDetailsUseCase.kt$GetShotDetailsUseCase$ </ID>
    <ID>MaximumLineLength:GetShotStatisticsUseCase.kt$GetShotStatisticsUseCase$ </ID>
    <ID>MaximumLineLength:GrindAdjustmentFormatter.kt$GrindAdjustmentFormatter$ </ID>
    <ID>MaximumLineLength:GrinderConfigRepository.kt$GrinderConfigRepository$ </ID>
    <ID>MaximumLineLength:GrinderSettingsScreen.kt$ </ID>
    <ID>MaximumLineLength:MoreScreen.kt$ </ID>
    <ID>MaximumLineLength:OnboardingManager.kt$OnboardingProgress$ </ID>
    <ID>MaximumLineLength:PhotoStorageManagerImpl.kt$PhotoStorageManagerImpl$ </ID>
    <ID>MaximumLineLength:RecommendationCard.kt$private</ID>
    <ID>MaximumLineLength:RecordShotUseCase.kt$RecordShotUseCase$ </ID>
    <ID>MaximumLineLength:ShotDetailsScreen.kt$ </ID>
    <ID>MaximumLineLength:ShotDetailsViewModel.kt$ShotDetailsViewModel$ </ID>
    <ID>MaximumLineLength:ShotHistoryFilterDialog.kt$ </ID>
    <ID>MaximumLineLength:ShotHistoryScreen.kt$ </ID>
    <ID>MaximumLineLength:ShotHistoryViewModel.kt$ShotHistoryViewModel$ </ID>
    <ID>MaximumLineLength:ShotRecordingViewModel.kt$ShotRecordingViewModel$ </ID>
    <ID>MaximumLineLength:ShotRepository.kt$ShotRepository$ </ID>
    <ID>MaximumLineLength:TasteFeedbackEditor.kt$ </ID>
    <ID>MaximumLineLength:TimerComponents.kt$ </ID>
    <ID>MaximumLineLength:ValidationComponents.kt$ </ID>
    <ID>MaximumLineLength:ValidationExtensions.kt$fun</ID>
    <ID>MaximumLineLength:WeightSliderComponents.kt$ </ID>
    <ID>ModifierListSpacing:TimerComponents.kt$@Composable private</ID>
    <ID>MultiLineIfElse:BeanComponents.kt$MaterialTheme.colorScheme.onSurface</ID>
    <ID>MultiLineIfElse:BeanComponents.kt$MaterialTheme.colorScheme.onSurfaceVariant</ID>
    <ID>MultiLineIfElse:BeanComponents.kt$MaterialTheme.colorScheme.primary</ID>
    <ID>MultiLineIfElse:BeanManagementScreen.kt$MaterialTheme.colorScheme.onPrimaryContainer</ID>
    <ID>MultiLineIfElse:BeanManagementScreen.kt$MaterialTheme.colorScheme.onSecondaryContainer</ID>
    <ID>MultiLineIfElse:BeanManagementScreen.kt$MaterialTheme.colorScheme.onSurfaceVariant</ID>
    <ID>MultiLineIfElse:BeanManagementScreen.kt$MaterialTheme.colorScheme.primary</ID>
    <ID>MultiLineIfElse:BeanManagementScreen.kt$MaterialTheme.colorScheme.primaryContainer</ID>
    <ID>MultiLineIfElse:BeanManagementScreen.kt$MaterialTheme.colorScheme.secondaryContainer</ID>
    <ID>MultiLineIfElse:BeanManagementScreen.kt$null</ID>
    <ID>MultiLineIfElse:BeanManagementScreen.kt$stringResource(R.string.text_fresh)</ID>
    <ID>MultiLineIfElse:BeanManagementScreen.kt$when { daysSinceRoast &lt; 4 -&gt; stringResource(R.string.text_too_fresh) daysSinceRoast &lt;= 45 -&gt; stringResource(R.string.text_good) daysSinceRoast &lt;= 90 -&gt; stringResource(R.string.text_dialog_ok) else -&gt; stringResource(R.string.text_stale) }</ID>
    <ID>MultiLineIfElse:GetShotDetailsUseCase.kt$GetShotDetailsUseCase$0.0</ID>
    <ID>MultiLineIfElse:GetShotDetailsUseCase.kt$GetShotDetailsUseCase$DomainException(DomainErrorCode.UNKNOWN_ERROR, "Unexpected error comparing shots", exception)</ID>
    <ID>MultiLineIfElse:GetShotDetailsUseCase.kt$GetShotDetailsUseCase$DomainException(DomainErrorCode.UNKNOWN_ERROR, "Unexpected error getting last shot for bean", exception)</ID>
    <ID>MultiLineIfElse:GetShotDetailsUseCase.kt$GetShotDetailsUseCase$DomainException(DomainErrorCode.UNKNOWN_ERROR, "Unexpected error getting shot details", exception)</ID>
    <ID>MultiLineIfElse:GetShotDetailsUseCase.kt$GetShotDetailsUseCase$exception</ID>
    <ID>MultiLineIfElse:GetShotStatisticsUseCase.kt$GetShotStatisticsUseCase$0.0</ID>
    <ID>MultiLineIfElse:GetShotStatisticsUseCase.kt$GetShotStatisticsUseCase$DomainException(DomainErrorCode.UNKNOWN_ERROR, "Unexpected error getting brew ratio analysis", exception)</ID>
    <ID>MultiLineIfElse:GetShotStatisticsUseCase.kt$GetShotStatisticsUseCase$DomainException(DomainErrorCode.UNKNOWN_ERROR, "Unexpected error getting extraction time analysis", exception)</ID>
    <ID>MultiLineIfElse:GetShotStatisticsUseCase.kt$GetShotStatisticsUseCase$DomainException(DomainErrorCode.UNKNOWN_ERROR, "Unexpected error getting grinder setting analysis", exception)</ID>
    <ID>MultiLineIfElse:GetShotStatisticsUseCase.kt$GetShotStatisticsUseCase$DomainException(DomainErrorCode.UNKNOWN_ERROR, "Unexpected error getting overall statistics", exception)</ID>
    <ID>MultiLineIfElse:GetShotStatisticsUseCase.kt$GetShotStatisticsUseCase$DomainException(DomainErrorCode.UNKNOWN_ERROR, "Unexpected error getting shot trends", exception)</ID>
    <ID>MultiLineIfElse:GetShotStatisticsUseCase.kt$GetShotStatisticsUseCase$exception</ID>
    <ID>MultiLineIfElse:GrindAdjustmentCard.kt$MaterialTheme.typography.bodyMedium</ID>
    <ID>MultiLineIfElse:GrindAdjustmentCard.kt$MaterialTheme.typography.bodySmall</ID>
    <ID>MultiLineIfElse:GrindAdjustmentCard.kt$MaterialTheme.typography.titleLarge</ID>
    <ID>MultiLineIfElse:GrindAdjustmentCard.kt$MaterialTheme.typography.titleMedium</ID>
    <ID>MultiLineIfElse:GrindAdjustmentCard.kt$R.string.text_current_setting</ID>
    <ID>MultiLineIfElse:GrindAdjustmentCard.kt$R.string.text_current_short</ID>
    <ID>MultiLineIfElse:GrindAdjustmentCard.kt$R.string.text_try_next</ID>
    <ID>MultiLineIfElse:GrindAdjustmentCard.kt$R.string.text_try_short</ID>
    <ID>MultiLineIfElse:RecordShotScreen.kt$MaterialTheme.colorScheme.onSurface</ID>
    <ID>MultiLineIfElse:RecordShotScreen.kt$MaterialTheme.colorScheme.onSurfaceVariant</ID>
    <ID>MultiLineIfElse:RecordShotScreen.kt$MaterialTheme.colorScheme.primary</ID>
    <ID>MultiLineIfElse:RecordShotUseCase.kt$RecordShotUseCase$DomainException(DomainErrorCode.UNKNOWN_ERROR, "Unexpected error recording shot", exception)</ID>
    <ID>MultiLineIfElse:RecordShotUseCase.kt$RecordShotUseCase$exception</ID>
    <ID>MultiLineIfElse:ShotHistoryScreen.kt$"+${ String.format( java.util.Locale.ROOT, "%.1f", trends.extractionTimeTrend ) }s"</ID>
    <ID>MultiLineIfElse:ShotHistoryScreen.kt$"+${ String.format( java.util.Locale.ROOT, "%.2f", trends.brewRatioTrend ) }"</ID>
    <ID>MultiLineIfElse:ShotHistoryScreen.kt$String.format(java.util.Locale.ROOT, "%.2f", trends.brewRatioTrend)</ID>
    <ID>MultiLineIfElse:ShotHistoryScreen.kt$stringResource(R.string.format_extraction_time_trend_display, trends.extractionTimeTrend)</ID>
    <ID>MultiLineIfElse:StepSizeSelector.kt$MaterialTheme.colorScheme.error</ID>
    <ID>MultiLineIfElse:StepSizeSelector.kt$MaterialTheme.colorScheme.primary</ID>
    <ID>MultiLineIfElse:TimerComponents.kt$MaterialTheme.colorScheme.primary</ID>
    <ID>MultiLineIfElse:TimerComponents.kt$MaterialTheme.colorScheme.secondary</ID>
    <ID>MultiLineIfElse:TimerComponents.kt$Modifier</ID>
    <ID>MultiLineIfElse:ValidationComponents.kt$null</ID>
    <ID>MultiLineIfElse:ValidationExtensions.kt$result</ID>
    <ID>MultiLineIfElse:WeightSliderComponents.kt$MaterialTheme.colorScheme.onSurfaceVariant</ID>
    <ID>MultiLineIfElse:WeightSliderComponents.kt$MaterialTheme.colorScheme.onSurfaceVariant.copy(alpha = 0.5f)</ID>
    <ID>MultiLineIfElse:WeightSliderComponents.kt$MaterialTheme.colorScheme.primary</ID>
    <ID>MultiLineIfElse:WeightSliderComponents.kt$MaterialTheme.colorScheme.secondary</ID>
    <ID>MultiLineIfElse:WeightSliderComponents.kt$MaterialTheme.colorScheme.tertiary.copy(alpha = 0.7f)</ID>
    <ID>NestedBlockDepth:UpdateBeanUseCase.kt$UpdateBeanUseCase$suspend fun getBeanForEditing(beanId: String): Result&lt;Bean&gt;</ID>
    <ID>NewLineAtEndOfFile:AddPhotoToBeanUseCase.kt$com.jodli.coffeeshottimer.domain.usecase.AddPhotoToBeanUseCase.kt</ID>
    <ID>NewLineAtEndOfFile:AddPhotoToBeanUseCaseTest.kt$com.jodli.coffeeshottimer.domain.usecase.AddPhotoToBeanUseCaseTest.kt</ID>
    <ID>NewLineAtEndOfFile:AppDatabaseTest.kt$com.jodli.coffeeshottimer.data.database.AppDatabaseTest.kt</ID>
    <ID>NewLineAtEndOfFile:BasketSettingsScreen.kt$com.jodli.coffeeshottimer.ui.screens.BasketSettingsScreen.kt</ID>
    <ID>NewLineAtEndOfFile:BasketSettingsViewModel.kt$com.jodli.coffeeshottimer.ui.viewmodel.BasketSettingsViewModel.kt</ID>
    <ID>NewLineAtEndOfFile:BasketValidationHelpers.kt$com.jodli.coffeeshottimer.ui.validation.BasketValidationHelpers.kt</ID>
    <ID>NewLineAtEndOfFile:BeanDao.kt$com.jodli.coffeeshottimer.data.dao.BeanDao.kt</ID>
    <ID>NewLineAtEndOfFile:BeanDaoTest.kt$com.jodli.coffeeshottimer.data.dao.BeanDaoTest.kt</ID>
    <ID>NewLineAtEndOfFile:BeanManagementViewModelTest.kt$com.jodli.coffeeshottimer.ui.viewmodel.BeanManagementViewModelTest.kt</ID>
    <ID>NewLineAtEndOfFile:BeanRepository.kt$com.jodli.coffeeshottimer.data.repository.BeanRepository.kt</ID>
    <ID>NewLineAtEndOfFile:BeanRepositoryTest.kt$com.jodli.coffeeshottimer.data.repository.BeanRepositoryTest.kt</ID>
    <ID>NewLineAtEndOfFile:BeanTest.kt$com.jodli.coffeeshottimer.data.model.BeanTest.kt</ID>
    <ID>NewLineAtEndOfFile:BottomNavigationBar.kt$com.jodli.coffeeshottimer.ui.components.BottomNavigationBar.kt</ID>
    <ID>NewLineAtEndOfFile:CheckPhotoCapabilityUseCase.kt$com.jodli.coffeeshottimer.domain.usecase.CheckPhotoCapabilityUseCase.kt</ID>
    <ID>NewLineAtEndOfFile:CoffeeShotTimerApplication.kt$com.jodli.coffeeshottimer.CoffeeShotTimerApplication.kt</ID>
    <ID>NewLineAtEndOfFile:CommonComponents.kt$com.jodli.coffeeshottimer.ui.components.CommonComponents.kt</ID>
    <ID>NewLineAtEndOfFile:ComponentTypographyUsageTest.kt$com.jodli.coffeeshottimer.ui.components.ComponentTypographyUsageTest.kt</ID>
    <ID>NewLineAtEndOfFile:ConditionalCompilationTest.kt$com.jodli.coffeeshottimer.debug.ConditionalCompilationTest.kt</ID>
    <ID>NewLineAtEndOfFile:DatabaseModule.kt$com.jodli.coffeeshottimer.di.DatabaseModule.kt</ID>
    <ID>NewLineAtEndOfFile:DatabasePopulator.kt$com.jodli.coffeeshottimer.data.util.DatabasePopulator.kt</ID>
    <ID>NewLineAtEndOfFile:DatabasePopulatorTest.kt$com.jodli.coffeeshottimer.data.util.DatabasePopulatorTest.kt</ID>
    <ID>NewLineAtEndOfFile:DebugDialog.kt$com.jodli.coffeeshottimer.ui.components.DebugDialog.kt</ID>
    <ID>NewLineAtEndOfFile:DebugTapDetector.kt$com.jodli.coffeeshottimer.ui.components.DebugTapDetector.kt</ID>
    <ID>NewLineAtEndOfFile:DebugViewModel.kt$com.jodli.coffeeshottimer.ui.viewmodel.DebugViewModel.kt</ID>
    <ID>NewLineAtEndOfFile:DebugViewModelTest.kt$com.jodli.coffeeshottimer.ui.viewmodel.DebugViewModelTest.kt</ID>
    <ID>NewLineAtEndOfFile:DesignSystemValidationTest.kt$com.jodli.coffeeshottimer.ui.components.DesignSystemValidationTest.kt</ID>
    <ID>NewLineAtEndOfFile:ExampleUnitTest.kt$com.jodli.coffeeshottimer.ExampleUnitTest.kt</ID>
    <ID>NewLineAtEndOfFile:GetActiveBeansUseCase.kt$com.jodli.coffeeshottimer.domain.usecase.GetActiveBeansUseCase.kt</ID>
    <ID>NewLineAtEndOfFile:GetActiveBeansUseCaseTest.kt$com.jodli.coffeeshottimer.domain.usecase.GetActiveBeansUseCaseTest.kt</ID>
    <ID>NewLineAtEndOfFile:GetBeanHistoryUseCase.kt$com.jodli.coffeeshottimer.domain.usecase.GetBeanHistoryUseCase.kt</ID>
    <ID>NewLineAtEndOfFile:GetBeanHistoryUseCaseTest.kt$com.jodli.coffeeshottimer.domain.usecase.GetBeanHistoryUseCaseTest.kt</ID>
    <ID>NewLineAtEndOfFile:GetBeanPhotoUseCase.kt$com.jodli.coffeeshottimer.domain.usecase.GetBeanPhotoUseCase.kt</ID>
    <ID>NewLineAtEndOfFile:GetBeanPhotoUseCaseTest.kt$com.jodli.coffeeshottimer.domain.usecase.GetBeanPhotoUseCaseTest.kt</ID>
    <ID>NewLineAtEndOfFile:GetShotDetailsUseCaseTest.kt$com.jodli.coffeeshottimer.domain.usecase.GetShotDetailsUseCaseTest.kt</ID>
    <ID>NewLineAtEndOfFile:GetShotHistoryUseCase.kt$com.jodli.coffeeshottimer.domain.usecase.GetShotHistoryUseCase.kt</ID>
    <ID>NewLineAtEndOfFile:GetShotHistoryUseCaseTest.kt$com.jodli.coffeeshottimer.domain.usecase.GetShotHistoryUseCaseTest.kt</ID>
    <ID>NewLineAtEndOfFile:GetShotStatisticsUseCase.kt$com.jodli.coffeeshottimer.domain.usecase.GetShotStatisticsUseCase.kt</ID>
    <ID>NewLineAtEndOfFile:GetShotStatisticsUseCaseTest.kt$com.jodli.coffeeshottimer.domain.usecase.GetShotStatisticsUseCaseTest.kt</ID>
    <ID>NewLineAtEndOfFile:GrinderConfigDao.kt$com.jodli.coffeeshottimer.data.dao.GrinderConfigDao.kt</ID>
    <ID>NewLineAtEndOfFile:GrinderConfigDaoTest.kt$com.jodli.coffeeshottimer.data.dao.GrinderConfigDaoTest.kt</ID>
    <ID>NewLineAtEndOfFile:GrinderConfigRepository.kt$com.jodli.coffeeshottimer.data.repository.GrinderConfigRepository.kt</ID>
    <ID>NewLineAtEndOfFile:GrinderConfigRepositoryTest.kt$com.jodli.coffeeshottimer.data.repository.GrinderConfigRepositoryTest.kt</ID>
    <ID>NewLineAtEndOfFile:GrinderConfiguration.kt$com.jodli.coffeeshottimer.data.model.GrinderConfiguration.kt</ID>
    <ID>NewLineAtEndOfFile:GrinderConfigurationTest.kt$com.jodli.coffeeshottimer.data.model.GrinderConfigurationTest.kt</ID>
    <ID>NewLineAtEndOfFile:GrinderSettingSliderTest.kt$com.jodli.coffeeshottimer.ui.components.GrinderSettingSliderTest.kt</ID>
    <ID>NewLineAtEndOfFile:GrinderValidationHelpers.kt$com.jodli.coffeeshottimer.ui.validation.GrinderValidationHelpers.kt</ID>
    <ID>NewLineAtEndOfFile:GuidedBeanCreationData.kt$com.jodli.coffeeshottimer.data.onboarding.GuidedBeanCreationData.kt</ID>
    <ID>NewLineAtEndOfFile:GuidedBeanCreationScreen.kt$com.jodli.coffeeshottimer.ui.screens.GuidedBeanCreationScreen.kt</ID>
    <ID>NewLineAtEndOfFile:GuidedBeanCreationViewModel.kt$com.jodli.coffeeshottimer.ui.viewmodel.GuidedBeanCreationViewModel.kt</ID>
    <ID>NewLineAtEndOfFile:HiltModuleTest.kt$com.jodli.coffeeshottimer.di.HiltModuleTest.kt</ID>
    <ID>NewLineAtEndOfFile:IntroductionScreenTest.kt$com.jodli.coffeeshottimer.ui.screens.IntroductionScreenTest.kt</ID>
    <ID>NewLineAtEndOfFile:LandscapeConfigurationTest.kt$com.jodli.coffeeshottimer.ui.theme.LandscapeConfigurationTest.kt</ID>
    <ID>NewLineAtEndOfFile:LoadingAndErrorStateTest.kt$com.jodli.coffeeshottimer.ui.components.LoadingAndErrorStateTest.kt</ID>
    <ID>NewLineAtEndOfFile:MainActivityViewModel.kt$com.jodli.coffeeshottimer.ui.viewmodel.MainActivityViewModel.kt</ID>
    <ID>NewLineAtEndOfFile:MemoryOptimizer.kt$com.jodli.coffeeshottimer.data.util.MemoryOptimizer.kt</ID>
    <ID>NewLineAtEndOfFile:NavigationTest.kt$com.jodli.coffeeshottimer.ui.navigation.NavigationTest.kt</ID>
    <ID>NewLineAtEndOfFile:OnboardingManager.kt$com.jodli.coffeeshottimer.data.onboarding.OnboardingManager.kt</ID>
    <ID>NewLineAtEndOfFile:OnboardingNavigationIntegrationTest.kt$com.jodli.coffeeshottimer.ui.navigation.OnboardingNavigationIntegrationTest.kt</ID>
    <ID>NewLineAtEndOfFile:OnboardingPreferences.kt$com.jodli.coffeeshottimer.data.onboarding.OnboardingPreferences.kt</ID>
    <ID>NewLineAtEndOfFile:PaginatedResult.kt$com.jodli.coffeeshottimer.data.model.PaginatedResult.kt</ID>
    <ID>NewLineAtEndOfFile:PhotoCaptureManagerImpl.kt$com.jodli.coffeeshottimer.data.storage.PhotoCaptureManagerImpl.kt</ID>
    <ID>NewLineAtEndOfFile:PhotoCaptureManagerTest.kt$com.jodli.coffeeshottimer.data.storage.PhotoCaptureManagerTest.kt</ID>
    <ID>NewLineAtEndOfFile:PhotoComponents.kt$com.jodli.coffeeshottimer.ui.components.PhotoComponents.kt</ID>
    <ID>NewLineAtEndOfFile:PhotoStorageManager.kt$com.jodli.coffeeshottimer.data.storage.PhotoStorageManager.kt</ID>
    <ID>NewLineAtEndOfFile:PhotoStorageManagerImpl.kt$com.jodli.coffeeshottimer.data.storage.PhotoStorageManagerImpl.kt</ID>
    <ID>NewLineAtEndOfFile:PhotoStorageManagerTest.kt$com.jodli.coffeeshottimer.data.storage.PhotoStorageManagerTest.kt</ID>
    <ID>NewLineAtEndOfFile:RecommendationCard.kt$com.jodli.coffeeshottimer.ui.components.RecommendationCard.kt</ID>
    <ID>NewLineAtEndOfFile:RecommendationExtensions.kt$com.jodli.coffeeshottimer.ui.util.RecommendationExtensions.kt</ID>
    <ID>NewLineAtEndOfFile:RecommendationFormatter.kt$com.jodli.coffeeshottimer.ui.util.RecommendationFormatter.kt</ID>
    <ID>NewLineAtEndOfFile:RecordShotScreen.kt$com.jodli.coffeeshottimer.ui.screens.RecordShotScreen.kt</ID>
    <ID>NewLineAtEndOfFile:RecordShotUseCase.kt$com.jodli.coffeeshottimer.domain.usecase.RecordShotUseCase.kt</ID>
    <ID>NewLineAtEndOfFile:RecordShotUseCaseTest.kt$com.jodli.coffeeshottimer.domain.usecase.RecordShotUseCaseTest.kt</ID>
    <ID>NewLineAtEndOfFile:RemovePhotoFromBeanUseCase.kt$com.jodli.coffeeshottimer.domain.usecase.RemovePhotoFromBeanUseCase.kt</ID>
    <ID>NewLineAtEndOfFile:RemovePhotoFromBeanUseCaseTest.kt$com.jodli.coffeeshottimer.domain.usecase.RemovePhotoFromBeanUseCaseTest.kt</ID>
    <ID>NewLineAtEndOfFile:RepositoryModule.kt$com.jodli.coffeeshottimer.di.RepositoryModule.kt</ID>
    <ID>NewLineAtEndOfFile:Shot.kt$com.jodli.coffeeshottimer.data.model.Shot.kt</ID>
    <ID>NewLineAtEndOfFile:ShotDaoTest.kt$com.jodli.coffeeshottimer.data.dao.ShotDaoTest.kt</ID>
    <ID>NewLineAtEndOfFile:ShotDetailsViewModel.kt$com.jodli.coffeeshottimer.ui.viewmodel.ShotDetailsViewModel.kt</ID>
    <ID>NewLineAtEndOfFile:ShotHistoryFilterDialog.kt$com.jodli.coffeeshottimer.ui.components.ShotHistoryFilterDialog.kt</ID>
    <ID>NewLineAtEndOfFile:ShotHistoryViewModel.kt$com.jodli.coffeeshottimer.ui.viewmodel.ShotHistoryViewModel.kt</ID>
    <ID>NewLineAtEndOfFile:ShotRecordingIntegrationTest.kt$com.jodli.coffeeshottimer.integration.ShotRecordingIntegrationTest.kt</ID>
    <ID>NewLineAtEndOfFile:ShotRecordingViewModelTest.kt$com.jodli.coffeeshottimer.ui.viewmodel.ShotRecordingViewModelTest.kt</ID>
    <ID>NewLineAtEndOfFile:ShotRepository.kt$com.jodli.coffeeshottimer.data.repository.ShotRepository.kt</ID>
    <ID>NewLineAtEndOfFile:ShotRepositoryTest.kt$com.jodli.coffeeshottimer.data.repository.ShotRepositoryTest.kt</ID>
    <ID>NewLineAtEndOfFile:ShotTest.kt$com.jodli.coffeeshottimer.data.model.ShotTest.kt</ID>
    <ID>NewLineAtEndOfFile:StandardizedComponentsTest.kt$com.jodli.coffeeshottimer.ui.components.StandardizedComponentsTest.kt</ID>
    <ID>NewLineAtEndOfFile:Theme.kt$com.jodli.coffeeshottimer.ui.theme.Theme.kt</ID>
    <ID>NewLineAtEndOfFile:TimerComponents.kt$com.jodli.coffeeshottimer.ui.components.TimerComponents.kt</ID>
    <ID>NewLineAtEndOfFile:TimerComponentsTest.kt$com.jodli.coffeeshottimer.ui.components.TimerComponentsTest.kt</ID>
    <ID>NewLineAtEndOfFile:TimerStatePreservationTest.kt$com.jodli.coffeeshottimer.ui.viewmodel.TimerStatePreservationTest.kt</ID>
    <ID>NewLineAtEndOfFile:Type.kt$com.jodli.coffeeshottimer.ui.theme.Type.kt</ID>
    <ID>NewLineAtEndOfFile:TypographyAndSpacingTest.kt$com.jodli.coffeeshottimer.ui.components.TypographyAndSpacingTest.kt</ID>
    <ID>NewLineAtEndOfFile:UpdateBeanUseCase.kt$com.jodli.coffeeshottimer.domain.usecase.UpdateBeanUseCase.kt</ID>
    <ID>NewLineAtEndOfFile:UpdateBeanUseCaseTest.kt$com.jodli.coffeeshottimer.domain.usecase.UpdateBeanUseCaseTest.kt</ID>
    <ID>NewLineAtEndOfFile:ValidationHelpersTest.kt$com.jodli.coffeeshottimer.ui.validation.ValidationHelpersTest.kt</ID>
    <ID>NewLineAtEndOfFile:ValidationResult.kt$com.jodli.coffeeshottimer.data.model.ValidationResult.kt</ID>
    <ID>NewLineAtEndOfFile:WeightSliderComponents.kt$com.jodli.coffeeshottimer.ui.components.WeightSliderComponents.kt</ID>
    <ID>NewLineAtEndOfFile:WeightSliderComponentsTest.kt$com.jodli.coffeeshottimer.ui.components.WeightSliderComponentsTest.kt</ID>
    <ID>NoWildcardImports:CalculateGrindAdjustmentUseCase.kt$import com.jodli.coffeeshottimer.domain.model.*</ID>
    <ID>NoWildcardImports:GrindAdjustmentCard.kt$import androidx.compose.animation.core.*</ID>
    <ID>NoWildcardImports:GrindAdjustmentCard.kt$import androidx.compose.foundation.layout.*</ID>
    <ID>NoWildcardImports:GrindAdjustmentCard.kt$import androidx.compose.material.icons.filled.*</ID>
    <ID>NoWildcardImports:GrindAdjustmentCard.kt$import androidx.compose.material3.*</ID>
    <ID>NoWildcardImports:GrindAdjustmentCard.kt$import androidx.compose.runtime.*</ID>
    <ID>NoWildcardImports:GrindAdjustmentCard.kt$import com.jodli.coffeeshottimer.domain.model.*</ID>
    <ID>NoWildcardImports:RecommendationCard.kt$import androidx.compose.foundation.layout.*</ID>
    <ID>NoWildcardImports:RecommendationCard.kt$import androidx.compose.material3.*</ID>
    <ID>NoWildcardImports:ShotRecordedDialog.kt$import androidx.compose.foundation.layout.*</ID>
    <ID>NoWildcardImports:ShotRecordedDialog.kt$import androidx.compose.material3.*</ID>
    <ID>NoWildcardImports:ShotRecordedDialog.kt$import androidx.compose.runtime.*</ID>
    <ID>NoWildcardImports:TasteFeedbackDisplay.kt$import androidx.compose.foundation.layout.*</ID>
    <ID>NoWildcardImports:TasteFeedbackDisplay.kt$import androidx.compose.material3.*</ID>
    <ID>NoWildcardImports:TasteFeedbackEditor.kt$import androidx.compose.foundation.layout.*</ID>
    <ID>NoWildcardImports:TasteFeedbackEditor.kt$import androidx.compose.material3.*</ID>
    <ID>NoWildcardImports:TasteFeedbackEditor.kt$import androidx.compose.runtime.*</ID>
    <ID>NoWildcardImports:TasteUtils.kt$import androidx.compose.foundation.layout.*</ID>
    <ID>NoWildcardImports:TasteUtils.kt$import androidx.compose.material3.*</ID>
    <ID>ParameterListWrapping:RecommendationCard.kt$(priority: RecommendationPriority)</ID>
    <ID>ParameterListWrapping:ShotRecordingViewModel.kt$ShotRecordingViewModel$(shotId: String, brewRatio: String, extractionTime: String, extractionTimeSeconds: Int, grinderSetting: String)</ID>
    <ID>ParameterListWrapping:ValidationExtensions.kt$(validationUtils: ValidationUtils, existingNames: List&lt;String&gt; = emptyList())</ID>
    <ID>PropertyWrapping:EquipmentSetupFlowViewModel.kt$EquipmentSetupFlowViewModel$val grinderConfig = GrinderConfiguration(scaleMin = grinderMin, scaleMax = grinderMax, stepSize = grinderStepSize)</ID>
    <ID>ReturnCount:AddPhotoToBeanUseCase.kt$AddPhotoToBeanUseCase$suspend fun execute(beanId: String, imageUri: Uri): Result&lt;String&gt;</ID>
    <ID>ReturnCount:BasketConfigRepository.kt$BasketConfigRepository$suspend fun saveConfig(config: BasketConfiguration): Result&lt;Unit&gt;</ID>
    <ID>ReturnCount:BasketConfigRepository.kt$BasketConfigRepository$suspend fun setActiveConfig(configId: String): Result&lt;Unit&gt;</ID>
    <ID>ReturnCount:BasketConfigRepository.kt$BasketConfigRepository$suspend fun updateConfig(config: BasketConfiguration): Result&lt;Unit&gt;</ID>
    <ID>ReturnCount:BasketConfigRepository.kt$BasketConfigRepository$suspend fun validateConfig(config: BasketConfiguration): ValidationResult</ID>
    <ID>ReturnCount:BeanRepository.kt$BeanRepository$suspend fun addBean(bean: Bean): Result&lt;Unit&gt;</ID>
    <ID>ReturnCount:BeanRepository.kt$BeanRepository$suspend fun addPhotoToBean(beanId: String, imageUri: Uri): Result&lt;String&gt;</ID>
    <ID>ReturnCount:BeanRepository.kt$BeanRepository$suspend fun getBeanPhoto(beanId: String): Result&lt;File?&gt;</ID>
    <ID>ReturnCount:BeanRepository.kt$BeanRepository$suspend fun removePhotoFromBean(beanId: String): Result&lt;Unit&gt;</ID>
    <ID>ReturnCount:BeanRepository.kt$BeanRepository$suspend fun setCurrentBean(beanId: String): Result&lt;Unit&gt;</ID>
    <ID>ReturnCount:BeanRepository.kt$BeanRepository$suspend fun updateBean(bean: Bean): Result&lt;Unit&gt;</ID>
    <ID>ReturnCount:BeanRepository.kt$BeanRepository$suspend fun updateBeanActiveStatus(beanId: String, isActive: Boolean): Result&lt;Unit&gt;</ID>
    <ID>ReturnCount:BeanRepository.kt$BeanRepository$suspend fun updateLastGrinderSetting(beanId: String, grinderSetting: String): Result&lt;Unit&gt;</ID>
    <ID>ReturnCount:BeanRepository.kt$BeanRepository$suspend fun validateBean(bean: Bean): ValidationResult</ID>
    <ID>ReturnCount:CalculateGrindAdjustmentUseCase.kt$CalculateGrindAdjustmentUseCase$suspend fun calculateAdjustment( currentGrindSetting: String, extractionTimeSeconds: Int, tasteFeedback: TastePrimary? ): Result&lt;GrindAdjustmentRecommendation&gt;</ID>
    <ID>ReturnCount:EquipmentSetupFlowViewModel.kt$EquipmentSetupFlowViewModel$fun navigateForward()</ID>
    <ID>ReturnCount:EquipmentSetupSummaryScreen.kt$@Composable private fun determineBasketType(coffeeInMin: String, coffeeInMax: String): String</ID>
    <ID>ReturnCount:EquipmentSetupSummaryScreen.kt$private fun calculateGrinderSteps(grinderMin: String, grinderMax: String, stepSize: String): Int</ID>
    <ID>ReturnCount:GetBeanPhotoUseCase.kt$GetBeanPhotoUseCase$suspend fun execute(photoPath: String): Result&lt;File&gt;</ID>
    <ID>ReturnCount:GetShotDetailsUseCase.kt$GetShotDetailsUseCase$suspend fun compareShotsDetails(shotId1: String, shotId2: String): Result&lt;ShotComparison&gt;</ID>
    <ID>ReturnCount:GetShotDetailsUseCase.kt$GetShotDetailsUseCase$suspend fun getLastShotForBean(beanId: String): Result&lt;ShotDetails?&gt;</ID>
    <ID>ReturnCount:GetShotDetailsUseCase.kt$GetShotDetailsUseCase$suspend fun getShotDetails(shotId: String): Result&lt;ShotDetails&gt;</ID>
    <ID>ReturnCount:GrinderConfigRepository.kt$GrinderConfigRepository$suspend fun saveConfig(config: GrinderConfiguration): Result&lt;Unit&gt;</ID>
    <ID>ReturnCount:GrinderConfigRepository.kt$GrinderConfigRepository$suspend fun updateConfig(config: GrinderConfiguration): Result&lt;Unit&gt;</ID>
    <ID>ReturnCount:GrinderConfigRepository.kt$GrinderConfigRepository$suspend fun validateConfig(config: GrinderConfiguration): ValidationResult</ID>
    <ID>ReturnCount:ManageGrindRecommendationUseCase.kt$ManageGrindRecommendationUseCase$suspend fun saveRecommendation( beanId: String, recommendation: GrindAdjustmentRecommendation, lastShot: Shot ): Result&lt;PersistentGrindRecommendation&gt;</ID>
    <ID>ReturnCount:ManageGrindRecommendationUseCase.kt$ManageGrindRecommendationUseCase$suspend fun updateRecommendationWithTaste( beanId: String, updatedRecommendation: GrindAdjustmentRecommendation, updatedShot: Shot ): Result&lt;PersistentGrindRecommendation&gt;</ID>
    <ID>ReturnCount:RemovePhotoFromBeanUseCase.kt$RemovePhotoFromBeanUseCase$suspend fun execute(beanId: String): Result&lt;Unit&gt;</ID>
    <ID>ReturnCount:ShotRecordingViewModel.kt$ShotRecordingViewModel$private fun checkIfRecommendationFollowed( currentGrinderSetting: String, recommendation: PersistentGrindRecommendation? ): Boolean</ID>
    <ID>ReturnCount:ShotRepository.kt$ShotRepository$suspend fun recordShot(shot: Shot): Result&lt;Unit&gt;</ID>
    <ID>ReturnCount:ShotRepository.kt$ShotRepository$suspend fun updateShot(shot: Shot): Result&lt;Unit&gt;</ID>
    <ID>ReturnCount:ShotRepository.kt$ShotRepository$suspend fun updateTasteFeedback( shotId: String, tastePrimary: TastePrimary?, tasteSecondary: TasteSecondary? = null ): Result&lt;Unit&gt;</ID>
    <ID>ReturnCount:ShotRepository.kt$ShotRepository$suspend fun validateShot(shot: Shot): ValidationResult</ID>
    <ID>ReturnCount:UpdateBeanUseCase.kt$UpdateBeanUseCase$suspend fun execute( beanId: String, name: String, roastDate: LocalDate, notes: String = "", isActive: Boolean = true, lastGrinderSetting: String? = null ): Result&lt;Bean&gt;</ID>
    <ID>ReturnCount:UpdateBeanUseCase.kt$UpdateBeanUseCase$suspend fun updateGrinderSetting( beanId: String, grinderSetting: String ): Result&lt;Unit&gt;</ID>
    <ID>ReturnCount:UpdateBeanUseCase.kt$UpdateBeanUseCase$suspend fun validateUpdateParameters( beanId: String, name: String, roastDate: LocalDate, notes: String = "" ): ValidationResult</ID>
    <ID>SpacingAroundKeyword:TasteFeedbackEditor.kt$when</ID>
    <ID>SpacingAroundParens:ShotDetailsScreen.kt$(</ID>
    <ID>SpacingBetweenDeclarationsWithComments:ShotRecordingViewModel.kt$ShotRecordingViewModel$/** * Hide the shot recorded dialog. */</ID>
    <ID>SpreadOperator:DatabaseModule.kt$DatabaseModule$(*AppDatabase.getAllMigrations())</ID>
    <ID>StringTemplate:GuidedBeanCreationScreen.kt$${daysSinceRoast}</ID>
    <ID>StringTemplate:TimerComponents.kt$${totalSeconds}</ID>
    <ID>SwallowedException:AddEditBeanScreen.kt$e: Exception</ID>
    <ID>SwallowedException:AddEditBeanViewModel.kt$AddEditBeanViewModel$e: Exception</ID>
    <ID>SwallowedException:BasketConfigRepository.kt$BasketConfigRepository$exception: Exception</ID>
    <ID>SwallowedException:BasketSettingsViewModel.kt$BasketSettingsViewModel$exception: Exception</ID>
    <ID>SwallowedException:BeanRepository.kt$BeanRepository$exception: Exception</ID>
    <ID>SwallowedException:Converters.kt$Converters$e: IllegalArgumentException</ID>
    <ID>SwallowedException:EquipmentSetupFlowViewModel.kt$EquipmentSetupFlowViewModel$e: Exception</ID>
    <ID>SwallowedException:EquipmentSetupFlowViewModel.kt$EquipmentSetupFlowViewModel$exception: Exception</ID>
    <ID>SwallowedException:FormStateManager.kt$FormStateManager$e: Exception</ID>
    <ID>SwallowedException:GetShotStatisticsUseCase.kt$GetShotStatisticsUseCase$exception: Exception</ID>
    <ID>SwallowedException:GrindRecommendationPreferences.kt$GrindRecommendationPreferences$e: Exception</ID>
    <ID>SwallowedException:GrinderConfigRepository.kt$GrinderConfigRepository$exception: Exception</ID>
    <ID>SwallowedException:GuidedBeanCreationViewModel.kt$GuidedBeanCreationViewModel$e: Exception</ID>
    <ID>SwallowedException:MainActivityViewModel.kt$MainActivityViewModel$exception: Exception</ID>
    <ID>SwallowedException:OnboardingPreferences.kt$OnboardingPreferences$e: Exception</ID>
    <ID>SwallowedException:PhotoCaptureManagerImpl.kt$PhotoCaptureManagerImpl$e: Exception</ID>
    <ID>SwallowedException:PhotoStorageManagerImpl.kt$PhotoStorageManagerImpl$e: Exception</ID>
    <ID>SwallowedException:ShotRecordingViewModel.kt$ShotRecordingViewModel$exception: Exception</ID>
    <ID>SwallowedException:ShotRepository.kt$ShotRepository$exception: Exception</ID>
    <ID>SwallowedException:WeightSliderComponents.kt$e: Exception</ID>
    <ID>TooGenericExceptionCaught:AddBeanUseCase.kt$AddBeanUseCase$exception: Exception</ID>
    <ID>TooGenericExceptionCaught:AddEditBeanScreen.kt$e: Exception</ID>
    <ID>TooGenericExceptionCaught:AddEditBeanViewModel.kt$AddEditBeanViewModel$e: Exception</ID>
    <ID>TooGenericExceptionCaught:AddPhotoToBeanUseCase.kt$AddPhotoToBeanUseCase$exception: Exception</ID>
    <ID>TooGenericExceptionCaught:AppDatabase.kt$AppDatabase.Companion.&lt;no name provided&gt;$e: Exception</ID>
    <ID>TooGenericExceptionCaught:BasketConfigRepository.kt$BasketConfigRepository$e: Exception</ID>
    <ID>TooGenericExceptionCaught:BasketConfigRepository.kt$BasketConfigRepository$exception: Exception</ID>
    <ID>TooGenericExceptionCaught:BasketSettingsViewModel.kt$BasketSettingsViewModel$exception: Exception</ID>
    <ID>TooGenericExceptionCaught:BeanRepository.kt$BeanRepository$exception: Exception</ID>
    <ID>TooGenericExceptionCaught:CalculateGrindAdjustmentUseCase.kt$CalculateGrindAdjustmentUseCase$exception: Exception</ID>
    <ID>TooGenericExceptionCaught:CheckPhotoCapabilityUseCase.kt$CheckPhotoCapabilityUseCase$exception: Exception</ID>
    <ID>TooGenericExceptionCaught:DatabasePopulator.kt$DatabasePopulator$e: Exception</ID>
    <ID>TooGenericExceptionCaught:DebugViewModel.kt$DebugViewModel$e: Exception</ID>
    <ID>TooGenericExceptionCaught:EquipmentSettingsViewModel.kt$EquipmentSettingsViewModel$exception: Exception</ID>
    <ID>TooGenericExceptionCaught:EquipmentSetupFlowViewModel.kt$EquipmentSetupFlowViewModel$e: Exception</ID>
    <ID>TooGenericExceptionCaught:EquipmentSetupFlowViewModel.kt$EquipmentSetupFlowViewModel$exception: Exception</ID>
    <ID>TooGenericExceptionCaught:FormStateManager.kt$FormStateManager$e: Exception</ID>
    <ID>TooGenericExceptionCaught:GetActiveBeansUseCase.kt$GetActiveBeansUseCase$exception: Exception</ID>
    <ID>TooGenericExceptionCaught:GetBeanHistoryUseCase.kt$GetBeanHistoryUseCase$exception: Exception</ID>
    <ID>TooGenericExceptionCaught:GetBeanPhotoUseCase.kt$GetBeanPhotoUseCase$exception: Exception</ID>
    <ID>TooGenericExceptionCaught:GetShotDetailsUseCase.kt$GetShotDetailsUseCase$exception: Exception</ID>
    <ID>TooGenericExceptionCaught:GetShotStatisticsUseCase.kt$GetShotStatisticsUseCase$exception: Exception</ID>
    <ID>TooGenericExceptionCaught:GrindRecommendationPreferences.kt$GrindRecommendationPreferences$e: Exception</ID>
    <ID>TooGenericExceptionCaught:GrinderConfigRepository.kt$GrinderConfigRepository$e: Exception</ID>
    <ID>TooGenericExceptionCaught:GrinderConfigRepository.kt$GrinderConfigRepository$exception: Exception</ID>
    <ID>TooGenericExceptionCaught:GuidedBeanCreationViewModel.kt$GuidedBeanCreationViewModel$e: Exception</ID>
    <ID>TooGenericExceptionCaught:MainActivityViewModel.kt$MainActivityViewModel$exception: Exception</ID>
    <ID>TooGenericExceptionCaught:ManageGrindRecommendationUseCase.kt$ManageGrindRecommendationUseCase$exception: Exception</ID>
    <ID>TooGenericExceptionCaught:MemoryOptimizer.kt$MemoryOptimizer$e: Exception</ID>
    <ID>TooGenericExceptionCaught:OnboardingPreferences.kt$OnboardingPreferences$e: Exception</ID>
    <ID>TooGenericExceptionCaught:PhotoCaptureManagerImpl.kt$PhotoCaptureManagerImpl$e: Exception</ID>
    <ID>TooGenericExceptionCaught:PhotoStorageManagerImpl.kt$PhotoStorageManagerImpl$e: Exception</ID>
    <ID>TooGenericExceptionCaught:RecordShotUseCase.kt$RecordShotUseCase$exception: Exception</ID>
    <ID>TooGenericExceptionCaught:RemovePhotoFromBeanUseCase.kt$RemovePhotoFromBeanUseCase$exception: Exception</ID>
    <ID>TooGenericExceptionCaught:ShotHistoryViewModel.kt$ShotHistoryViewModel$exception: Exception</ID>
    <ID>TooGenericExceptionCaught:ShotRecordingViewModel.kt$ShotRecordingViewModel$exception: Exception</ID>
    <ID>TooGenericExceptionCaught:ShotRepository.kt$ShotRepository$exception: Exception</ID>
    <ID>TooGenericExceptionCaught:UpdateBeanUseCase.kt$UpdateBeanUseCase$exception: Exception</ID>
    <ID>TooGenericExceptionCaught:WeightSliderComponents.kt$e: Exception</ID>
    <ID>TooGenericExceptionThrown:AppDatabase.kt$AppDatabase.Companion.&lt;no name provided&gt;$throw RuntimeException("Migration 1-&gt;2 failed: ${e.message}", e)</ID>
    <ID>TooGenericExceptionThrown:AppDatabase.kt$AppDatabase.Companion.&lt;no name provided&gt;$throw RuntimeException("Migration 2-&gt;3 failed: ${e.message}", e)</ID>
    <ID>TooGenericExceptionThrown:AppDatabase.kt$AppDatabase.Companion.&lt;no name provided&gt;$throw RuntimeException("Migration 3-&gt;4 failed: ${e.message}. This migration adds basket_configuration table and ensures all existing indices are properly aligned.", e)</ID>
    <ID>TooGenericExceptionThrown:AppDatabase.kt$AppDatabase.Companion.&lt;no name provided&gt;$throw RuntimeException("Migration 4-&gt;5 failed: ${e.message}. This migration fixes date format consistency in basket_configuration table.", e)</ID>
    <ID>TooGenericExceptionThrown:AppDatabase.kt$AppDatabase.Companion.&lt;no name provided&gt;$throw RuntimeException("Migration 5-&gt;6 failed: ${e.message}. This migration adds stepSize column to grinder_configuration table and ensures all indices are properly aligned.", e)</ID>
    <ID>TooGenericExceptionThrown:AppDatabase.kt$AppDatabase.Companion.&lt;no name provided&gt;$throw RuntimeException("Migration 6-&gt;7 failed: ${e.message}. This migration adds taste feedback fields to shots table.", e)</ID>
    <ID>TooGenericExceptionThrown:AppDatabase.kt$AppDatabase.Companion.&lt;no name provided&gt;$throw RuntimeException("Migration 7-&gt;8 failed: ${e.message}. This migration fixes index issues.", e)</ID>
    <ID>TooGenericExceptionThrown:DatabasePopulator.kt$DatabasePopulator$throw Exception("Failed to add more shots: ${e.message}", e)</ID>
    <ID>TooGenericExceptionThrown:DatabasePopulator.kt$DatabasePopulator$throw Exception("Failed to clear database: ${e.message}", e)</ID>
    <ID>TooGenericExceptionThrown:DatabasePopulator.kt$DatabasePopulator$throw Exception("Failed to populate database: ${e.message}", e)</ID>
    <ID>TooGenericExceptionThrown:IntroductionScreenTest.kt$IntroductionScreenTest$throw RuntimeException("Test error")</ID>
    <ID>TooManyFunctions:AddEditBeanViewModel.kt$AddEditBeanViewModel : ViewModel</ID>
    <ID>TooManyFunctions:BeanRepository.kt$BeanRepository</ID>
    <ID>TooManyFunctions:ShotDao.kt$ShotDao</ID>
    <ID>TooManyFunctions:ShotHistoryScreen.kt$com.jodli.coffeeshottimer.ui.screens.ShotHistoryScreen.kt</ID>
    <ID>TooManyFunctions:ShotHistoryViewModel.kt$ShotHistoryViewModel : ViewModel</ID>
    <ID>TooManyFunctions:ShotRecordingViewModel.kt$ShotRecordingViewModel : ViewModel</ID>
    <ID>TooManyFunctions:ShotRepository.kt$ShotRepository</ID>
    <ID>TooManyFunctions:ValidationStringProvider.kt$ValidationStringProvider</ID>
    <ID>UnusedImports:AboutScreen.kt$import androidx.compose.foundation.layout.statusBarsPadding</ID>
    <ID>UnusedImports:AboutScreen.kt$import androidx.compose.ui.unit.dp</ID>
    <ID>UnusedImports:AddEditBeanScreen.kt$import androidx.compose.foundation.layout.size</ID>
    <ID>UnusedImports:AddEditBeanScreen.kt$import androidx.compose.foundation.layout.statusBarsPadding</ID>
    <ID>UnusedImports:AddEditBeanScreen.kt$import androidx.compose.material.icons.filled.Engineering</ID>
    <ID>UnusedImports:AddEditBeanScreen.kt$import androidx.compose.material.icons.filled.Error</ID>
    <ID>UnusedImports:AddEditBeanScreen.kt$import androidx.compose.material.icons.filled.Info</ID>
    <ID>UnusedImports:AddEditBeanScreen.kt$import androidx.compose.material3.Card</ID>
    <ID>UnusedImports:AddEditBeanScreen.kt$import androidx.compose.material3.CardDefaults</ID>
    <ID>UnusedImports:AddEditBeanScreen.kt$import androidx.compose.ui.unit.dp</ID>
    <ID>UnusedImports:AppNavigation.kt$import androidx.compose.foundation.layout.Box</ID>
    <ID>UnusedImports:AppNavigation.kt$import androidx.compose.foundation.layout.fillMaxSize</ID>
    <ID>UnusedImports:AppNavigation.kt$import androidx.compose.material3.MaterialTheme</ID>
    <ID>UnusedImports:AppNavigation.kt$import androidx.compose.material3.Text</ID>
    <ID>UnusedImports:AppNavigation.kt$import androidx.compose.ui.Alignment</ID>
    <ID>UnusedImports:BasketSetup.kt$import androidx.compose.foundation.layout.Column</ID>
    <ID>UnusedImports:BasketSetup.kt$import androidx.compose.ui.unit.dp</ID>
    <ID>UnusedImports:BeanComponents.kt$import androidx.compose.material.icons.filled.Home</ID>
    <ID>UnusedImports:BeanComponents.kt$import androidx.compose.ui.unit.dp</ID>
    <ID>UnusedImports:BeanManagementScreen.kt$import androidx.compose.foundation.layout.statusBarsPadding</ID>
    <ID>UnusedImports:BeanManagementScreen.kt$import androidx.compose.material3.ExperimentalMaterial3Api</ID>
    <ID>UnusedImports:BeanManagementScreen.kt$import androidx.compose.ui.text.font.FontWeight</ID>
    <ID>UnusedImports:BeanManagementViewModel.kt$import com.jodli.coffeeshottimer.R</ID>
    <ID>UnusedImports:BeanManagementViewModel.kt$import com.jodli.coffeeshottimer.domain.exception.DomainException</ID>
    <ID>UnusedImports:BeanRepositoryTest.kt$import io.mockk.every</ID>
    <ID>UnusedImports:CommonComponents.kt$import androidx.compose.ui.unit.dp</ID>
    <ID>UnusedImports:ComponentTypographyUsageTest.kt$import androidx.compose.material3.MaterialTheme</ID>
    <ID>UnusedImports:ComponentTypographyUsageTest.kt$import androidx.compose.ui.text.font.FontWeight</ID>
    <ID>UnusedImports:DatabasePopulatorTest.kt$import com.jodli.coffeeshottimer.data.model.GrinderConfiguration</ID>
    <ID>UnusedImports:DatabasePopulatorTest.kt$import java.time.LocalDateTime</ID>
    <ID>UnusedImports:DatabasePopulatorTest.kt$import org.junit.Assert.assertThrows</ID>
    <ID>UnusedImports:DebugDialog.kt$import androidx.compose.material.icons.filled.Add</ID>
    <ID>UnusedImports:DebugDialog.kt$import androidx.compose.material.icons.filled.Person</ID>
    <ID>UnusedImports:DebugDialog.kt$import androidx.compose.ui.graphics.Color</ID>
    <ID>UnusedImports:DebugDialog.kt$import androidx.compose.ui.unit.dp</ID>
    <ID>UnusedImports:EquipmentSetupFlowScreen.kt$import androidx.compose.foundation.layout.size</ID>
    <ID>UnusedImports:EquipmentSetupFlowScreen.kt$import androidx.compose.foundation.layout.width</ID>
    <ID>UnusedImports:EquipmentSetupFlowScreen.kt$import androidx.compose.ui.text.font.FontWeight</ID>
    <ID>UnusedImports:EquipmentSetupFlowScreen.kt$import androidx.compose.ui.text.style.TextAlign</ID>
    <ID>UnusedImports:EquipmentSetupFlowScreen.kt$import androidx.compose.ui.unit.dp</ID>
    <ID>UnusedImports:EquipmentSetupFlowScreen.kt$import com.jodli.coffeeshottimer.ui.components.LandscapeContainer</ID>
    <ID>UnusedImports:GrinderScaleSetup.kt$import androidx.compose.foundation.layout.padding</ID>
    <ID>UnusedImports:GrinderScaleSetup.kt$import androidx.compose.material3.Icon</ID>
    <ID>UnusedImports:GrinderScaleSetup.kt$import androidx.compose.ui.unit.dp</ID>
    <ID>UnusedImports:GrinderSettingsScreen.kt$import androidx.compose.foundation.layout.Row</ID>
    <ID>UnusedImports:GrinderSettingsScreen.kt$import androidx.compose.foundation.layout.Spacer</ID>
    <ID>UnusedImports:GrinderSettingsScreen.kt$import androidx.compose.foundation.layout.height</ID>
    <ID>UnusedImports:GrinderSettingsScreen.kt$import androidx.compose.foundation.layout.statusBarsPadding</ID>
    <ID>UnusedImports:GrinderSettingsScreen.kt$import androidx.compose.foundation.text.KeyboardOptions</ID>
    <ID>UnusedImports:GrinderSettingsScreen.kt$import androidx.compose.ui.text.input.KeyboardType</ID>
    <ID>UnusedImports:GrinderSettingsScreen.kt$import androidx.compose.ui.unit.dp</ID>
    <ID>UnusedImports:GrinderSettingsScreen.kt$import com.jodli.coffeeshottimer.ui.components.CoffeeCard</ID>
    <ID>UnusedImports:GrinderSettingsScreen.kt$import com.jodli.coffeeshottimer.ui.components.CoffeeTextField</ID>
    <ID>UnusedImports:GrinderSettingsScreen.kt$import com.jodli.coffeeshottimer.ui.components.GentleValidationMessage</ID>
    <ID>UnusedImports:GrinderSetupStepScreen.kt$import androidx.compose.ui.text.style.TextAlign</ID>
    <ID>UnusedImports:GuidedBeanCreationScreen.kt$import androidx.compose.foundation.layout.width</ID>
    <ID>UnusedImports:GuidedBeanCreationScreenTest.kt$import androidx.compose.ui.test.assertTextContains</ID>
    <ID>UnusedImports:GuidedBeanCreationScreenTest.kt$import com.jodli.coffeeshottimer.R</ID>
    <ID>UnusedImports:IntroductionScreen.kt$import androidx.compose.foundation.layout.wrapContentWidth</ID>
    <ID>UnusedImports:LandscapeComponents.kt$import androidx.compose.foundation.layout.width</ID>
    <ID>UnusedImports:LandscapeComponents.kt$import androidx.compose.ui.unit.dp</ID>
    <ID>UnusedImports:MainActivity.kt$import androidx.compose.runtime.LaunchedEffect</ID>
    <ID>UnusedImports:MainActivity.kt$import com.jodli.coffeeshottimer.ui.components.AdaptiveNavigation</ID>
    <ID>UnusedImports:MainActivityViewModelTest.kt$import com.jodli.coffeeshottimer.data.onboarding.OnboardingStep</ID>
    <ID>UnusedImports:ManageGrindRecommendationUseCase.kt$import com.jodli.coffeeshottimer.data.model.Bean</ID>
    <ID>UnusedImports:ManageGrindRecommendationUseCaseTest.kt$import io.mockk.every</ID>
    <ID>UnusedImports:MoreScreen.kt$import androidx.compose.foundation.layout.statusBarsPadding</ID>
    <ID>UnusedImports:MoreScreen.kt$import androidx.compose.material.icons.filled.Public</ID>
    <ID>UnusedImports:MoreScreen.kt$import androidx.compose.ui.text.font.FontWeight</ID>
    <ID>UnusedImports:NextShotGuidanceCard.kt$import androidx.compose.material.icons.filled.KeyboardArrowDown</ID>
    <ID>UnusedImports:NextShotGuidanceCard.kt$import androidx.compose.material.icons.filled.KeyboardArrowUp</ID>
    <ID>UnusedImports:NextShotGuidanceCard.kt$import androidx.compose.ui.graphics.vector.ImageVector</ID>
    <ID>UnusedImports:NextShotGuidanceCard.kt$import androidx.compose.ui.text.style.TextAlign</ID>
    <ID>UnusedImports:PhotoCaptureManagerTest.kt$import android.os.Build</ID>
    <ID>UnusedImports:PhotoCaptureManagerTest.kt$import org.robolectric.annotation.Config</ID>
    <ID>UnusedImports:PhotoComponents.kt$import androidx.compose.foundation.layout.width</ID>
    <ID>UnusedImports:PhotoComponents.kt$import androidx.compose.ui.draw.clip</ID>
    <ID>UnusedImports:PhotoStorageManagerTest.kt$import android.graphics.BitmapFactory</ID>
    <ID>UnusedImports:PhotoStorageManagerTest.kt$import java.io.FileInputStream</ID>
    <ID>UnusedImports:RecommendationCard.kt$import androidx.compose.ui.text.font.FontWeight</ID>
    <ID>UnusedImports:RecordShotScreen.kt$import androidx.compose.foundation.layout.size</ID>
    <ID>UnusedImports:RecordShotScreen.kt$import androidx.compose.foundation.layout.statusBarsPadding</ID>
    <ID>UnusedImports:RecordShotScreen.kt$import androidx.compose.material.icons.filled.Home</ID>
    <ID>UnusedImports:RecordShotScreen.kt$import androidx.compose.material3.Card</ID>
    <ID>UnusedImports:RecordShotScreen.kt$import androidx.compose.ui.unit.dp</ID>
    <ID>UnusedImports:RecordShotScreen.kt$import com.jodli.coffeeshottimer.BuildConfig</ID>
    <ID>UnusedImports:RecordShotScreen.kt$import com.jodli.coffeeshottimer.ui.components.NextShotGuidanceCard</ID>
    <ID>UnusedImports:RecordShotScreen.kt$import com.jodli.coffeeshottimer.ui.components.SectionHeader</ID>
    <ID>UnusedImports:RecordShotScreen.kt$import com.jodli.coffeeshottimer.ui.theme.landscapeTimerSize</ID>
    <ID>UnusedImports:ShotDetailsScreen.kt$import androidx.compose.foundation.layout.statusBarsPadding</ID>
    <ID>UnusedImports:ShotDetailsScreen.kt$import androidx.compose.foundation.layout.widthIn</ID>
    <ID>UnusedImports:ShotDetailsScreen.kt$import androidx.compose.material3.HorizontalDivider</ID>
    <ID>UnusedImports:ShotDetailsScreen.kt$import com.jodli.coffeeshottimer.domain.model.AdjustmentDirection</ID>
    <ID>UnusedImports:ShotDetailsScreen.kt$import com.jodli.coffeeshottimer.domain.model.ConfidenceLevel</ID>
    <ID>UnusedImports:ShotDetailsScreen.kt$import com.jodli.coffeeshottimer.domain.model.GrindAdjustmentRecommendation</ID>
    <ID>UnusedImports:ShotDetailsScreen.kt$import com.jodli.coffeeshottimer.domain.model.TastePrimary</ID>
    <ID>UnusedImports:ShotDetailsScreen.kt$import com.jodli.coffeeshottimer.domain.usecase.RecommendationPriority</ID>
    <ID>UnusedImports:ShotDetailsScreen.kt$import com.jodli.coffeeshottimer.domain.usecase.ShotRecommendation</ID>
    <ID>UnusedImports:ShotDetailsScreen.kt$import com.jodli.coffeeshottimer.ui.util.formatForDisplay</ID>
    <ID>UnusedImports:ShotHistoryScreen.kt$import androidx.compose.foundation.layout.statusBarsPadding</ID>
    <ID>UnusedImports:ShotHistoryScreen.kt$import androidx.compose.foundation.layout.widthIn</ID>
    <ID>UnusedImports:ShotHistoryScreen.kt$import androidx.compose.material.icons.filled.Home</ID>
    <ID>UnusedImports:ShotHistoryScreen.kt$import androidx.compose.material3.ExperimentalMaterial3Api</ID>
    <ID>UnusedImports:ShotHistoryScreen.kt$import androidx.compose.ui.platform.LocalDensity</ID>
    <ID>UnusedImports:ShotHistoryScreen.kt$import androidx.compose.ui.unit.dp</ID>
    <ID>UnusedImports:ShotHistoryScreen.kt$import com.jodli.coffeeshottimer.ui.components.CoffeePrimaryButton</ID>
    <ID>UnusedImports:ShotHistoryScreen.kt$import com.jodli.coffeeshottimer.ui.components.SectionHeader</ID>
    <ID>UnusedImports:ShotRepositoryTasteTest.kt$import java.time.LocalDateTime</ID>
    <ID>UnusedImports:ShotRepositoryTest.kt$import android.content.SharedPreferences</ID>
    <ID>UnusedImports:StandardizedComponentsTest.kt$import androidx.compose.foundation.shape.RoundedCornerShape</ID>
    <ID>UnusedImports:StandardizedComponentsTest.kt$import androidx.compose.material.icons.Icons</ID>
    <ID>UnusedImports:StandardizedComponentsTest.kt$import androidx.compose.material.icons.filled.Add</ID>
    <ID>UnusedImports:StandardizedComponentsTest.kt$import androidx.compose.material.icons.filled.Coffee</ID>
    <ID>UnusedImports:StandardizedComponentsTest.kt$import androidx.compose.material3.CardDefaults</ID>
    <ID>UnusedImports:StepSizeSelector.kt$import androidx.compose.foundation.layout.padding</ID>
    <ID>UnusedImports:StepSizeSelector.kt$import androidx.compose.foundation.layout.width</ID>
    <ID>UnusedImports:StepSizeSelector.kt$import androidx.compose.ui.unit.dp</ID>
    <ID>UnusedImports:TasteFeedbackDisplay.kt$import androidx.compose.foundation.background</ID>
    <ID>UnusedImports:TasteFeedbackDisplay.kt$import androidx.compose.foundation.clickable</ID>
    <ID>UnusedImports:TasteFeedbackDisplay.kt$import androidx.compose.ui.graphics.Color</ID>
    <ID>UnusedImports:TasteFeedbackDisplay.kt$import androidx.compose.ui.text.style.TextAlign</ID>
    <ID>UnusedImports:TasteFeedbackEditor.kt$import androidx.compose.foundation.BorderStroke</ID>
    <ID>UnusedImports:TasteFeedbackEditor.kt$import androidx.compose.ui.unit.dp</ID>
    <ID>UnusedImports:TasteFeedbackEditor.kt$import androidx.compose.ui.unit.sp</ID>
    <ID>UnusedImports:TasteQuickPick.kt$import androidx.compose.foundation.layout.Arrangement</ID>
    <ID>UnusedImports:Theme.kt$import androidx.compose.runtime.remember</ID>
    <ID>UnusedImports:TimerComponents.kt$import androidx.compose.ui.unit.sp</ID>
    <ID>UnusedImports:TypographyAndSpacingTest.kt$import com.jodli.coffeeshottimer.ui.theme.LocalSpacing</ID>
    <ID>UnusedImports:UIModule.kt$import com.jodli.coffeeshottimer.ui.util.DomainErrorTranslator</ID>
    <ID>UnusedImports:ValidationComponents.kt$import androidx.compose.ui.unit.sp</ID>
    <ID>UnusedImports:ValidationHelpersTest.kt$import com.jodli.coffeeshottimer.R</ID>
    <ID>UnusedImports:WeightSliderComponents.kt$import androidx.compose.foundation.layout.fillMaxHeight</ID>
    <ID>UnusedImports:WeightSliderComponents.kt$import androidx.compose.foundation.layout.width</ID>
    <ID>UnusedImports:WeightSliderComponents.kt$import androidx.compose.ui.unit.sp</ID>
    <ID>UnusedParameter:AddEditBeanScreen.kt$onboardingTitle: String? = null</ID>
    <ID>UnusedParameter:AddEditBeanViewModel.kt$AddEditBeanViewModel$context: Context</ID>
    <ID>UnusedParameter:AddEditBeanViewModel.kt$AddEditBeanViewModel$setting: String</ID>
    <ID>UnusedParameter:CalculateGrindAdjustmentUseCase.kt$CalculateGrindAdjustmentUseCase$extractionTimeSeconds: Int</ID>
    <ID>UnusedParameter:EquipmentSetupFlowScreen.kt$onSkip: () -&gt; Unit</ID>
    <ID>UnusedParameter:GuidedBeanCreationScreen.kt$availableWidth: androidx.compose.ui.unit.Dp</ID>
    <ID>UnusedParameter:IntroductionScreen.kt$onPrevious: () -&gt; Unit</ID>
    <ID>UnusedParameter:RecordShotScreen.kt$bringIntoViewRequester: BringIntoViewRequester</ID>
    <ID>UnusedParameter:RecordShotScreen.kt$coffeeWeightInError: String?</ID>
    <ID>UnusedParameter:RecordShotScreen.kt$coffeeWeightOutError: String?</ID>
    <ID>UnusedParameter:RecordShotScreen.kt$coroutineScope: kotlinx.coroutines.CoroutineScope</ID>
    <ID>UnusedParameter:RecordShotScreen.kt$notes: String</ID>
    <ID>UnusedParameter:RecordShotScreen.kt$onNotesChange: (String) -&gt; Unit</ID>
    <ID>UnusedParameter:RecordShotScreen.kt$showBeanSelector: Boolean</ID>
    <ID>UnusedParameter:RecordShotScreen.kt$showTimerValidation: Boolean</ID>
    <ID>UnusedParameter:TasteUtils.kt$taste: TastePrimary</ID>
    <ID>UnusedParameter:TasteUtils.kt$taste: TasteSecondary</ID>
    <ID>UnusedParameter:TimerComponents.kt$isValidForSave: Boolean</ID>
    <ID>UnusedParameter:TimerComponents.kt$showValidationState: Boolean</ID>
    <ID>UnusedParameter:WeightSliderComponents.kt$coffeeWeightInError: String? = null</ID>
    <ID>UnusedParameter:WeightSliderComponents.kt$coffeeWeightOutError: String? = null</ID>
    <ID>UnusedPrivateMember:EnhancedValidationIntegration.kt$EnhancedShotRecordingViewModel$private fun validateFormAndUpdateBrewRatio()</ID>
    <ID>UnusedPrivateMember:GrindAdjustmentCard.kt$@Preview(name = "Coarser Adjustment", showBackground = true) @Composable private fun GrindAdjustmentCardCoarserPreview()</ID>
    <ID>UnusedPrivateMember:GrindAdjustmentCard.kt$@Preview(name = "Compact Mode", showBackground = true) @Composable private fun GrindAdjustmentCardCompactPreview()</ID>
    <ID>UnusedPrivateMember:GrindAdjustmentCard.kt$@Preview(name = "Finer Adjustment", showBackground = true) @Composable private fun GrindAdjustmentCardFinerPreview()</ID>
    <ID>UnusedPrivateMember:GrindAdjustmentCard.kt$@Preview(name = "No Change", showBackground = true) @Composable private fun GrindAdjustmentCardNoChangePreview()</ID>
    <ID>UnusedPrivateMember:NextShotGuidanceCard.kt$@Preview(name = "Animated Card Visible", showBackground = true) @Composable private fun AnimatedNextShotGuidanceCardPreview()</ID>
    <ID>UnusedPrivateMember:NextShotGuidanceCard.kt$@Preview(name = "High Confidence Taste-Based", showBackground = true) @Composable private fun NextShotGuidanceCardTasteBasedPreview()</ID>
    <ID>UnusedPrivateMember:NextShotGuidanceCard.kt$@Preview(name = "Low Confidence No Change", showBackground = true) @Composable private fun NextShotGuidanceCardNoChangePreview()</ID>
    <ID>UnusedPrivateMember:NextShotGuidanceCard.kt$@Preview(name = "Medium Confidence Timing-Based", showBackground = true) @Composable private fun NextShotGuidanceCardTimingBasedPreview()</ID>
    <ID>UnusedPrivateMember:RecordShotScreen.kt$@OptIn(ExperimentalFoundationApi::class) @Composable private fun NotesSection( notes: String, onNotesChange: (String) -&gt; Unit, bringIntoViewRequester: BringIntoViewRequester, coroutineScope: kotlinx.coroutines.CoroutineScope, modifier: Modifier = Modifier )</ID>
    <ID>UnusedPrivateMember:ShotHistoryViewModel.kt$ShotHistoryViewModel$private fun loadInitialData()</ID>
    <ID>UnusedPrivateMember:ShotRecordingViewModel.kt$ShotRecordingViewModel$private fun clearPersistentRecommendationState()</ID>
    <ID>UnusedPrivateMember:ShotRecordingViewModel.kt$ShotRecordingViewModel$private fun loadCurrentBean()</ID>
    <ID>UnusedPrivateProperty:AddEditBeanScreen.kt$val handleCameraCapture = remember { { if (viewModel.isCameraAvailable(context)) { if (cameraPermissionGranted) { launchCamera() } else { // Request camera permission cameraPermissionLauncher.launch(android.Manifest.permission.CAMERA) } } else { // Camera not available, fallback to gallery launchGallery() } } }</ID>
    <ID>UnusedPrivateProperty:AddEditBeanViewModel.kt$AddEditBeanViewModel$private val getBeanPhotoUseCase: GetBeanPhotoUseCase</ID>
    <ID>UnusedPrivateProperty:BeanManagementViewModel.kt$BeanManagementViewModel$private val stringResourceProvider: StringResourceProvider</ID>
    <ID>UnusedPrivateProperty:EnhancedValidationIntegration.kt$EnhancedShotRecordingViewModel$private val _extractionTimeWarnings = MutableStateFlow&lt;List&lt;String&gt;&gt;(emptyList())</ID>
    <ID>UnusedPrivateProperty:GrindRecommendationPreferencesTest.kt$GrindRecommendationPreferencesTest$val existingRecommendation = SerializableGrindRecommendation.create( beanId = beanId, suggestedGrindSetting = "5.5", adjustmentDirection = "FINER", reason = "Last shot was sour (24s)", recommendedDose = 18.5, basedOnTaste = true, confidence = "HIGH" )</ID>
    <ID>UnusedPrivateProperty:GrindRecommendationPreferencesTest.kt$GrindRecommendationPreferencesTest$val expectedRecommendation = SerializableGrindRecommendation.create( beanId = beanId, suggestedGrindSetting = "5.5", adjustmentDirection = "FINER", reason = "Last shot was sour (24s)", recommendedDose = 18.5, basedOnTaste = true, confidence = "HIGH" )</ID>
    <ID>UnusedPrivateProperty:IntroductionScreen.kt$val availableHeight = maxHeight</ID>
    <ID>UnusedPrivateProperty:IntroductionScreen.kt$val availableWidth = maxWidth</ID>
    <ID>UnusedPrivateProperty:ManageGrindRecommendationUseCase.kt$ManageGrindRecommendationUseCase$val bean = beanResult.getOrNull() ?: return Result.failure( DomainException( DomainErrorCode.BEAN_NOT_FOUND, "Bean data is null for ID: $beanId" ) )</ID>
    <ID>UnusedPrivateProperty:PerformanceMonitor.kt$PerformanceMonitor$private val operationTimes = ConcurrentHashMap&lt;String, MutableList&lt;Long&gt;&gt;()</ID>
    <ID>UnusedPrivateProperty:PerformanceMonitor.kt$PerformanceMonitor.Companion$private const val MAX_SAMPLES = 100</ID>
    <ID>UnusedPrivateProperty:PerformanceMonitor.kt$PerformanceMonitor.Companion$private const val TAG = "PerformanceMonitor"</ID>
    <ID>UnusedPrivateProperty:Shot.kt$Shot$val timeMs = extractionTimeSeconds * 1000L</ID>
    <ID>UnusedPrivateProperty:ShotRecordingViewModel.kt$ShotRecordingViewModel$private val getTastePreselectionUseCase: GetTastePreselectionUseCase</ID>
    <ID>UnusedPrivateProperty:ShotRecordingViewModel.kt$ShotRecordingViewModel$val previousBeans = _activeBeans.value</ID>
    <ID>UnusedPrivateProperty:ShotRepository.kt$ShotRepository$val existingShot = shotDao.getShotById(shot.id) ?: return Result.failure(RepositoryException.NotFoundError("Shot not found"))</ID>
    <ID>UnusedPrivateProperty:ShotRepository.kt$ShotRepository$val existingShot = shotDao.getShotById(shotId) ?: return Result.failure(RepositoryException.NotFoundError("Shot not found"))</ID>
    <ID>VariableNaming:EnhancedValidationIntegration.kt$ValidatedViewModel$protected val _isFormValid = MutableStateFlow(true)</ID>
    <ID>VariableNaming:EnhancedValidationIntegration.kt$ValidatedViewModel$protected val _validationErrors = MutableStateFlow&lt;List&lt;String&gt;&gt;(emptyList())</ID>
    <ID>VariableNaming:ValidationComponents.kt$ValidationUtils$// Brew ratio constants val MIN_TYPICAL_BREW_RATIO = Companion.MIN_TYPICAL_BREW_RATIO</ID>
    <ID>VariableNaming:ValidationComponents.kt$ValidationUtils$// Text validation constants private val MIN_BEAN_NAME_LENGTH = 2</ID>
    <ID>VariableNaming:ValidationComponents.kt$ValidationUtils$// Time validation constants // NOTE: These are duplicated from companion object for instance access val MIN_EXTRACTION_TIME = Companion.MIN_EXTRACTION_TIME</ID>
    <ID>VariableNaming:ValidationComponents.kt$ValidationUtils$private val MAX_BEAN_NAME_LENGTH = 100</ID>
    <ID>VariableNaming:ValidationComponents.kt$ValidationUtils$val MAX_EXTRACTION_TIME = Companion.MAX_EXTRACTION_TIME</ID>
    <ID>VariableNaming:ValidationComponents.kt$ValidationUtils$val MAX_NOTES_LENGTH = Companion.MAX_NOTES_LENGTH</ID>
    <ID>VariableNaming:ValidationComponents.kt$ValidationUtils$val MAX_TYPICAL_BREW_RATIO = Companion.MAX_TYPICAL_BREW_RATIO</ID>
    <ID>VariableNaming:ValidationComponents.kt$ValidationUtils$val OPTIMAL_BREW_RATIO_MAX = Companion.OPTIMAL_BREW_RATIO_MAX</ID>
    <ID>VariableNaming:ValidationComponents.kt$ValidationUtils$val OPTIMAL_BREW_RATIO_MIN = Companion.OPTIMAL_BREW_RATIO_MIN</ID>
    <ID>VariableNaming:ValidationComponents.kt$ValidationUtils$val OPTIMAL_EXTRACTION_TIME_MAX = Companion.OPTIMAL_EXTRACTION_TIME_MAX</ID>
    <ID>VariableNaming:ValidationComponents.kt$ValidationUtils$val OPTIMAL_EXTRACTION_TIME_MIN = Companion.OPTIMAL_EXTRACTION_TIME_MIN</ID>
    <ID>WildcardImport:CalculateGrindAdjustmentUseCase.kt$import com.jodli.coffeeshottimer.domain.model.*</ID>
    <ID>WildcardImport:GrindAdjustmentCard.kt$import androidx.compose.animation.core.*</ID>
    <ID>WildcardImport:GrindAdjustmentCard.kt$import androidx.compose.foundation.layout.*</ID>
    <ID>WildcardImport:GrindAdjustmentCard.kt$import androidx.compose.material.icons.filled.*</ID>
    <ID>WildcardImport:GrindAdjustmentCard.kt$import androidx.compose.material3.*</ID>
    <ID>WildcardImport:GrindAdjustmentCard.kt$import androidx.compose.runtime.*</ID>
    <ID>WildcardImport:GrindAdjustmentCard.kt$import com.jodli.coffeeshottimer.domain.model.*</ID>
    <ID>WildcardImport:RecommendationCard.kt$import androidx.compose.foundation.layout.*</ID>
    <ID>WildcardImport:RecommendationCard.kt$import androidx.compose.material3.*</ID>
    <ID>WildcardImport:ShotRecordedDialog.kt$import androidx.compose.foundation.layout.*</ID>
    <ID>WildcardImport:ShotRecordedDialog.kt$import androidx.compose.material3.*</ID>
    <ID>WildcardImport:ShotRecordedDialog.kt$import androidx.compose.runtime.*</ID>
    <ID>WildcardImport:TasteFeedbackDisplay.kt$import androidx.compose.foundation.layout.*</ID>
    <ID>WildcardImport:TasteFeedbackDisplay.kt$import androidx.compose.material3.*</ID>
    <ID>WildcardImport:TasteFeedbackEditor.kt$import androidx.compose.foundation.layout.*</ID>
    <ID>WildcardImport:TasteFeedbackEditor.kt$import androidx.compose.material3.*</ID>
    <ID>WildcardImport:TasteFeedbackEditor.kt$import androidx.compose.runtime.*</ID>
    <ID>WildcardImport:TasteUtils.kt$import androidx.compose.foundation.layout.*</ID>
    <ID>WildcardImport:TasteUtils.kt$import androidx.compose.material3.*</ID>
    <ID>Wrapping:AppDatabase.kt$AppDatabase.Companion.&lt;no name provided&gt;$(</ID>
    <ID>Wrapping:BasketConfigDao.kt$BasketConfigDao$(</ID>
    <ID>Wrapping:BasketSettingsViewModel.kt$BasketSettingsViewModel$(</ID>
    <ID>Wrapping:BasketSetup.kt$(</ID>
    <ID>Wrapping:BasketSetupStepScreen.kt$(</ID>
    <ID>Wrapping:CommonComponents.kt${ Icon(imageVector = it, contentDescription = null) }</ID>
    <ID>Wrapping:EquipmentSetupFlowViewModel.kt$EquipmentSetupFlowViewModel$(</ID>
    <ID>Wrapping:GetShotStatisticsUseCase.kt$GetShotStatisticsUseCase$(</ID>
    <ID>Wrapping:GrinderConfigDao.kt$GrinderConfigDao$(</ID>
    <ID>Wrapping:Shot.kt$Shot$[</ID>
    <ID>Wrapping:ShotDetailsScreen.kt$(</ID>
  </CurrentIssues>
</SmellBaseline>
